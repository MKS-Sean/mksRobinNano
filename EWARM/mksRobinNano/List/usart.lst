###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        14/Feb/2020  17:06:19
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Src\usart.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Src\usart.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../User/ui/QRENCODE\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\GUI\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\Third_Party\Marlin\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\usart.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\usart.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Src\usart.c
      1          /**
      2            ******************************************************************************
      3            * File Name          : USART.c
      4            * Description        : This file provides code for the configuration
      5            *                      of the USART instances.
      6            ******************************************************************************
      7            *
      8            * Copyright (c) 2018 STMicroelectronics International N.V. 
      9            * All rights reserved.
     10            *
     11            * Redistribution and use in source and binary forms, with or without 
     12            * modification, are permitted, provided that the following conditions are met:
     13            *
     14            * 1. Redistribution of source code must retain the above copyright notice, 
     15            *    this list of conditions and the following disclaimer.
     16            * 2. Redistributions in binary form must reproduce the above copyright notice,
     17            *    this list of conditions and the following disclaimer in the documentation
     18            *    and/or other materials provided with the distribution.
     19            * 3. Neither the name of STMicroelectronics nor the names of other 
     20            *    contributors to this software may be used to endorse or promote products 
     21            *    derived from this software without specific written permission.
     22            * 4. This software, including modifications and/or derivative works of this 
     23            *    software, must execute solely and exclusively on microcontroller or
     24            *    microprocessor devices manufactured by or for STMicroelectronics.
     25            * 5. Redistribution and use of this software other than as permitted under 
     26            *    this license is void and will automatically terminate your rights under 
     27            *    this license. 
     28            *
     29            * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
     30            * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
     31            * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
     32            * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
     33            * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
     34            * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
     35            * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
     36            * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
     37            * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
     38            * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
     39            * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
     40            * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
     41            *
     42            ******************************************************************************
     43            */
     44          
     45          /* Includes ------------------------------------------------------------------*/
     46          #include "usart.h"
     47          
     48          #include "gpio.h"
     49          
     50          /* USER CODE BEGIN 0 */

   \                                 In section .bss, align 4
     51          uint8_t mksRxBuffer[20];
   \                     mksRxBuffer:
   \   00000000                      DS8 20

   \                                 In section .bss, align 1
     52          uint8_t mksUsart3Rx;
   \                     mksUsart3Rx:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     53          uint8_t mksUsart1Rx;
     54          
     55          
     56          
     57          /* USER CODE END 0 */
     58          
     59          UART_HandleTypeDef huart1;
   \                     huart1:
   \   00000000                      DS8 64
   \                     mksUsart1Rx:
   \   00000040                      DS8 1

   \                                 In section .bss, align 4
     60          UART_HandleTypeDef huart3;
   \                     huart3:
   \   00000000                      DS8 64
     61          

   \                                 In section .bss, align 4
     62          DMA_HandleTypeDef hdma_usart1_rx;
   \                     hdma_usart1_rx:
   \   00000000                      DS8 56

   \                                 In section .bss, align 4
     63          DMA_HandleTypeDef hdma_usart1_tx;
   \                     hdma_usart1_tx:
   \   00000000                      DS8 56
     64          
     65          /* USART1 init function */
     66          

   \                                 In section .text, align 2, keep-with-next
     67          void MX_USART1_UART_Init(int readId_1)
     68          {
   \                     MX_USART1_UART_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     69            huart1.Instance = USART1;
   \   00000002   0x....             LDR.N    R1,??DataTable4
   \   00000004   0x....             LDR.N    R2,??DataTable4_1  ;; 0x40013800
   \   00000006   0x600A             STR      R2,[R1, #+0]
     70          	switch(readId_1)
   \   00000008   0x2801             CMP      R0,#+1
   \   0000000A   0xD006             BEQ.N    ??MX_USART1_UART_Init_0
   \   0000000C   0x2802             CMP      R0,#+2
   \   0000000E   0xD008             BEQ.N    ??MX_USART1_UART_Init_1
   \   00000010   0x2804             CMP      R0,#+4
   \   00000012   0xD00A             BEQ.N    ??MX_USART1_UART_Init_2
   \   00000014   0x2805             CMP      R0,#+5
   \   00000016   0xD00B             BEQ.N    ??MX_USART1_UART_Init_3
   \   00000018   0xE00D             B.N      ??MX_USART1_UART_Init_4
     71          	{
     72          		case 1:huart1.Init.BaudRate = 9600;break;
   \                     ??MX_USART1_UART_Init_0: (+1)
   \   0000001A   0xF44F 0x5016      MOV      R0,#+9600
   \   0000001E   0x6048             STR      R0,[R1, #+4]
   \   00000020   0xE00C             B.N      ??MX_USART1_UART_Init_5
     73          		case 2:huart1.Init.BaudRate = 57600;break;
   \                     ??MX_USART1_UART_Init_1: (+1)
   \   00000022   0xF44F 0x4061      MOV      R0,#+57600
   \   00000026   0x6048             STR      R0,[R1, #+4]
   \   00000028   0xE008             B.N      ??MX_USART1_UART_Init_5
     74          		case 3:huart1.Init.BaudRate = 115200;break;
     75          		case 4:huart1.Init.BaudRate = 250000;break;
   \                     ??MX_USART1_UART_Init_2: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable4_2  ;; 0x3d090
   \   0000002C   0x6048             STR      R0,[R1, #+4]
   \   0000002E   0xE005             B.N      ??MX_USART1_UART_Init_5
     76          		case 5:huart1.Init.BaudRate = 1958400;break;
   \                     ??MX_USART1_UART_Init_3: (+1)
   \   00000030   0x....             LDR.N    R0,??DataTable4_3  ;; 0x1de200
   \   00000032   0x6048             STR      R0,[R1, #+4]
   \   00000034   0xE002             B.N      ??MX_USART1_UART_Init_5
     77          		default:huart1.Init.BaudRate = 115200;break;			
   \                     ??MX_USART1_UART_Init_4: (+1)
   \   00000036   0xF44F 0x30E1      MOV      R0,#+115200
   \   0000003A   0x6048             STR      R0,[R1, #+4]
     78          	}
     79          
     80            //huart1.Instance = USART1;
     81            //huart1.Init.BaudRate = 115200;
     82            huart1.Init.WordLength = UART_WORDLENGTH_8B;
   \                     ??MX_USART1_UART_Init_5: (+1)
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x6088             STR      R0,[R1, #+8]
     83            huart1.Init.StopBits = UART_STOPBITS_1;
   \   00000040   0x60C8             STR      R0,[R1, #+12]
     84            huart1.Init.Parity = UART_PARITY_NONE;
   \   00000042   0x6108             STR      R0,[R1, #+16]
     85            huart1.Init.Mode = UART_MODE_TX_RX;
   \   00000044   0x200C             MOVS     R0,#+12
   \   00000046   0x6148             STR      R0,[R1, #+20]
     86            huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x6188             STR      R0,[R1, #+24]
     87            huart1.Init.OverSampling = UART_OVERSAMPLING_16;
   \   0000004C   0x61C8             STR      R0,[R1, #+28]
     88            if (HAL_UART_Init(&huart1) != HAL_OK)
   \   0000004E   0x4608             MOV      R0,R1
   \   00000050   0x.... 0x....      BL       HAL_UART_Init
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD003             BEQ.N    ??MX_USART1_UART_Init_6
     89            {
     90              Error_Handler();
   \   00000058   0xE8BD 0x4001      POP      {R0,LR}
   \   0000005C   0x.... 0x....      B.W      Error_Handler
     91            }
     92          
     93          }
   \                     ??MX_USART1_UART_Init_6: (+1)
   \   00000060   0xBD01             POP      {R0,PC}          ;; return
     94          /* USART3 init function */
     95          

   \                                 In section .text, align 2, keep-with-next
     96          void MX_USART3_UART_Init(void)
     97          {
   \                     MX_USART3_UART_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     98          
     99            huart3.Instance = USART3;
   \   00000002   0x....             LDR.N    R0,??DataTable4_4
   \   00000004   0x....             LDR.N    R1,??DataTable4_5  ;; 0x40004800
   \   00000006   0x6001             STR      R1,[R0, #+0]
    100            huart3.Init.BaudRate = 115200;
   \   00000008   0xF44F 0x31E1      MOV      R1,#+115200
   \   0000000C   0x6041             STR      R1,[R0, #+4]
    101            huart3.Init.WordLength = UART_WORDLENGTH_8B;
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x6081             STR      R1,[R0, #+8]
    102            huart3.Init.StopBits = UART_STOPBITS_1;
   \   00000012   0x60C1             STR      R1,[R0, #+12]
    103            huart3.Init.Parity = UART_PARITY_NONE;
   \   00000014   0x6101             STR      R1,[R0, #+16]
    104            huart3.Init.Mode = UART_MODE_TX_RX;
   \   00000016   0x210C             MOVS     R1,#+12
   \   00000018   0x6141             STR      R1,[R0, #+20]
    105            huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x6181             STR      R1,[R0, #+24]
    106            huart3.Init.OverSampling = UART_OVERSAMPLING_16;
   \   0000001E   0x61C1             STR      R1,[R0, #+28]
    107            if (HAL_UART_Init(&huart3) != HAL_OK)
   \   00000020   0x.... 0x....      BL       HAL_UART_Init
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD003             BEQ.N    ??MX_USART3_UART_Init_0
    108            {
    109              Error_Handler();
   \   00000028   0xE8BD 0x4001      POP      {R0,LR}
   \   0000002C   0x.... 0x....      B.W      Error_Handler
    110            }
    111          
    112          }
   \                     ??MX_USART3_UART_Init_0: (+1)
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
    113          

   \                                 In section .text, align 2, keep-with-next
    114          void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
    115          {
   \                     HAL_UART_MspInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    116          
    117            GPIO_InitTypeDef GPIO_InitStruct;
    118            if(uartHandle->Instance==USART1)
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40013800
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xD12D             BNE.N    ??HAL_UART_MspInit_0
    119            {
    120            /* USER CODE BEGIN USART1_MspInit 0 */
    121          
    122            /* USER CODE END USART1_MspInit 0 */
    123              /* Peripheral clock enable */
    124              __HAL_RCC_USART1_CLK_ENABLE();
   \   0000000C   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40021018
   \   0000000E   0x6801             LDR      R1,[R0, #+0]
   \   00000010   0xF441 0x4180      ORR      R1,R1,#0x4000
   \   00000014   0x6001             STR      R1,[R0, #+0]
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF400 0x4080      AND      R0,R0,#0x4000
   \   0000001C   0x9000             STR      R0,[SP, #+0]
   \   0000001E   0x9800             LDR      R0,[SP, #+0]
    125            
    126              /**USART1 GPIO Configuration    
    127              PA9     ------> USART1_TX
    128              PA10     ------> USART1_RX 
    129              */
    130              GPIO_InitStruct.Pin = WIFI_TX_Pin;
   \   00000020   0xF44F 0x7000      MOV      R0,#+512
   \   00000024   0x9001             STR      R0,[SP, #+4]
    131              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x9002             STR      R0,[SP, #+8]
    132              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
   \   0000002A   0x2003             MOVS     R0,#+3
   \   0000002C   0x9004             STR      R0,[SP, #+16]
    133              HAL_GPIO_Init(WIFI_TX_GPIO_Port, &GPIO_InitStruct);
   \   0000002E   0x....             LDR.N    R4,??DataTable4_7  ;; 0x40010800
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0x4620             MOV      R0,R4
   \   00000034   0x.... 0x....      BL       HAL_GPIO_Init
    134          
    135              GPIO_InitStruct.Pin = WIFI_RX_Pin;
   \   00000038   0xF44F 0x6080      MOV      R0,#+1024
   \   0000003C   0x9001             STR      R0,[SP, #+4]
    136              GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \   0000003E   0x2000             MOVS     R0,#+0
   \   00000040   0x9002             STR      R0,[SP, #+8]
    137              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   00000042   0x9003             STR      R0,[SP, #+12]
    138              HAL_GPIO_Init(WIFI_RX_GPIO_Port, &GPIO_InitStruct);
   \   00000044   0xA901             ADD      R1,SP,#+4
   \   00000046   0x4620             MOV      R0,R4
   \   00000048   0x.... 0x....      BL       HAL_GPIO_Init
    139          		#if 0
    140          		if(huart1.Init.BaudRate == 1958400)
    141          		{
    142            				HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 4, 0);
    143            				HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);					
    144          					/* Peripheral DMA init*/
    145          					hdma_usart1_rx.Instance = DMA1_Channel5;
    146          					hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
    147          					hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
    148          					hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
    149          					hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
    150          					hdma_usart1_rx.Init.MemDataAlignment = DMA_PDATAALIGN_BYTE;
    151          					hdma_usart1_rx.Init.Mode = DMA_NORMAL;
    152          					hdma_usart1_rx.Init.Priority = DMA_PRIORITY_LOW;
    153          
    154          					if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
    155          					{
    156          						Error_Handler();
    157          					}
    158          		
    159          					__HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
    160          		}
    161          		else
    162          			#endif
    163          		if(huart1.Init.BaudRate == 115200)
   \   0000004C   0x....             LDR.N    R0,??DataTable4
   \   0000004E   0x6840             LDR      R0,[R0, #+4]
   \   00000050   0xF5B0 0x3FE1      CMP      R0,#+115200
   \   00000054   0xD133             BNE.N    ??HAL_UART_MspInit_1
    164          		{
    165              	/* Peripheral interrupt init */
    166              	HAL_NVIC_SetPriority(USART1_IRQn, 3, 0);
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x2103             MOVS     R1,#+3
   \   0000005A   0x2025             MOVS     R0,#+37
   \   0000005C   0x.... 0x....      BL       HAL_NVIC_SetPriority
    167              	HAL_NVIC_EnableIRQ(USART1_IRQn);
   \   00000060   0x2025             MOVS     R0,#+37
   \   00000062   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
   \   00000066   0xE02A             B.N      ??HAL_UART_MspInit_1
    168          		}
    169            /* USER CODE BEGIN USART1_MspInit 1 */
    170          
    171            /* USER CODE END USART1_MspInit 1 */
    172            }
    173            else if(uartHandle->Instance==USART3)
   \                     ??HAL_UART_MspInit_0: (+1)
   \   00000068   0x....             LDR.N    R1,??DataTable4_5  ;; 0x40004800
   \   0000006A   0x4288             CMP      R0,R1
   \   0000006C   0xD127             BNE.N    ??HAL_UART_MspInit_1
    174            {
    175            /* USER CODE BEGIN USART3_MspInit 0 */
    176          
    177            /* USER CODE END USART3_MspInit 0 */
    178              /* Peripheral clock enable */
    179              __HAL_RCC_USART3_CLK_ENABLE();
   \   0000006E   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40021018
   \   00000070   0x6841             LDR      R1,[R0, #+4]
   \   00000072   0xF441 0x2180      ORR      R1,R1,#0x40000
   \   00000076   0x6041             STR      R1,[R0, #+4]
   \   00000078   0x6840             LDR      R0,[R0, #+4]
   \   0000007A   0xF400 0x2080      AND      R0,R0,#0x40000
   \   0000007E   0x9000             STR      R0,[SP, #+0]
   \   00000080   0x9800             LDR      R0,[SP, #+0]
    180            
    181              /**USART3 GPIO Configuration    
    182              PB10     ------> USART3_TX
    183              PB11     ------> USART3_RX 
    184              */
    185              GPIO_InitStruct.Pin = TX0_Pin;
   \   00000082   0xF44F 0x6080      MOV      R0,#+1024
   \   00000086   0x9001             STR      R0,[SP, #+4]
    186              GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
   \   00000088   0x2002             MOVS     R0,#+2
   \   0000008A   0x9002             STR      R0,[SP, #+8]
    187              GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
   \   0000008C   0x2003             MOVS     R0,#+3
   \   0000008E   0x9004             STR      R0,[SP, #+16]
    188              HAL_GPIO_Init(TX0_GPIO_Port, &GPIO_InitStruct);
   \   00000090   0x....             LDR.N    R4,??DataTable4_8  ;; 0x40010c00
   \   00000092   0xA901             ADD      R1,SP,#+4
   \   00000094   0x4620             MOV      R0,R4
   \   00000096   0x.... 0x....      BL       HAL_GPIO_Init
    189          
    190              GPIO_InitStruct.Pin = RX0_Pin;
   \   0000009A   0xF44F 0x6000      MOV      R0,#+2048
   \   0000009E   0x9001             STR      R0,[SP, #+4]
    191              GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x9002             STR      R0,[SP, #+8]
    192              GPIO_InitStruct.Pull = GPIO_NOPULL;
   \   000000A4   0x9003             STR      R0,[SP, #+12]
    193              HAL_GPIO_Init(RX0_GPIO_Port, &GPIO_InitStruct);
   \   000000A6   0xA901             ADD      R1,SP,#+4
   \   000000A8   0x4620             MOV      R0,R4
   \   000000AA   0x.... 0x....      BL       HAL_GPIO_Init
    194          
    195              /* Peripheral interrupt init */
    196              HAL_NVIC_SetPriority(USART3_IRQn, 3, 0);
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x2103             MOVS     R1,#+3
   \   000000B2   0x2027             MOVS     R0,#+39
   \   000000B4   0x.... 0x....      BL       HAL_NVIC_SetPriority
    197              HAL_NVIC_EnableIRQ(USART3_IRQn);
   \   000000B8   0x2027             MOVS     R0,#+39
   \   000000BA   0x.... 0x....      BL       HAL_NVIC_EnableIRQ
    198            /* USER CODE BEGIN USART3_MspInit 1 */
    199          
    200            /* USER CODE END USART3_MspInit 1 */
    201            }
    202          }
   \                     ??HAL_UART_MspInit_1: (+1)
   \   000000BE   0xB006             ADD      SP,SP,#+24
   \   000000C0   0xBD10             POP      {R4,PC}          ;; return
    203          

   \                                 In section .text, align 2, keep-with-next
    204          void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
    205          {
   \                     HAL_UART_MspDeInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    206          
    207            if(uartHandle->Instance==USART1)
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40013800
   \   00000006   0x4288             CMP      R0,R1
   \   00000008   0xD10E             BNE.N    ??HAL_UART_MspDeInit_0
    208            {
    209            /* USER CODE BEGIN USART1_MspDeInit 0 */
    210          
    211            /* USER CODE END USART1_MspDeInit 0 */
    212              /* Peripheral clock disable */
    213              __HAL_RCC_USART1_CLK_DISABLE();
   \   0000000A   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40021018
   \   0000000C   0x6801             LDR      R1,[R0, #+0]
   \   0000000E   0xF421 0x4180      BIC      R1,R1,#0x4000
   \   00000012   0x6001             STR      R1,[R0, #+0]
    214            
    215              /**USART1 GPIO Configuration    
    216              PA9     ------> USART1_TX
    217              PA10     ------> USART1_RX 
    218              */
    219              HAL_GPIO_DeInit(GPIOA, WIFI_TX_Pin|WIFI_RX_Pin);
   \   00000014   0xF44F 0x61C0      MOV      R1,#+1536
   \   00000018   0x....             LDR.N    R0,??DataTable4_7  ;; 0x40010800
   \   0000001A   0x.... 0x....      BL       HAL_GPIO_DeInit
    220          
    221              /* Peripheral interrupt Deinit*/
    222              HAL_NVIC_DisableIRQ(USART1_IRQn);
   \   0000001E   0x2025             MOVS     R0,#+37
   \   00000020   0xE8BD 0x4002      POP      {R1,LR}
   \   00000024   0x.... 0x....      B.W      HAL_NVIC_DisableIRQ
    223          
    224            /* USER CODE BEGIN USART1_MspDeInit 1 */
    225          
    226            /* USER CODE END USART1_MspDeInit 1 */
    227            }
    228            else if(uartHandle->Instance==USART3)
   \                     ??HAL_UART_MspDeInit_0: (+1)
   \   00000028   0x....             LDR.N    R1,??DataTable4_5  ;; 0x40004800
   \   0000002A   0x4288             CMP      R0,R1
   \   0000002C   0xD10E             BNE.N    ??HAL_UART_MspDeInit_1
    229            {
    230            /* USER CODE BEGIN USART3_MspDeInit 0 */
    231          
    232            /* USER CODE END USART3_MspDeInit 0 */
    233              /* Peripheral clock disable */
    234              __HAL_RCC_USART3_CLK_DISABLE();
   \   0000002E   0x....             LDR.N    R0,??DataTable4_6  ;; 0x40021018
   \   00000030   0x6841             LDR      R1,[R0, #+4]
   \   00000032   0xF421 0x2180      BIC      R1,R1,#0x40000
   \   00000036   0x6041             STR      R1,[R0, #+4]
    235            
    236              /**USART3 GPIO Configuration    
    237              PB10     ------> USART3_TX
    238              PB11     ------> USART3_RX 
    239              */
    240              HAL_GPIO_DeInit(GPIOB, TX0_Pin|RX0_Pin);
   \   00000038   0xF44F 0x6140      MOV      R1,#+3072
   \   0000003C   0x....             LDR.N    R0,??DataTable4_8  ;; 0x40010c00
   \   0000003E   0x.... 0x....      BL       HAL_GPIO_DeInit
    241          
    242              /* Peripheral interrupt Deinit*/
    243              HAL_NVIC_DisableIRQ(USART3_IRQn);
   \   00000042   0x2027             MOVS     R0,#+39
   \   00000044   0xE8BD 0x4002      POP      {R1,LR}
   \   00000048   0x.... 0x....      B.W      HAL_NVIC_DisableIRQ
    244          
    245            /* USER CODE BEGIN USART3_MspDeInit 1 */
    246          
    247            /* USER CODE END USART3_MspDeInit 1 */
    248            }
    249          } 
   \                     ??HAL_UART_MspDeInit_1: (+1)
   \   0000004C   0xBD01             POP      {R0,PC}          ;; return
    250          

   \                                 In section .text, align 2, keep-with-next
    251          void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
    252          {
    253          	if(huart->Instance==USART1)
   \                     HAL_UART_RxCpltCallback: (+1)
   \   00000000   0x6800             LDR      R0,[R0, #+0]
   \   00000002   0x....             LDR.N    R1,??DataTable4_1  ;; 0x40013800
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xD105             BNE.N    ??HAL_UART_RxCpltCallback_0
    254          	{
    255          			HAL_UART_Receive_IT(&huart1,&mksUsart1Rx,1);
   \   00000008   0x....             LDR.N    R0,??DataTable4
   \   0000000A   0x2201             MOVS     R2,#+1
   \   0000000C   0xF100 0x0140      ADD      R1,R0,#+64
   \   00000010   0x.... 0x....      B.W      HAL_UART_Receive_IT
    256          	}
    257          }
   \                     ??HAL_UART_RxCpltCallback_0: (+1)
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     huart1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x40013800         DC32     0x40013800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x0003D090         DC32     0x3d090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x001DE200         DC32     0x1de200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     huart3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40004800         DC32     0x40004800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40021018         DC32     0x40021018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x40010800         DC32     0x40010800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x40010C00         DC32     0x40010c00
    258          
    259          
    260          /* USER CODE BEGIN 1 */
    261          
    262          /* USER CODE END 1 */
    263          
    264          /**
    265            * @}
    266            */
    267          
    268          /**
    269            * @}
    270            */
    271          
    272          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   HAL_UART_MspDeInit
         8   -> HAL_GPIO_DeInit
         0   -> HAL_NVIC_DisableIRQ
      32   HAL_UART_MspInit
        32   -> HAL_GPIO_Init
        32   -> HAL_NVIC_EnableIRQ
        32   -> HAL_NVIC_SetPriority
       0   HAL_UART_RxCpltCallback
         0   -> HAL_UART_Receive_IT
       8   MX_USART1_UART_Init
         0   -> Error_Handler
         8   -> HAL_UART_Init
       8   MX_USART3_UART_Init
         0   -> Error_Handler
         8   -> HAL_UART_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
      78  HAL_UART_MspDeInit
     194  HAL_UART_MspInit
      22  HAL_UART_RxCpltCallback
      98  MX_USART1_UART_Init
      50  MX_USART3_UART_Init
      56  hdma_usart1_rx
      56  hdma_usart1_tx
      65  huart1
          mksUsart1Rx
      64  huart3
      20  mksRxBuffer
       1  mksUsart3Rx

 
 262 bytes in section .bss
 478 bytes in section .text
 
 478 bytes of CODE memory
 262 bytes of DATA memory

Errors: none
Warnings: none
