###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        14/Feb/2020  17:05:15
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../User/ui/QRENCODE\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\GUI\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\Third_Party\Marlin\
#        -Om --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\draw_operate.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\draw_operate.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "PROGBAR.h"
      4          #include "draw_operate.h"
      5          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\EWARM\..\Middlewares\Third_Party\Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Inc\mks_cfg.h",613  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_en.h",135  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_CN            "่งฃ้ค็ปๅฎ?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_s_cn.h",218  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 213)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ๅพๆๅฐๆฉๆซๅๅ,\n่ซๆ<้ฒๆ>ๆ<้ๆ>"
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_t_cn.h",127  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_ru.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_ru.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 225)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_fr.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_fr.h",233  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 229)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_sp.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_it.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_it.h",229  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 224)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Multi_language.h",651  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 644)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Multi_language.h",859  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 853)

  #define Simple_Dec"ผ๕ษู"
                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_ui.h",495  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "หูถศ"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_ui.h",550  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          547)

  #define Complex_Speed "หูถศ"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_ui.h",551  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          548)
      6          #include "fontLib.h"
      7          #include "LISTBOX.h"
      8          #include "text.h"
      9          #include "draw_printing.h"
     10          #include "draw_pause_ui.h"
     11          #include "draw_pre_heat.h"
     12          #include "draw_fan.h"
     13          #include "draw_change_speed.h"
     14          #include "draw_printing_moremenu.h"
     15          //#include "mks_tft_com.h"
     16          #include "mks_cfg.h"
     17          #include "draw_move_motor.h"
     18          #include "draw_extrusion.h"
     19          #include "draw_filamentchange.h"
     20          
     21          #include "marlin.h"

  #define strcpy_P(dest, src) strcpy((dest), (src))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",23  Warning[Pe047]: 
          incompatible redefinition of macro "strcpy_P" (declared at line 93
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define strstr_P(a, b) strstr((a), (b))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",26  Warning[Pe047]: 
          incompatible redefinition of macro "strstr_P" (declared at line 94
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define sprintf_P(s, f, ...) sprintf((s), (f), __VA_ARGS__)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",28  Warning[Pe047]: 
          incompatible redefinition of macro "sprintf_P" (declared at line 95
          of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\Marlin_export.h")

  #define pgm_read_word_near(addr) pgm_read_word(addr)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\arduino\stm32\cores\arduino\avr\pgmspace.h",38  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_word_near" (declared at
          line 65 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\Marlin_export.h")

    }
    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\marlin.h",537  Warning[Pe940]: 
          missing return statement at end of non-void function
          "position_is_reachable_IS_KINEMATIC"
     22          #include "mks_reprint.h"

  #define SD_DETECT_INVERTED false
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\cardreader.h",27  Warning[Pe047]: 
          incompatible redefinition of macro "SD_DETECT_INVERTED" (declared at
          line 524 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\Configuration_adv.h")

  #define PSTR(s) s
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\cardreader.h",31  Warning[Pe047]: 
          incompatible redefinition of macro "PSTR" (declared at line 63 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\EWARM\..\Middlewares\Third_Party\Marlin\marlin.h")

  #define pgm_read_byte(x) (*(char*)x)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\cardreader.h",32  Warning[Pe047]: 
          incompatible redefinition of macro "pgm_read_byte" (declared at line
          64 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\Marlin_export.h")

      static constexpr int8_t next_block_index(const int8_t block_index) { return BLOCK_MOD(block_index + 1); }
             ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\planner.h",627  Warning[Pe815]: 
          type qualifier on return type is meaningless

      static constexpr int8_t prev_block_index(const int8_t block_index) { return BLOCK_MOD(block_index - 1); }
             ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\planner.h",628  Warning[Pe815]: 
          type qualifier on return type is meaningless

        target_temperature[HOTEND_INDEX] = celsius;
                                         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\temperature.h",406  Warning[Pa093]: 
          implicit conversion from floating point to integer

          target_temperature_bed =
                                 ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\temperature.h",414  Warning[Pa093]: 
          implicit conversion from floating point to integer

  #define LONG_FILENAME_LENGTH (13*MAX_VFAT_ENTRIES+1)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\cardreader.h",61  Warning[Pe047]: 
          incompatible redefinition of macro "LONG_FILENAME_LENGTH" (declared
          at line 119 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\SdFatConfig.h")

  #define ALLOW_DEPRECATED_FUNCTIONS 0
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\SdFat.h",635  Warning[Pe047]: 
          incompatible redefinition of macro "ALLOW_DEPRECATED_FUNCTIONS"
          (declared at line 67 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\SdFatConfig.h")

  #define SPI_SD_INIT_RATE 11
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Middlewares\Third_Party\Marlin\SdFat.h",647  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_SD_INIT_RATE" (declared at
          line 79 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\Middlewares\Third_Party\Marlin\SdFatConfig.h")
     23          #ifndef GUI_FLASH
     24          #define GUI_FLASH
     25          #endif
     26          
     27          extern float feedrate_mm_s;
     28          
     29          

   \                                 In section .bss, align 4
     30          static GUI_HWIN hOperateWnd, hStopDlgWnd;
     31          
     32          extern int8_t curFilePath[30];
     33          extern FILE_PRINT_STATE gCurFileState ;
     34          extern void reset_tx_fifo();
     35          
     36          extern GUI_FLASH const GUI_FONT GUI_FontHZ_fontHz18;
     37          extern int X_ADD, X_INTERVAL;
     38          
     39          static PROGBAR_Handle printingBar;
     40          
     41          static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
     42          static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
     43          static BUTTON_STRUCT buttonFilament,buttonAuto_Off,buttonExtrude,buttonMove;
     44          
     45          //extern PR_STATUS printerStaus;
     46          extern uint8_t flash_preview_begin;
     47          extern uint8_t from_flash_pic;
     48          extern uint8_t default_preview_flg;
     49          
     50          uint8_t pause_flag;
     51          
     52          uint8_t IsChooseAutoShutdown = 0;
   \                     IsChooseAutoShutdown:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
   \   00000004                      DS8 24
   \   0000001C                      DS8 24

   \                                 In section .bss, align 2
   \                     printingBar:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     textPrintTemp1:
   \   00000000                      DS8 2
   \   00000002                      DS8 2

   \                                 In section .bss, align 4
   \                     buttonSpeed:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonRet:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonFilament:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
   \                     buttonMove:
   \   00000000                      DS8 24

   \                                 In section .bss, align 1
   \                     pause_flag:
   \   00000000                      DS8 1
     53          
     54          //void Autoshutdown_display();
     55          

   \                                 In section .text, align 2, keep-with-next
     56          static void cbOperateWin(WM_MESSAGE * pMsg) {
     57          
     58          switch (pMsg->MsgId)
   \                     _Z12cbOperateWinP10WM_MESSAGE: (+1)
   \   00000000   0x6801             LDR      R1,[R0, #+0]
   \   00000002   0x290C             CMP      R1,#+12
   \   00000004   0xD100             BNE.N    ??cbOperateWin_0
   \   00000006   0x4770             BX       LR
   \                     ??cbOperateWin_0: (+1)
   \   00000008   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   0000000C   0x290D             CMP      R1,#+13
   \   0000000E   0xF000 0x811C      BEQ.W    ??cbOperateWin_1
   \   00000012   0x290F             CMP      R1,#+15
   \   00000014   0xF000 0x8119      BEQ.W    ??cbOperateWin_1
   \   00000018   0x2926             CMP      R1,#+38
   \   0000001A   0xF040 0x8112      BNE.W    ??cbOperateWin_2
     59          {
     60          	case WM_PAINT:
     61          		//GUI_SetColor(gCfgItems.state_background_color);
     62          		//GUI_DrawRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     63          		//GUI_SetColor(gCfgItems.state_background_color);
     64          		//GUI_FillRect(LCD_WIDTH/4+X_ADD, 0, LCD_WIDTH *3 / 4-X_INTERVAL, imgHeight /2 -15);
     65          		
     66          		break;
     67          	case WM_TOUCH:
     68          	 	
     69          		break;
     70          	case WM_TOUCH_CHILD:
     71          		
     72          		break;
     73          		
     74          	case WM_NOTIFY_PARENT:
     75          		#if 1
     76          		if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \   0000001E   0x6881             LDR      R1,[R0, #+8]
   \   00000020   0x2902             CMP      R1,#+2
   \   00000022   0xF040 0x8112      BNE.W    ??cbOperateWin_1
     77          		{
     78          			#if !defined(TFT35)
     79          			if(pMsg->hWinSrc == buttonPause.btnHandle)
     80          			{
     81          				stop_print_time();
     82                          		if(mksCfg.extruders==2)
     83          				{
     84          					gCfgItems.curSprayerChoose_bak= active_extruder;
     85          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
     86          				}
     87          				if(mksReprint.mks_printer_state == MKS_WORKING)
     88          				{
     89          					//MX_I2C1_Init(100000);
     90          	      				card.pauseSDPrint();
     91          	      				print_job_timer.pause();  
     92          	                    		mksReprint.mks_printer_state = MKS_PAUSING;
     93          	                    		last_disp_state = OPERATE_UI;
     94          					Clear_operate();
     95          					draw_pause();
     96          				}
     97          			}
     98          			else if(pMsg->hWinSrc == buttonStop.btnHandle)
     99          			{	
    100          				last_disp_state = OPERATE_UI;
    101          				Clear_operate();
    102          				draw_dialog(DIALOG_TYPE_STOP);
    103          			}
    104          			else 
    105          				#endif
    106          		    if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   00000026   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   0000002A   0x.... 0x....      LDR.W    R2,??DataTable21
   \   0000002E   0xF9B2 0x1000      LDRSH    R1,[R2, #+0]
   \   00000032   0x4288             CMP      R0,R1
   \   00000034   0xD117             BNE.N    ??cbOperateWin_3
    107          			{
    108          			#if defined(TFT35)
    109          				if(from_flash_pic==1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable21_1
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD104             BNE.N    ??cbOperateWin_4
    110          					flash_preview_begin = 1;
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable21_2
   \   00000046   0x7008             STRB     R0,[R1, #+0]
   \   00000048   0xE003             B.N      ??cbOperateWin_5
    111          				else
    112          					default_preview_flg = 1;
   \                     ??cbOperateWin_4: (+1)
   \   0000004A   0x2001             MOVS     R0,#+1
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable21_3
   \   00000050   0x7008             STRB     R0,[R1, #+0]
    113          			#endif
    114          				last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_5: (+1)
   \   00000052   0x2005             MOVS     R0,#+5
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   00000058   0x7008             STRB     R0,[R1, #+0]
    115          				Clear_operate();
   \   0000005A   0x.... 0x....      BL       Clear_operate
    116          				//draw_return_ui();
    117          				draw_printing();
   \   0000005E   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000062   0x.... 0x....      B.W      draw_printing
    118          			}
    119          			else if(pMsg->hWinSrc == buttonTemperature.btnHandle)
   \                     ??cbOperateWin_3: (+1)
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable21_5
   \   0000006A   0xF9B1 0x3004      LDRSH    R3,[R1, #+4]
   \   0000006E   0x4298             CMP      R0,R3
   \   00000070   0xD117             BNE.N    ??cbOperateWin_6
    120          			{
    121          				if(mksCfg.extruders==2)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable21_6
   \   00000076   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   0000007A   0x2802             CMP      R0,#+2
   \   0000007C   0xD107             BNE.N    ??cbOperateWin_7
    122          				{
    123          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable21_7
   \   00000082   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable21_8
   \   0000008A   0xF881 0x009D      STRB     R0,[R1, #+157]
    124          				}			
    125          				last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_7: (+1)
   \   0000008E   0x2005             MOVS     R0,#+5
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   00000094   0x7008             STRB     R0,[R1, #+0]
    126          				Clear_operate();
   \   00000096   0x.... 0x....      BL       Clear_operate
    127          				draw_preHeat();
   \   0000009A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000009E   0x.... 0x....      B.W      draw_preHeat
    128          			}
    129          	            #if defined(TFT35)
    130          				else if(pMsg->hWinSrc == buttonFan.btnHandle)
   \                     ??cbOperateWin_6: (+1)
   \   000000A2   0xF9B2 0x2018      LDRSH    R2,[R2, #+24]
   \   000000A6   0x4290             CMP      R0,R2
   \   000000A8   0xD109             BNE.N    ??cbOperateWin_8
    131          				{
    132          					last_disp_state = OPERATE_UI;
   \   000000AA   0x2005             MOVS     R0,#+5
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
    133          					Clear_operate();
   \   000000B2   0x.... 0x....      BL       Clear_operate
    134          					draw_fan();
   \   000000B6   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   000000BA   0x.... 0x....      B.W      draw_fan
    135          				}
    136          	            #endif
    137          			else if(pMsg->hWinSrc == buttonFilament.btnHandle)
   \                     ??cbOperateWin_8: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R2,??DataTable21_9
   \   000000C2   0xF9B2 0x3000      LDRSH    R3,[R2, #+0]
   \   000000C6   0x4298             CMP      R0,R3
   \   000000C8   0xD14B             BNE.N    ??cbOperateWin_9
    138          			{
    139          				if(mksCfg.extruders==2)
   \   000000CA   0x.... 0x....      LDR.W    R4,??DataTable21_8
   \   000000CE   0x.... 0x....      LDR.W    R5,??DataTable21_7
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable21_6
   \   000000D6   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   000000DA   0x2802             CMP      R0,#+2
   \   000000DC   0xD10A             BNE.N    ??cbOperateWin_10
    140          				{
    141          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   000000DE   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   000000E2   0xF884 0x009D      STRB     R0,[R4, #+157]
    142          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 					                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable21_10
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x.... 0x....      BL       __aeabi_f2iz
   \   000000F0   0xF8A4 0x00B2      STRH     R0,[R4, #+178]
    143          				}
    144          
    145          				if(mksReprint.mks_printer_state == MKS_WORKING)
   \                     ??cbOperateWin_10: (+1)
   \   000000F4   0x.... 0x....      LDR.W    R6,??DataTable21_11
   \   000000F8   0x.... 0x....      LDR.W    R7,??DataTable21_12
   \   000000FC   0x.... 0x....      LDR.W    R8,??DataTable21_4
   \   00000100   0xF897 0x00E0      LDRB     R0,[R7, #+224]
   \   00000104   0x28A7             CMP      R0,#+167
   \   00000106   0xD11C             BNE.N    ??cbOperateWin_11
    146          				{
    147          					stop_print_time();
   \   00000108   0x.... 0x....      BL       stop_print_time
    148          					last_disp_state = OPERATE_UI;
   \   0000010C   0x2005             MOVS     R0,#+5
   \   0000010E   0xF888 0x0000      STRB     R0,[R8, #+0]
    149          					//MX_I2C1_Init();
    150                				card.pauseSDPrint();
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable21_13
   \   00000116   0x.... 0x....      BL       _ZN10CardReader12pauseSDPrintEv
    151                				print_job_timer.pause();					
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable21_14
   \   0000011E   0x.... 0x....      BL       _ZN9Stopwatch5pauseEv
    152          					mksReprint.mks_printer_state = MKS_PAUSING;				
   \   00000122   0x20A9             MOVS     R0,#+169
   \   00000124   0xF887 0x00E0      STRB     R0,[R7, #+224]
    153          					Clear_operate();
   \   00000128   0x.... 0x....      BL       Clear_operate
    154          					gCfgItems.desireSprayerTempBak = thermalManager.target_temperature[active_extruder];
   \   0000012C   0x7828             LDRB     R0,[R5, #+0]
   \   0000012E   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
   \   00000132   0x.... 0x....      BL       __aeabi_i2f
   \   00000136   0xF8C4 0x013C      STR      R0,[R4, #+316]
    155          					draw_FilamentChange();
   \   0000013A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000013E   0x.... 0x....      B.W      draw_FilamentChange
    156          				}
    157          				else
    158          				{
    159          					last_disp_state = OPERATE_UI;
   \                     ??cbOperateWin_11: (+1)
   \   00000142   0x2005             MOVS     R0,#+5
   \   00000144   0xF888 0x0000      STRB     R0,[R8, #+0]
    160          					Clear_operate();
   \   00000148   0x.... 0x....      BL       Clear_operate
    161                              gCfgItems.desireSprayerTempBak = thermalManager.target_temperature[active_extruder];
   \   0000014C   0x7828             LDRB     R0,[R5, #+0]
   \   0000014E   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
   \   00000152   0x.... 0x....      BL       __aeabi_i2f
   \   00000156   0xF8C4 0x013C      STR      R0,[R4, #+316]
    162          					draw_FilamentChange();					
   \   0000015A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000015E   0x.... 0x....      B.W      draw_FilamentChange
    163          				}
    164          
    165          			}			
    166          			else if (pMsg->hWinSrc == buttonMore_printing.btnHandle)
   \                     ??cbOperateWin_9: (+1)
   \   00000162   0x.... 0x....      LDR.W    R3,??DataTable21_15
   \   00000166   0xF9B3 0x4018      LDRSH    R4,[R3, #+24]
   \   0000016A   0x42A0             CMP      R0,R4
   \   0000016C   0xD109             BNE.N    ??cbOperateWin_12
    167          			{
    168          				last_disp_state = OPERATE_UI;
   \   0000016E   0x2005             MOVS     R0,#+5
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   00000174   0x7008             STRB     R0,[R1, #+0]
    169          				Clear_operate();
   \   00000176   0x.... 0x....      BL       Clear_operate
    170          				draw_printmore();	
   \   0000017A   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000017E   0x.... 0x....      B.W      draw_printmore
    171          			}
    172                      #if defined(MKS_ROBIN2) ||defined(MKS_ROBIN_NANO)
    173          			else if(pMsg->hWinSrc == buttonSpeed.btnHandle)
   \                     ??cbOperateWin_12: (+1)
   \   00000182   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000186   0x4298             CMP      R0,R3
   \   00000188   0xD109             BNE.N    ??cbOperateWin_13
    174          			{
    175          				last_disp_state = OPERATE_UI;
   \   0000018A   0x2005             MOVS     R0,#+5
   \   0000018C   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   00000190   0x7008             STRB     R0,[R1, #+0]
    176          				Clear_operate();
   \   00000192   0x.... 0x....      BL       Clear_operate
    177          				//if(gCfgItems.sprayerNum==2)
    178          				//{
    179          				//	gCfgItems.curSprayerChoose_bak= gCfgItems.curSprayerChoose;
    180          				//}
    181          				draw_changeSpeed();
   \   00000196   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000019A   0x.... 0x....      B.W      draw_changeSpeed
    182          
    183          			}
    184          			else if(pMsg->hWinSrc == buttonExtrude.btnHandle)
   \                     ??cbOperateWin_13: (+1)
   \   0000019E   0xF9B2 0x2018      LDRSH    R2,[R2, #+24]
   \   000001A2   0x4290             CMP      R0,R2
   \   000001A4   0xD123             BNE.N    ??cbOperateWin_14
    185          			{
    186          				last_disp_state = OPERATE_UI;
   \   000001A6   0x2005             MOVS     R0,#+5
   \   000001A8   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   000001AC   0x7008             STRB     R0,[R1, #+0]
    187          				Clear_operate();
   \   000001AE   0x.... 0x....      BL       Clear_operate
    188          				if(mksCfg.extruders==2)
   \   000001B2   0x.... 0x....      LDR.W    R5,??DataTable21_10
   \   000001B6   0x.... 0x....      LDR.W    R4,??DataTable21_8
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable21_6
   \   000001BE   0xF890 0x00F7      LDRB     R0,[R0, #+247]
   \   000001C2   0x2802             CMP      R0,#+2
   \   000001C4   0xD10A             BNE.N    ??cbOperateWin_15
    189          				{
    190          					gCfgItems.curSprayerChoose_bak= active_extruder;
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable21_7
   \   000001CA   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000001CE   0xF884 0x009D      STRB     R0,[R4, #+157]
    191          					gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 					                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000001D2   0x6828             LDR      R0,[R5, #+0]
   \   000001D4   0x.... 0x....      BL       __aeabi_f2iz
   \   000001D8   0xF8A4 0x00B2      STRH     R0,[R4, #+178]
    192          				}
    193          				gCfgItems.extruSpeed_bak = feedrate_mm_s;
                 				                         ^
Warning[Pa093]: implicit conversion from floating point to integer
   \                     ??cbOperateWin_15: (+1)
   \   000001DC   0x6828             LDR      R0,[R5, #+0]
   \   000001DE   0x.... 0x....      BL       __aeabi_f2iz
   \   000001E2   0xF884 0x00B0      STRB     R0,[R4, #+176]
    194          				draw_extrusion();
   \   000001E6   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   000001EA   0x.... 0x....      B.W      draw_extrusion
    195          			}	
    196          			else if(pMsg->hWinSrc == buttonMove.btnHandle)
   \                     ??cbOperateWin_14: (+1)
   \   000001EE   0x.... 0x....      LDR.W    R2,??DataTable21_16
   \   000001F2   0xF9B2 0x2000      LDRSH    R2,[R2, #+0]
   \   000001F6   0x4290             CMP      R0,R2
   \   000001F8   0xD112             BNE.N    ??cbOperateWin_16
    197          			{
    198          				gCfgItems.moveSpeed_bak = feedrate_mm_s;
                 				                        ^
Warning[Pa093]: implicit conversion from floating point to integer
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable21_10
   \   000001FE   0x6800             LDR      R0,[R0, #+0]
   \   00000200   0x.... 0x....      BL       __aeabi_f2iz
   \   00000204   0x.... 0x....      LDR.W    R1,??DataTable21_8
   \   00000208   0xF8A1 0x00B2      STRH     R0,[R1, #+178]
    199          				
    200          				last_disp_state = OPERATE_UI;
   \   0000020C   0x2005             MOVS     R0,#+5
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable21_4
   \   00000212   0x7008             STRB     R0,[R1, #+0]
    201          				Clear_operate();
   \   00000214   0x.... 0x....      BL       Clear_operate
    202          				draw_move_motor();
   \   00000218   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   0000021C   0x.... 0x....      B.W      draw_move_motor
    203          			}
    204          			#if 1
    205          			else if(pMsg->hWinSrc == buttonAuto_Off.btnHandle)
   \                     ??cbOperateWin_16: (+1)
   \   00000220   0xF9B1 0x201C      LDRSH    R2,[R1, #+28]
   \   00000224   0x4290             CMP      R0,R2
   \   00000226   0xD110             BNE.N    ??cbOperateWin_1
    206          			{
    207          				if(IsChooseAutoShutdown == 1)
   \   00000228   0x7808             LDRB     R0,[R1, #+0]
   \   0000022A   0x2801             CMP      R0,#+1
   \   0000022C   0xD104             BNE.N    ??cbOperateWin_17
    208          				{
    209          						IsChooseAutoShutdown = 0;		
   \   0000022E   0x2000             MOVS     R0,#+0
   \   00000230   0x7008             STRB     R0,[R1, #+0]
    210          						Autoshutdown_display2();
   \   00000232   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000236   0x....             B.N      Autoshutdown_display2
    211          				}
    212          				else
    213          				{
    214          						IsChooseAutoShutdown = 1;
   \                     ??cbOperateWin_17: (+1)
   \   00000238   0x2001             MOVS     R0,#+1
   \   0000023A   0x7008             STRB     R0,[R1, #+0]
    215          						Autoshutdown_display2();
   \   0000023C   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000240   0x....             B.N      Autoshutdown_display2
    216          				}
    217          			}	
    218          			#endif
    219                      #endif
    220          		}
    221          		#endif
    222          		break;
    223          		
    224          	default:
    225          		WM_DefaultProc(pMsg);
   \                     ??cbOperateWin_2: (+1)
   \   00000242   0xE8BD 0x41F0      POP      {R4-R8,LR}
   \   00000246   0x.... 0x....      B.W      WM_DefaultProc
    226          	}
    227          }
   \                     ??cbOperateWin_1: (+1)
   \   0000024A   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    228          
    229          #if 0
    230          void draw_operate()
    231          {
    232          
    233          	int i;
    234          
    235          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
    236          	{
    237          		disp_state_stack._disp_index++;
    238          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
    239          	}
    240          	
    241          	disp_state = OPERATE_UI;
    242          		
    243          	GUI_SetBkColor(gCfgItems.background_color);
    244          	GUI_SetColor(gCfgItems.title_color);
    245          	GUI_Clear();
    246          
    247          	
    248          	//GUI_UC_SetEncodeNone();
    249          	//GUI_SetFont(&GUI_FontHZ16);
    250          	GUI_DispStringAt(creat_title_text(), TITLE_XPOS, TITLE_YPOS);
    251          	//GUI_SetFont(&FONT_TITLE);
    252          	//GUI_UC_SetEncodeUTF8();
    253          	
    254          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
    255          
    256          	buttonTemperature.btnHandle = BUTTON_CreateEx(INTERVAL_V,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 301);
    257          	buttonFan.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    258          	buttonFilament.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,0,BTN_X_PIXEL,BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 303);
    259          
    260          	if((mksReprint.mks_printer_state == MKS_PAUSING)||(mksReprint.mks_printer_state == MKS_PAUSED)||(mksReprint.mks_printer_state ==MKS_REPRINTING)||(mksReprint.mks_printer_state ==MKS_REPRINTED))
    261          	{
    262          		buttonSpeed.btnHandle = 0;
    263          		buttonAuto_Off.btnHandle = 0;
    264          		
    265          		buttonExtrude.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
    266          		buttonMove.btnHandle = BUTTON_CreateEx(INTERVAL_V,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);		
    267          		buttonMore_printing.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    268          
    269          		if(gCfgItems.print_finish_close_machine_flg == 1)
    270          		{
    271          			buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 107);
    272          		}
    273          
    274          	}
    275          	else //if(mksReprint.mks_printer_state ==MKS_WORKING)
    276          	{
    277          			buttonExtrude.btnHandle = 0;
    278          			buttonMove.btnHandle = 0;
    279          			
    280          			buttonSpeed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
    281          			buttonMore_printing.btnHandle = BUTTON_CreateEx(INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    282          		
    283          			if(gCfgItems.print_finish_close_machine_flg == 1)
    284          			{
    285          				buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
    286          			}
    287          	}
    288          
    289          	
    290          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 306);
    291          
    292          	#if VERSION_WITH_PIC	
    293          
    294          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_opt_temp.bin",1);
    295          	BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed.bin",1);
    296          	BUTTON_SetBmpFileName(buttonFan.btnHandle, "bmp_fan.bin",1);
    297          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filament.bin",1);
    298          	BUTTON_SetBmpFileName(buttonExtrude.btnHandle, "bmp_extrude_opr.bin",1);
    299          	BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_move_opr.bin",1);
    300          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more_opr.bin",1);
    301          	if(gCfgItems.print_finish_close_machine_flg == 1)
    302          	{
    303          		if(IsChooseAutoShutdown == 1)
    304          		{
    305          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
    306          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
    307          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);	
    308          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_textcolor);
    309          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_textcolor);
    310          			
    311          			if(gCfgItems.multiple_language != 0)
    312          			{	
    313          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
    314          			}
    315          
    316          		}
    317          		else
    318          		{
    319          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
    320          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
    321          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
    322          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_textcolor);
    323          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_textcolor);			
    324          			if(gCfgItems.multiple_language != 0)
    325          			{	
    326          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
    327          			}			
    328          		}
    329          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle,0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    330          
    331          		
    332          	}
    333          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
    334          	
    335          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    336          	BUTTON_SetBitmapEx(buttonSpeed.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    337          	BUTTON_SetBitmapEx(buttonFan.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    338          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    339          	BUTTON_SetBitmapEx(buttonExtrude.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    340          	BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    341          #if 0
    342          	if(gCfgItems.print_finish_close_machine_flg == 1)
    343          	{
    344          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    345          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    346          	}
    347          	else
    348          #endif
    349          	{
    350          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    351          	}
    352          	
    353          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    354          
    355          	BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    356          	BUTTON_SetBkColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    357          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    358          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    359          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    360          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    361          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    362          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    363          	BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    364          	BUTTON_SetTextColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    365          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    366          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    367          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    368          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    369          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    370          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    371          
    372          
    373          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    374          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    375          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    376          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    377          	
    378          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    379          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    380          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    381          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    382          
    383          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    384          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    385          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    386          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    387          
    388          
    389          
    390          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    391          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
    392          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    393          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    394          
    395          	if(gCfgItems.multiple_language != 0)
    396          	{
    397          		BUTTON_SetText(buttonFan.btnHandle, operation_menu.fan);
    398          		BUTTON_SetText(buttonFilament.btnHandle, operation_menu.filament);
    399          		BUTTON_SetText(buttonTemperature.btnHandle, operation_menu.temp);
    400          		BUTTON_SetText(buttonMore_printing.btnHandle, operation_menu.more);
    401          		BUTTON_SetText(buttonSpeed.btnHandle, operation_menu.speed);
    402          		BUTTON_SetText(buttonExtrude.btnHandle, operation_menu.extr);
    403          		BUTTON_SetText(buttonMove.btnHandle, operation_menu.move);
    404          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
    405          	}
    406          
    407          	
    408          
    409          	#endif
    410          #if 0
    411          	if(gCfgItems.print_finish_close_machine_flg == 1)
    412          	{
    413          		Autoshutdown_display();
    414          	}
    415          #endif
    416          #if 0
    417          	Fill_State_BK = TEXT_CreateEx(LCD_WIDTH  / 4+X_ADD, 0, LCD_WIDTH / 2-X_INTERVAL, imgHeight / 2-X_INTERVAL, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT0, " ");
    418          	TEXT_SetBkColor(Fill_State_BK, gCfgItems.state_background_color);
    419          
    420          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 50, 120, LCD_WIDTH / 4 - 30, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    421          
    422          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2+80 , 120, LCD_WIDTH / 4 - 90, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    423          	
    424          
    425          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    426          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    427          	
    428          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 40,  LCD_WIDTH / 2 - 10, 45, hOperateWnd, WM_CF_SHOW, 0, 0);
    429          	
    430          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    431          	
    432          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    433          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz18);
    434          	
    435          	
    436          	PROGBAR_SetValue(printingBar, get_printing_rate(srcfp));
    437                
    438                 
    439          	disp_temp_operate();
    440          #endif	
    441          	//GUI_Exec();
    442          	
    443          
    444          
    445          	
    446          }
    447          
    448          #endif
    449          
    450          #if defined(TFT35)

   \                                 In section .text, align 2, keep-with-next
    451          void draw_operate()
    452          {
   \                     draw_operate: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
    453          #if 1
    454          	int i;
                 	    ^
Warning[Pe177]: variable "i" was declared but never referenced

  static GUI_HWIN hOperateWnd, hStopDlgWnd;
                               ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp",30  Warning[Pe177]: 
          variable "hStopDlgWnd" was declared but never referenced

  static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
                                                     ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp",41  Warning[Pe177]: 
          variable "printStopDlgText" was declared but never referenced

  static TEXT_Handle textPrintTemp1, textPrintTemp2, printStopDlgText,Fill_State_BK;
                                                                      ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp",41  Warning[Pe177]: 
          variable "Fill_State_BK" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                       ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonPause" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonStop" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                                                                                                ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonOk" was declared but never referenced

  static BUTTON_STRUCT buttonPause, buttonStop, buttonTemperature, buttonSpeed, buttonMore_printing, buttonRet, buttonOk, buttonCancle,buttonFan;
                                                                                                                          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_operate.cpp",42  Warning[Pe177]: 
          variable "buttonCancle" was declared but never referenced
    455          
    456          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable21_17
   \   0000000A   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A05             CMP      R2,#+5
   \   00000012   0xD005             BEQ.N    ??draw_operate_0
    457          	{
    458          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    459          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
   \   0000001A   0x2205             MOVS     R2,#+5
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    460          	}
    461          	
    462          	disp_state = OPERATE_UI;
   \                     ??draw_operate_0: (+1)
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable21_18
   \   00000026   0x7008             STRB     R0,[R1, #+0]
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   0000002C   0x6840             LDR      R0,[R0, #+4]
    463          		
    464          	GUI_SetBkColor(gCfgItems.background_color);
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    465          	GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x.... 0x....      LDR.W    R4,??DataTable21_19
   \   00000036   0x6860             LDR      R0,[R4, #+4]
   \   00000038   0x.... 0x....      BL       GUI_SetColor
    466          	GUI_Clear();
   \   0000003C   0x.... 0x....      BL       GUI_Clear
    467          
    468          	
    469          	//GUI_UC_SetEncodeNone();
    470          	//GUI_SetFont(&GUI_FontHZ16);
    471          	GUI_DispStringAt(creat_title_text(), TITLE_XPOS, TITLE_YPOS);
   \   00000040   0x.... 0x....      BL       creat_title_text
   \   00000044   0x2205             MOVS     R2,#+5
   \   00000046   0x2103             MOVS     R1,#+3
   \   00000048   0x.... 0x....      BL       GUI_DispStringAt
    472          	//GUI_SetFont(&FONT_TITLE);
    473          	//GUI_UC_SetEncodeUTF8();
    474          	
    475          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x9002             STR      R0,[SP, #+8]
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable21_20
   \   00000054   0x9001             STR      R0,[SP, #+4]
   \   00000056   0x2002             MOVS     R0,#+2
   \   00000058   0x9000             STR      R0,[SP, #+0]
   \   0000005A   0xF44F 0x738E      MOV      R3,#+284
   \   0000005E   0xF44F 0x72F0      MOV      R2,#+480
   \   00000062   0x2124             MOVS     R1,#+36
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x.... 0x....      BL       WM_CreateWindow
   \   0000006A   0x.... 0x....      LDR.W    R5,??DataTable21_5
   \   0000006E   0x8068             STRH     R0,[R5, #+2]
    476          
    477          	buttonTemperature.btnHandle = BUTTON_CreateEx(INTERVAL_V,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 301);
   \   00000070   0xF240 0x112D      MOVW     R1,#+301
   \   00000074   0x9103             STR      R1,[SP, #+12]
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0x9102             STR      R1,[SP, #+8]
   \   0000007A   0x2102             MOVS     R1,#+2
   \   0000007C   0x9101             STR      R1,[SP, #+4]
   \   0000007E   0x9000             STR      R0,[SP, #+0]
   \   00000080   0x238C             MOVS     R3,#+140
   \   00000082   0x2275             MOVS     R2,#+117
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x2002             MOVS     R0,#+2
   \   00000088   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000008C   0x80A8             STRH     R0,[R5, #+4]
    478          	buttonFan.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,0,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   0000008E   0x.... 0x....      LDR.W    R6,??DataTable21
   \   00000092   0xF44F 0x7097      MOV      R0,#+302
   \   00000096   0x9003             STR      R0,[SP, #+12]
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0x9002             STR      R0,[SP, #+8]
   \   0000009C   0x2002             MOVS     R0,#+2
   \   0000009E   0x9001             STR      R0,[SP, #+4]
   \   000000A0   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   000000A4   0x9000             STR      R0,[SP, #+0]
   \   000000A6   0x238C             MOVS     R3,#+140
   \   000000A8   0x2275             MOVS     R2,#+117
   \   000000AA   0x2100             MOVS     R1,#+0
   \   000000AC   0x2079             MOVS     R0,#+121
   \   000000AE   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000B2   0x8330             STRH     R0,[R6, #+24]
    479          	buttonFilament.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,0,BTN_X_PIXEL,BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 303);
   \   000000B4   0x.... 0x....      LDR.W    R7,??DataTable21_9
   \   000000B8   0xF240 0x102F      MOVW     R0,#+303
   \   000000BC   0x9003             STR      R0,[SP, #+12]
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x9002             STR      R0,[SP, #+8]
   \   000000C2   0x2002             MOVS     R0,#+2
   \   000000C4   0x9001             STR      R0,[SP, #+4]
   \   000000C6   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   000000CA   0x9000             STR      R0,[SP, #+0]
   \   000000CC   0x238C             MOVS     R3,#+140
   \   000000CE   0x2275             MOVS     R2,#+117
   \   000000D0   0x2100             MOVS     R1,#+0
   \   000000D2   0x20F0             MOVS     R0,#+240
   \   000000D4   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000D8   0x8038             STRH     R0,[R7, #+0]
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable21_12
   \   000000DE   0xF890 0x00E0      LDRB     R0,[R0, #+224]
   \   000000E2   0x.... 0x....      LDR.W    R8,??DataTable21_15
   \   000000E6   0x.... 0x....      LDR.W    R9,??DataTable21_16
   \   000000EA   0x28A9             CMP      R0,#+169
   \   000000EC   0xD005             BEQ.N    ??draw_operate_1
   \   000000EE   0x28AA             CMP      R0,#+170
   \   000000F0   0xD003             BEQ.N    ??draw_operate_1
   \   000000F2   0x28AB             CMP      R0,#+171
   \   000000F4   0xD001             BEQ.N    ??draw_operate_1
   \   000000F6   0x28AC             CMP      R0,#+172
   \   000000F8   0xD14E             BNE.N    ??draw_operate_2
    480          
    481          	if((mksReprint.mks_printer_state == MKS_PAUSING)||(mksReprint.mks_printer_state == MKS_PAUSED)||(mksReprint.mks_printer_state ==MKS_REPRINTING)||(mksReprint.mks_printer_state ==MKS_REPRINTED))
    482          	{
    483          		buttonSpeed.btnHandle = 0;
   \                     ??draw_operate_1: (+1)
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    484          		buttonAuto_Off.btnHandle = 0;
   \   00000100   0x83A8             STRH     R0,[R5, #+28]
    485          		
    486          		buttonExtrude.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
   \   00000102   0x206A             MOVS     R0,#+106
   \   00000104   0x9003             STR      R0,[SP, #+12]
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x9002             STR      R0,[SP, #+8]
   \   0000010A   0x2002             MOVS     R0,#+2
   \   0000010C   0x9001             STR      R0,[SP, #+4]
   \   0000010E   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000112   0x9000             STR      R0,[SP, #+0]
   \   00000114   0x238C             MOVS     R3,#+140
   \   00000116   0x2275             MOVS     R2,#+117
   \   00000118   0x2100             MOVS     R1,#+0
   \   0000011A   0xF240 0x1067      MOVW     R0,#+359
   \   0000011E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000122   0x8338             STRH     R0,[R7, #+24]
    487          		buttonMove.btnHandle = BUTTON_CreateEx(INTERVAL_V,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);		
   \   00000124   0x206A             MOVS     R0,#+106
   \   00000126   0x9003             STR      R0,[SP, #+12]
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x9002             STR      R0,[SP, #+8]
   \   0000012C   0x2002             MOVS     R0,#+2
   \   0000012E   0x9001             STR      R0,[SP, #+4]
   \   00000130   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0x238C             MOVS     R3,#+140
   \   00000138   0x2275             MOVS     R2,#+117
   \   0000013A   0x218E             MOVS     R1,#+142
   \   0000013C   0x2002             MOVS     R0,#+2
   \   0000013E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000142   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    488          		buttonMore_printing.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   00000146   0xF44F 0x7097      MOV      R0,#+302
   \   0000014A   0x9003             STR      R0,[SP, #+12]
   \   0000014C   0x2000             MOVS     R0,#+0
   \   0000014E   0x9002             STR      R0,[SP, #+8]
   \   00000150   0x2002             MOVS     R0,#+2
   \   00000152   0x9001             STR      R0,[SP, #+4]
   \   00000154   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000158   0x9000             STR      R0,[SP, #+0]
   \   0000015A   0x238C             MOVS     R3,#+140
   \   0000015C   0x2275             MOVS     R2,#+117
   \   0000015E   0x218E             MOVS     R1,#+142
   \   00000160   0x2079             MOVS     R0,#+121
   \   00000162   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000166   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    489          
    490          		if(gCfgItems.print_finish_close_machine_flg == 1)
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   0000016E   0xF890 0x00D9      LDRB     R0,[R0, #+217]
   \   00000172   0x2801             CMP      R0,#+1
   \   00000174   0xD14F             BNE.N    ??draw_operate_3
    491          		{
    492          			buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*2+INTERVAL_V*3,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 107);
   \   00000176   0x206B             MOVS     R0,#+107
   \   00000178   0x9003             STR      R0,[SP, #+12]
   \   0000017A   0x2000             MOVS     R0,#+0
   \   0000017C   0x9002             STR      R0,[SP, #+8]
   \   0000017E   0x2002             MOVS     R0,#+2
   \   00000180   0x9001             STR      R0,[SP, #+4]
   \   00000182   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000186   0x9000             STR      R0,[SP, #+0]
   \   00000188   0x238C             MOVS     R3,#+140
   \   0000018A   0x2275             MOVS     R2,#+117
   \   0000018C   0x218E             MOVS     R1,#+142
   \   0000018E   0x20F0             MOVS     R0,#+240
   \   00000190   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000194   0x83A8             STRH     R0,[R5, #+28]
   \   00000196   0xE03E             B.N      ??draw_operate_3
    493          		}
    494          
    495          	}
    496          	else //if(mksReprint.mks_printer_state ==MKS_WORKING)
    497          	{
    498          			buttonExtrude.btnHandle = 0;
   \                     ??draw_operate_2: (+1)
   \   00000198   0x2000             MOVS     R0,#+0
   \   0000019A   0x8338             STRH     R0,[R7, #+24]
    499          			buttonMove.btnHandle = 0;
   \   0000019C   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    500          			
    501          			buttonSpeed.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4,0,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 106);
   \   000001A0   0x206A             MOVS     R0,#+106
   \   000001A2   0x9003             STR      R0,[SP, #+12]
   \   000001A4   0x2000             MOVS     R0,#+0
   \   000001A6   0x9002             STR      R0,[SP, #+8]
   \   000001A8   0x2002             MOVS     R0,#+2
   \   000001AA   0x9001             STR      R0,[SP, #+4]
   \   000001AC   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   000001B0   0x9000             STR      R0,[SP, #+0]
   \   000001B2   0x238C             MOVS     R3,#+140
   \   000001B4   0x2275             MOVS     R2,#+117
   \   000001B6   0x2100             MOVS     R1,#+0
   \   000001B8   0xF240 0x1067      MOVW     R0,#+359
   \   000001BC   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001C0   0xF8A8 0x0000      STRH     R0,[R8, #+0]
    502          			buttonMore_printing.btnHandle = BUTTON_CreateEx(INTERVAL_V, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   000001C4   0xF44F 0x7097      MOV      R0,#+302
   \   000001C8   0x9003             STR      R0,[SP, #+12]
   \   000001CA   0x2000             MOVS     R0,#+0
   \   000001CC   0x9002             STR      R0,[SP, #+8]
   \   000001CE   0x2002             MOVS     R0,#+2
   \   000001D0   0x9001             STR      R0,[SP, #+4]
   \   000001D2   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   000001D6   0x9000             STR      R0,[SP, #+0]
   \   000001D8   0x238C             MOVS     R3,#+140
   \   000001DA   0x2275             MOVS     R2,#+117
   \   000001DC   0x218E             MOVS     R1,#+142
   \   000001DE   0x2002             MOVS     R0,#+2
   \   000001E0   0x.... 0x....      BL       BUTTON_CreateEx
   \   000001E4   0xF8A8 0x0018      STRH     R0,[R8, #+24]
    503          		
    504          			if(gCfgItems.print_finish_close_machine_flg == 1)
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   000001EC   0xF890 0x00D9      LDRB     R0,[R0, #+217]
   \   000001F0   0x2801             CMP      R0,#+1
   \   000001F2   0xD110             BNE.N    ??draw_operate_3
    505          			{
    506          				buttonAuto_Off.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL+INTERVAL_V*2,BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL,BTN_Y_PIXEL,hOperateWnd, BUTTON_CF_SHOW, 0, 302);
   \   000001F4   0xF44F 0x7097      MOV      R0,#+302
   \   000001F8   0x9003             STR      R0,[SP, #+12]
   \   000001FA   0x2000             MOVS     R0,#+0
   \   000001FC   0x9002             STR      R0,[SP, #+8]
   \   000001FE   0x2002             MOVS     R0,#+2
   \   00000200   0x9001             STR      R0,[SP, #+4]
   \   00000202   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000206   0x9000             STR      R0,[SP, #+0]
   \   00000208   0x238C             MOVS     R3,#+140
   \   0000020A   0x2275             MOVS     R2,#+117
   \   0000020C   0x218E             MOVS     R1,#+142
   \   0000020E   0x2079             MOVS     R0,#+121
   \   00000210   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000214   0x83A8             STRH     R0,[R5, #+28]
    507          			}
    508          	}
    509          
    510          	
    511          	buttonRet.btnHandle = BUTTON_CreateEx(BTN_X_PIXEL*3+INTERVAL_V*4, BTN_Y_PIXEL+INTERVAL_H,BTN_X_PIXEL, BTN_Y_PIXEL, hOperateWnd, BUTTON_CF_SHOW, 0, 306);
   \                     ??draw_operate_3: (+1)
   \   00000216   0xF44F 0x7099      MOV      R0,#+306
   \   0000021A   0x9003             STR      R0,[SP, #+12]
   \   0000021C   0x2000             MOVS     R0,#+0
   \   0000021E   0x9002             STR      R0,[SP, #+8]
   \   00000220   0x2002             MOVS     R0,#+2
   \   00000222   0x9001             STR      R0,[SP, #+4]
   \   00000224   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000228   0x9000             STR      R0,[SP, #+0]
   \   0000022A   0x238C             MOVS     R3,#+140
   \   0000022C   0x2275             MOVS     R2,#+117
   \   0000022E   0x218E             MOVS     R1,#+142
   \   00000230   0xF240 0x1067      MOVW     R0,#+359
   \   00000234   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000238   0x8030             STRH     R0,[R6, #+0]
    512          
    513          	#if VERSION_WITH_PIC	
    514          
    515          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_temp.bin",1);
   \   0000023A   0x2201             MOVS     R2,#+1
   \   0000023C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_temp.bin">`
   \   00000240   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000244   0x.... 0x....      BL       BUTTON_SetBmpFileName
    516          	BUTTON_SetBmpFileName(buttonSpeed.btnHandle, "bmp_speed.bin",1);
   \   00000248   0x2201             MOVS     R2,#+1
   \   0000024A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_speed.bin">`
   \   0000024E   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000252   0x.... 0x....      BL       BUTTON_SetBmpFileName
    517          	BUTTON_SetBmpFileName(buttonFan.btnHandle, "bmp_fan.bin",1);
   \   00000256   0x2201             MOVS     R2,#+1
   \   00000258   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_fan.bin">`
   \   0000025C   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000260   0x.... 0x....      BL       BUTTON_SetBmpFileName
    518          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filamentchange.bin",1);
   \   00000264   0x2201             MOVS     R2,#+1
   \   00000266   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_filamentchange.bin">`
   \   0000026A   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000026E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    519          	BUTTON_SetBmpFileName(buttonExtrude.btnHandle, "bmp_extrude_opr.bin",1);
   \   00000272   0x2201             MOVS     R2,#+1
   \   00000274   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_extrude_opr.bin">`
   \   00000278   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000027C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    520          	BUTTON_SetBmpFileName(buttonMove.btnHandle, "bmp_move_opr.bin",1);
   \   00000280   0x2201             MOVS     R2,#+1
   \   00000282   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_move_opr.bin">`
   \   00000286   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000028A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    521          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more_opr.bin",1);
   \   0000028E   0x2201             MOVS     R2,#+1
   \   00000290   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_more_opr.bin">`
   \   00000294   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000298   0x.... 0x....      BL       BUTTON_SetBmpFileName
    522          	if(gCfgItems.print_finish_close_machine_flg == 1)
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   000002A0   0xF890 0x00D9      LDRB     R0,[R0, #+217]
   \   000002A4   0x2801             CMP      R0,#+1
   \   000002A6   0xD169             BNE.N    ??draw_operate_4
    523          	{
    524          		if(IsChooseAutoShutdown == 1)
   \   000002A8   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002AC   0x7829             LDRB     R1,[R5, #+0]
   \   000002AE   0x2901             CMP      R1,#+1
   \   000002B0   0xD12A             BNE.N    ??draw_operate_5
    525          		{
    526          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
   \   000002B2   0x2201             MOVS     R2,#+1
   \   000002B4   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_auto_off.bin">`
   \   000002B8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    527          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
   \   000002BC   0x6B22             LDR      R2,[R4, #+48]
   \   000002BE   0x2101             MOVS     R1,#+1
   \   000002C0   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002C4   0x.... 0x....      BL       BUTTON_SetBkColor
    528          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);	
   \   000002C8   0x6B22             LDR      R2,[R4, #+48]
   \   000002CA   0x2100             MOVS     R1,#+0
   \   000002CC   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002D0   0x.... 0x....      BL       BUTTON_SetBkColor
    529          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_textcolor);
   \   000002D4   0x6B62             LDR      R2,[R4, #+52]
   \   000002D6   0x2101             MOVS     R1,#+1
   \   000002D8   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002DC   0x.... 0x....      BL       BUTTON_SetTextColor
    530          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_textcolor);
   \   000002E0   0x6B62             LDR      R2,[R4, #+52]
   \   000002E2   0x2100             MOVS     R1,#+0
   \   000002E4   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000002E8   0x.... 0x....      BL       BUTTON_SetTextColor
    531          			
    532          			if(gCfgItems.multiple_language != 0)
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   000002F0   0xF890 0x01BF      LDRB     R0,[R0, #+447]
   \   000002F4   0x2800             CMP      R0,#+0
   \   000002F6   0xD031             BEQ.N    ??draw_operate_6
    533          			{	
    534          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
   \   000002F8   0x.... 0x....      LDR.W    R0,??DataTable21_21
   \   000002FC   0x6A81             LDR      R1,[R0, #+40]
   \   000002FE   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000302   0x.... 0x....      BL       BUTTON_SetText
   \   00000306   0xE029             B.N      ??draw_operate_6
    535          			}
    536          
    537          		}
    538          		else
    539          		{
    540          			BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
   \                     ??draw_operate_5: (+1)
   \   00000308   0x2201             MOVS     R2,#+1
   \   0000030A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_manual_off.bin">`
   \   0000030E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    541          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
   \   00000312   0x6AA2             LDR      R2,[R4, #+40]
   \   00000314   0x2101             MOVS     R1,#+1
   \   00000316   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000031A   0x.... 0x....      BL       BUTTON_SetBkColor
    542          			BUTTON_SetBkColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
   \   0000031E   0x6AA2             LDR      R2,[R4, #+40]
   \   00000320   0x2100             MOVS     R1,#+0
   \   00000322   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000326   0x.... 0x....      BL       BUTTON_SetBkColor
    543          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_textcolor);
   \   0000032A   0x6AE2             LDR      R2,[R4, #+44]
   \   0000032C   0x2101             MOVS     R1,#+1
   \   0000032E   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000332   0x.... 0x....      BL       BUTTON_SetTextColor
    544          			BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_state_textcolor);			
   \   00000336   0x6AE2             LDR      R2,[R4, #+44]
   \   00000338   0x2100             MOVS     R1,#+0
   \   0000033A   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000033E   0x.... 0x....      BL       BUTTON_SetTextColor
    545          			if(gCfgItems.multiple_language != 0)
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable21_8
   \   00000346   0xF890 0x01BF      LDRB     R0,[R0, #+447]
   \   0000034A   0x2800             CMP      R0,#+0
   \   0000034C   0xD006             BEQ.N    ??draw_operate_6
    546          			{	
    547          				BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
   \   0000034E   0x.... 0x....      LDR.W    R0,??DataTable21_21
   \   00000352   0x6AC1             LDR      R1,[R0, #+44]
   \   00000354   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000358   0x.... 0x....      BL       BUTTON_SetText
    548          			}			
    549          		}
    550          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle,0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \                     ??draw_operate_6: (+1)
   \   0000035C   0x.... 0x....      LDR.W    R0,??DataTable21_22
   \   00000360   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000364   0x9000             STR      R0,[SP, #+0]
   \   00000366   0x.... 0x....      LDR.W    R0,??DataTable21_23
   \   0000036A   0xF990 0x3000      LDRSB    R3,[R0, #+0]
   \   0000036E   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   00000372   0x2100             MOVS     R1,#+0
   \   00000374   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000378   0x.... 0x....      BL       BUTTON_SetBitmapEx
    551          
    552          		
    553          	}
    554          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",1);
   \                     ??draw_operate_4: (+1)
   \   0000037C   0x2201             MOVS     R2,#+1
   \   0000037E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_return.bin">`
   \   00000382   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000386   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \   0000038A   0x.... 0x....      LDR.W    R10,??DataTable21_23
   \   0000038E   0x.... 0x....      LDR.W    R11,??DataTable21_22
   \   00000392   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000396   0x9000             STR      R0,[SP, #+0]
   \   00000398   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000039C   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   000003A0   0x2100             MOVS     R1,#+0
   \   000003A2   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
    555          	
    556          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003A6   0x.... 0x....      BL       BUTTON_SetBitmapEx
    557          	BUTTON_SetBitmapEx(buttonSpeed.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003AA   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003AE   0x9000             STR      R0,[SP, #+0]
   \   000003B0   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003B4   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   000003B8   0x2100             MOVS     R1,#+0
   \   000003BA   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000003BE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    558          	BUTTON_SetBitmapEx(buttonFan.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003C2   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003C6   0x9000             STR      R0,[SP, #+0]
   \   000003C8   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003CC   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   000003D0   0x2100             MOVS     R1,#+0
   \   000003D2   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000003D6   0x.... 0x....      BL       BUTTON_SetBitmapEx
    559          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003DA   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003DE   0x9000             STR      R0,[SP, #+0]
   \   000003E0   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003E4   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   000003E8   0x2100             MOVS     R1,#+0
   \   000003EA   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000003EE   0x.... 0x....      BL       BUTTON_SetBitmapEx
    560          	BUTTON_SetBitmapEx(buttonExtrude.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   000003F2   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   000003F6   0x9000             STR      R0,[SP, #+0]
   \   000003F8   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   000003FC   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   00000400   0x2100             MOVS     R1,#+0
   \   00000402   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000406   0x.... 0x....      BL       BUTTON_SetBitmapEx
    561          	BUTTON_SetBitmapEx(buttonMove.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000040A   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000040E   0x9000             STR      R0,[SP, #+0]
   \   00000410   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000414   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   00000418   0x2100             MOVS     R1,#+0
   \   0000041A   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000041E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    562          #if 0
    563          	if(gCfgItems.print_finish_close_machine_flg == 1)
    564          	{
    565          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    566          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    567          	}
    568          	else
    569          #endif
    570          	{
    571          		BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000422   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   00000426   0x9000             STR      R0,[SP, #+0]
   \   00000428   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   0000042C   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   00000430   0x2100             MOVS     R1,#+0
   \   00000432   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000436   0x.... 0x....      BL       BUTTON_SetBitmapEx
    572          	}
    573          	
    574          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000043A   0xF99B 0x0000      LDRSB    R0,[R11, #+0]
   \   0000043E   0x9000             STR      R0,[SP, #+0]
   \   00000440   0xF99A 0x3000      LDRSB    R3,[R10, #+0]
   \   00000444   0x.... 0x....      LDR.W    R2,??DataTable21_24
   \   00000448   0x2100             MOVS     R1,#+0
   \   0000044A   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000044E   0x.... 0x....      BL       BUTTON_SetBitmapEx
    575          
    576          	BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000452   0x6A22             LDR      R2,[R4, #+32]
   \   00000454   0x2101             MOVS     R1,#+1
   \   00000456   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000045A   0x.... 0x....      BL       BUTTON_SetBkColor
    577          	BUTTON_SetBkColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000045E   0x6A22             LDR      R2,[R4, #+32]
   \   00000460   0x2100             MOVS     R1,#+0
   \   00000462   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000466   0x.... 0x....      BL       BUTTON_SetBkColor
    578          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   0000046A   0x6A22             LDR      R2,[R4, #+32]
   \   0000046C   0x2101             MOVS     R1,#+1
   \   0000046E   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   00000472   0x.... 0x....      BL       BUTTON_SetBkColor
    579          	BUTTON_SetBkColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   00000476   0x6A22             LDR      R2,[R4, #+32]
   \   00000478   0x2100             MOVS     R1,#+0
   \   0000047A   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000047E   0x.... 0x....      BL       BUTTON_SetBkColor
    580          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000482   0x6A22             LDR      R2,[R4, #+32]
   \   00000484   0x2101             MOVS     R1,#+1
   \   00000486   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000048A   0x.... 0x....      BL       BUTTON_SetBkColor
    581          	BUTTON_SetBkColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000048E   0x6A22             LDR      R2,[R4, #+32]
   \   00000490   0x2100             MOVS     R1,#+0
   \   00000492   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   00000496   0x.... 0x....      BL       BUTTON_SetBkColor
    582          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   0000049A   0x6A22             LDR      R2,[R4, #+32]
   \   0000049C   0x2101             MOVS     R1,#+1
   \   0000049E   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000004A2   0x.... 0x....      BL       BUTTON_SetBkColor
    583          	BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000004A6   0x6A22             LDR      R2,[R4, #+32]
   \   000004A8   0x2100             MOVS     R1,#+0
   \   000004AA   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000004AE   0x.... 0x....      BL       BUTTON_SetBkColor
    584          	BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000004B2   0x6A62             LDR      R2,[R4, #+36]
   \   000004B4   0x2101             MOVS     R1,#+1
   \   000004B6   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000004BA   0x.... 0x....      BL       BUTTON_SetTextColor
    585          	BUTTON_SetTextColor(buttonTemperature.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000004BE   0x6A62             LDR      R2,[R4, #+36]
   \   000004C0   0x2100             MOVS     R1,#+0
   \   000004C2   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000004C6   0x.... 0x....      BL       BUTTON_SetTextColor
    586          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000004CA   0x6A62             LDR      R2,[R4, #+36]
   \   000004CC   0x2101             MOVS     R1,#+1
   \   000004CE   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000004D2   0x.... 0x....      BL       BUTTON_SetTextColor
    587          	BUTTON_SetTextColor(buttonSpeed.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000004D6   0x6A62             LDR      R2,[R4, #+36]
   \   000004D8   0x2100             MOVS     R1,#+0
   \   000004DA   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   000004DE   0x.... 0x....      BL       BUTTON_SetTextColor
    588          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000004E2   0x6A62             LDR      R2,[R4, #+36]
   \   000004E4   0x2101             MOVS     R1,#+1
   \   000004E6   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000004EA   0x.... 0x....      BL       BUTTON_SetTextColor
    589          	BUTTON_SetTextColor(buttonFan.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000004EE   0x6A62             LDR      R2,[R4, #+36]
   \   000004F0   0x2100             MOVS     R1,#+0
   \   000004F2   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000004F6   0x.... 0x....      BL       BUTTON_SetTextColor
    590          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   000004FA   0x6A62             LDR      R2,[R4, #+36]
   \   000004FC   0x2101             MOVS     R1,#+1
   \   000004FE   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000502   0x.... 0x....      BL       BUTTON_SetTextColor
    591          	BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000506   0x6A62             LDR      R2,[R4, #+36]
   \   00000508   0x2100             MOVS     R1,#+0
   \   0000050A   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000050E   0x.... 0x....      BL       BUTTON_SetTextColor
    592          
    593          
    594          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000512   0x6A22             LDR      R2,[R4, #+32]
   \   00000514   0x2101             MOVS     R1,#+1
   \   00000516   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000051A   0x.... 0x....      BL       BUTTON_SetBkColor
    595          	BUTTON_SetBkColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000051E   0x6A22             LDR      R2,[R4, #+32]
   \   00000520   0x2100             MOVS     R1,#+0
   \   00000522   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000526   0x.... 0x....      BL       BUTTON_SetBkColor
    596          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000052A   0x6A62             LDR      R2,[R4, #+36]
   \   0000052C   0x2101             MOVS     R1,#+1
   \   0000052E   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000532   0x.... 0x....      BL       BUTTON_SetTextColor
    597          	BUTTON_SetTextColor(buttonMove.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000536   0x6A62             LDR      R2,[R4, #+36]
   \   00000538   0x2100             MOVS     R1,#+0
   \   0000053A   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000053E   0x.... 0x....      BL       BUTTON_SetTextColor
    598          	
    599          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000542   0x6A22             LDR      R2,[R4, #+32]
   \   00000544   0x2101             MOVS     R1,#+1
   \   00000546   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000054A   0x.... 0x....      BL       BUTTON_SetBkColor
    600          	BUTTON_SetBkColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000054E   0x6A22             LDR      R2,[R4, #+32]
   \   00000550   0x2100             MOVS     R1,#+0
   \   00000552   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000556   0x.... 0x....      BL       BUTTON_SetBkColor
    601          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000055A   0x6A62             LDR      R2,[R4, #+36]
   \   0000055C   0x2101             MOVS     R1,#+1
   \   0000055E   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000562   0x.... 0x....      BL       BUTTON_SetTextColor
    602          	BUTTON_SetTextColor(buttonExtrude.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000566   0x6A62             LDR      R2,[R4, #+36]
   \   00000568   0x2100             MOVS     R1,#+0
   \   0000056A   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000056E   0x.... 0x....      BL       BUTTON_SetTextColor
    603          
    604          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
   \   00000572   0x6A22             LDR      R2,[R4, #+32]
   \   00000574   0x2101             MOVS     R1,#+1
   \   00000576   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   0000057A   0x.... 0x....      BL       BUTTON_SetBkColor
    605          	BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000057E   0x6A22             LDR      R2,[R4, #+32]
   \   00000580   0x2100             MOVS     R1,#+0
   \   00000582   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000586   0x.... 0x....      BL       BUTTON_SetBkColor
    606          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
   \   0000058A   0x6A62             LDR      R2,[R4, #+36]
   \   0000058C   0x2101             MOVS     R1,#+1
   \   0000058E   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000592   0x.... 0x....      BL       BUTTON_SetTextColor
    607          	BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000596   0x6A62             LDR      R2,[R4, #+36]
   \   00000598   0x2100             MOVS     R1,#+0
   \   0000059A   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   0000059E   0x.... 0x....      BL       BUTTON_SetTextColor
    608          
    609          
    610          
    611          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   000005A2   0x6BA2             LDR      R2,[R4, #+56]
   \   000005A4   0x2101             MOVS     R1,#+1
   \   000005A6   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000005AA   0x.... 0x....      BL       BUTTON_SetBkColor
    612          	BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   000005AE   0x6BA2             LDR      R2,[R4, #+56]
   \   000005B0   0x2100             MOVS     R1,#+0
   \   000005B2   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000005B6   0x.... 0x....      BL       BUTTON_SetBkColor
    613          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
   \   000005BA   0x6BE2             LDR      R2,[R4, #+60]
   \   000005BC   0x2101             MOVS     R1,#+1
   \   000005BE   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000005C2   0x.... 0x....      BL       BUTTON_SetTextColor
    614          	BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
   \   000005C6   0x6BE2             LDR      R2,[R4, #+60]
   \   000005C8   0x2100             MOVS     R1,#+0
   \   000005CA   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000005CE   0x.... 0x....      BL       BUTTON_SetTextColor
    615          
    616          	if(gCfgItems.multiple_language != 0)
   \   000005D2   0x....             LDR.N    R0,??DataTable21_8
   \   000005D4   0xF890 0x01BF      LDRB     R0,[R0, #+447]
   \   000005D8   0x2800             CMP      R0,#+0
   \   000005DA   0xD02C             BEQ.N    ??draw_operate_7
    617          	{
    618          		BUTTON_SetText(buttonFan.btnHandle, operation_menu.fan);
   \   000005DC   0x....             LDR.N    R4,??DataTable21_21
   \   000005DE   0x6921             LDR      R1,[R4, #+16]
   \   000005E0   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000005E4   0x.... 0x....      BL       BUTTON_SetText
    619          		BUTTON_SetText(buttonFilament.btnHandle, operation_menu.filament);
   \   000005E8   0x6961             LDR      R1,[R4, #+20]
   \   000005EA   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000005EE   0x.... 0x....      BL       BUTTON_SetText
    620          		BUTTON_SetText(buttonTemperature.btnHandle, operation_menu.temp);
   \   000005F2   0x68E1             LDR      R1,[R4, #+12]
   \   000005F4   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000005F8   0x.... 0x....      BL       BUTTON_SetText
    621          		BUTTON_SetText(buttonMore_printing.btnHandle, operation_menu.more);
   \   000005FC   0x6A61             LDR      R1,[R4, #+36]
   \   000005FE   0xF9B8 0x0018      LDRSH    R0,[R8, #+24]
   \   00000602   0x.... 0x....      BL       BUTTON_SetText
    622          		BUTTON_SetText(buttonSpeed.btnHandle, operation_menu.speed);
   \   00000606   0x69E1             LDR      R1,[R4, #+28]
   \   00000608   0xF9B8 0x0000      LDRSH    R0,[R8, #+0]
   \   0000060C   0x.... 0x....      BL       BUTTON_SetText
    623          		BUTTON_SetText(buttonExtrude.btnHandle, operation_menu.extr);
   \   00000610   0x69A1             LDR      R1,[R4, #+24]
   \   00000612   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   00000616   0x.... 0x....      BL       BUTTON_SetText
    624          		BUTTON_SetText(buttonMove.btnHandle, operation_menu.move);
   \   0000061A   0x6A21             LDR      R1,[R4, #+32]
   \   0000061C   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000620   0x.... 0x....      BL       BUTTON_SetText
    625          		BUTTON_SetText(buttonRet.btnHandle, common_menu.text_back);
   \   00000624   0x....             LDR.N    R0,??DataTable21_25
   \   00000626   0x6801             LDR      R1,[R0, #+0]
   \   00000628   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   0000062C   0xB005             ADD      SP,SP,#+20
   \   0000062E   0xE8BD 0x4FF0      POP      {R4-R11,LR}
   \   00000632   0x.... 0x....      B.W      BUTTON_SetText
    626          	}
    627          
    628          	
    629          
    630          	#endif
    631          #if 0
    632          	if(gCfgItems.print_finish_close_machine_flg == 1)
    633          	{
    634          		Autoshutdown_display();
    635          	}
    636          #endif
    637          #if 0
    638          	Fill_State_BK = TEXT_CreateEx(LCD_WIDTH  / 4+X_ADD, 0, LCD_WIDTH / 2-X_INTERVAL, imgHeight / 2-X_INTERVAL, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT0, " ");
    639          	TEXT_SetBkColor(Fill_State_BK, gCfgItems.state_background_color);
    640          
    641          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 50, 120, LCD_WIDTH / 4 - 30, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    642          
    643          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2+80 , 120, LCD_WIDTH / 4 - 90, 80, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    644          	
    645          
    646          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    647          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    648          	
    649          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 40,  LCD_WIDTH / 2 - 10, 45, hOperateWnd, WM_CF_SHOW, 0, 0);
    650          	
    651          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    652          	
    653          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    654          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz18);
    655          	
    656          	
    657          	PROGBAR_SetValue(printingBar, get_printing_rate(srcfp));
    658                
    659                 
    660          	disp_temp_operate();
    661          #endif	
    662          	//GUI_Exec();
    663          	
    664          #endif
    665          	
    666          }
   \                     ??draw_operate_7: (+1)
   \   00000636   0xB005             ADD      SP,SP,#+20
   \   00000638   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    667          
    668          

   \                                 In section .text, align 2, keep-with-next
    669          void Autoshutdown_display2()
    670          {
   \                     Autoshutdown_display2: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    671          	if(IsChooseAutoShutdown == 1)
   \   00000002   0x....             LDR.N    R4,??DataTable21_5
   \   00000004   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000008   0x....             LDR.N    R5,??DataTable21_24
   \   0000000A   0x....             LDR.N    R6,??DataTable21_23
   \   0000000C   0x....             LDR.N    R7,??DataTable21_22
   \   0000000E   0x7821             LDRB     R1,[R4, #+0]
   \   00000010   0x2901             CMP      R1,#+1
   \   00000012   0xD110             BNE.N    ??Autoshutdown_display2_0
    672          	{
    673          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",0);
   \   00000014   0x2200             MOVS     R2,#+0
   \   00000016   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_auto_off.bin">`
   \   0000001A   0x.... 0x....      BL       BUTTON_SetBmpFileName
    674          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   0000001E   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000022   0x9000             STR      R0,[SP, #+0]
   \   00000024   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   00000028   0x462A             MOV      R2,R5
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000030   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   00000034   0xE00F             B.N      ??Autoshutdown_display2_1
    675          	}
    676          	else
    677          	{
    678          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",0);
   \                     ??Autoshutdown_display2_0: (+1)
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_manual_off.bin">`
   \   0000003C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    679          		BUTTON_SetBitmapEx(buttonAuto_Off.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
   \   00000040   0xF997 0x0000      LDRSB    R0,[R7, #+0]
   \   00000044   0x9000             STR      R0,[SP, #+0]
   \   00000046   0xF996 0x3000      LDRSB    R3,[R6, #+0]
   \   0000004A   0x462A             MOV      R2,R5
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000052   0x.... 0x....      BL       BUTTON_SetBitmapEx
    680          	}
    681          	if(gCfgItems.multiple_language != 0)
   \                     ??Autoshutdown_display2_1: (+1)
   \   00000056   0x....             LDR.N    R0,??DataTable21_8
   \   00000058   0xF890 0x01BF      LDRB     R0,[R0, #+447]
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD00F             BEQ.N    ??Autoshutdown_display2_2
    682          	{
    683          		if(IsChooseAutoShutdown == 1)
   \   00000060   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000064   0x....             LDR.N    R1,??DataTable21_26
   \   00000066   0x7822             LDRB     R2,[R4, #+0]
   \   00000068   0x2A01             CMP      R2,#+1
   \   0000006A   0xD104             BNE.N    ??Autoshutdown_display2_3
    684          			BUTTON_SetText(buttonAuto_Off.btnHandle,printing_more_menu.auto_close);
   \   0000006C   0x6889             LDR      R1,[R1, #+8]
   \   0000006E   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000072   0x.... 0x....      B.W      BUTTON_SetText
    685          		else
    686          			BUTTON_SetText(buttonAuto_Off.btnHandle,printing_more_menu.manual);
   \                     ??Autoshutdown_display2_3: (+1)
   \   00000076   0x68C9             LDR      R1,[R1, #+12]
   \   00000078   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000007C   0x.... 0x....      B.W      BUTTON_SetText
    687          	}
    688          
    689          }
   \                     ??Autoshutdown_display2_2: (+1)
   \   00000080   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    690          #else
    691          
    692          void draw_operate()
    693          {
    694          	int8_t buf[50] = {0};
    695          	
    696          	int i;
    697          
    698          	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != OPERATE_UI)
    699          	{
    700          		disp_state_stack._disp_index++;
    701          		disp_state_stack._disp_state[disp_state_stack._disp_index] = OPERATE_UI;
    702          	}
    703          	
    704          	disp_state = OPERATE_UI;
    705          		
    706          	GUI_SetBkColor(gCfgItems.background_color);
    707          	GUI_SetColor(gCfgItems.title_color);
    708          	GUI_Clear();
    709          
    710          	GUI_UC_SetEncodeNone();
    711          	GUI_SetFont(&GUI_FontHZ16);
    712          	GUI_DispStringAt(creat_title_text(), 0, 0);
    713          	GUI_SetFont(&FONT_TITLE);
    714          	GUI_UC_SetEncodeUTF8();
    715          	
    716          	hOperateWnd = WM_CreateWindow(0, titleHeight, LCD_WIDTH, imgHeight, WM_CF_SHOW, cbOperateWin, 0);
    717          	
    718          	buttonPause.btnHandle = BUTTON_CreateEx(0, 0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    719          	buttonStop.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4,  0, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    720          	buttonTemperature.btnHandle = BUTTON_CreateEx(0 , imgHeight / 2, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    721          	buttonFilament.btnHandle = BUTTON_CreateEx(LCD_WIDTH / 4,	imgHeight / 2,LCD_WIDTH / 4 - 2, imgHeight / 2 - 1,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    722          	buttonMore_printing.btnHandle = BUTTON_CreateEx(LCD_WIDTH / 2,  imgHeight / 2,LCD_WIDTH / 4 - 2, imgHeight / 2 - 1,hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    723          	buttonRet.btnHandle = BUTTON_CreateEx(LCD_WIDTH * 3 / 4 , imgHeight / 2, LCD_WIDTH / 4 - 2, imgHeight / 2 - 1, hOperateWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    724          
    725              BUTTON_SetBkColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    726              BUTTON_SetBkColor(buttonPause.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    727              BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    728              BUTTON_SetBkColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    729              BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    730              BUTTON_SetBkColor(buttonTemperature.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    731              BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    732              BUTTON_SetBkColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
    733              BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_color);
    734              BUTTON_SetBkColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);   
    735              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
    736              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);    
    737              BUTTON_SetTextColor(buttonPause.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    738              BUTTON_SetTextColor(buttonPause.btnHandle,BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    739              BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    740              BUTTON_SetTextColor(buttonStop.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    741              BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    742              BUTTON_SetTextColor(buttonTemperature.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    743              BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    744              BUTTON_SetTextColor(buttonFilament.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    745              BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_textcolor);
    746              BUTTON_SetTextColor(buttonMore_printing.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
    747              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_textcolor);
    748              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
    749          
    750          
    751          	BUTTON_SetBmpFileName(buttonPause.btnHandle, "bmp_pause.bin",0);
    752          	BUTTON_SetBmpFileName(buttonStop.btnHandle, "bmp_stop.bin",0);
    753          	BUTTON_SetBmpFileName(buttonTemperature.btnHandle, "bmp_temp.bin",0);
    754          	BUTTON_SetBmpFileName(buttonMore_printing.btnHandle, "bmp_more.bin",0);
    755          	BUTTON_SetBmpFileName(buttonFilament.btnHandle, "bmp_filamentchange.bin",0);
    756          	BUTTON_SetBmpFileName(buttonRet.btnHandle, "bmp_return.bin",0);
    757          
    758          	BUTTON_SetBitmapEx(buttonPause.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    759          	BUTTON_SetBitmapEx(buttonStop.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    760          	BUTTON_SetBitmapEx(buttonTemperature.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    761          	BUTTON_SetBitmapEx(buttonMore_printing.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    762          	BUTTON_SetBitmapEx(buttonFilament.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    763          	BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct, BMP_PIC_X, BMP_PIC_Y);
    764          
    765          	printingBar = PROGBAR_CreateEx(LCD_WIDTH  / 4 + 5, 15,  LCD_WIDTH / 2 - 10, 30, hOperateWnd, WM_CF_SHOW, 0, 0);
    766          
    767          	textPrintTemp1 = TEXT_CreateEx(LCD_WIDTH  / 4 + 5, 60, LCD_WIDTH / 4 - 4, 40, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT1, " ");
    768          
    769          	textPrintTemp2 = TEXT_CreateEx(LCD_WIDTH  / 2 , 60, LCD_WIDTH / 4 - 4, 40, hOperateWnd, WM_CF_SHOW, TEXT_CF_LEFT,	GUI_ID_TEXT2, " ");
    770          
    771          	TEXT_SetTextAlign(textPrintTemp1,  GUI_TA_VCENTER | GUI_TA_LEFT);
    772          	TEXT_SetTextAlign(textPrintTemp2,  GUI_TA_VCENTER | GUI_TA_LEFT);
    773          	
    774          	PROGBAR_SetBarColor(printingBar, 0, GUI_GREEN);
    775          	
    776          	PROGBAR_SetTextColor(printingBar, 0, GUI_BLACK);
    777          	PROGBAR_SetFont(printingBar, &GUI_FontHZ_fontHz14);
    778          	
    779          	disp_temp_operate();
    780          	setProBarRateOpera();
    781          	if(gCfgItems.multiple_language != 0)
    782          	{
    783          		BUTTON_SetText(buttonPause.btnHandle,operation_menu.pause);
    784          		BUTTON_SetText(buttonStop.btnHandle,operation_menu.stop);
    785          		BUTTON_SetText(buttonTemperature.btnHandle,operation_menu.temp);
    786          		BUTTON_SetText(buttonMore_printing.btnHandle,operation_menu.more);
    787          		BUTTON_SetText(buttonFilament.btnHandle,operation_menu.filament);
    788          		BUTTON_SetText(buttonRet.btnHandle,common_menu.text_back);
    789          	}
    790          	
    791          }
    792          
    793          #endif

   \                                 In section .text, align 2, keep-with-next
    794          void setProBarRateOpera()
    795          {
   \                     setProBarRateOpera: (+1)
   \   00000000   0xB5D0             PUSH     {R4,R6,R7,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    796          
    797          	int rate;
    798          	volatile long long rate_tmp_op;
    799          	//rate_tmp_op = (long long)card.sdpos * 100;
    800          	//rate = rate_tmp_op / card.filesize;
    801          
    802          	if(from_flash_pic != 1)
   \   00000004   0x....             LDR.N    R2,??DataTable21_13
   \   00000006   0xF202 0x405C      ADDW     R0,R2,#+1116
   \   0000000A   0x6840             LDR      R0,[R0, #+4]
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0xF8D2 0x245C      LDR      R2,[R2, #+1116]
   \   00000012   0x2464             MOVS     R4,#+100
   \   00000014   0x....             LDR.N    R3,??DataTable21_1
   \   00000016   0x781B             LDRB     R3,[R3, #+0]
   \   00000018   0x2B01             CMP      R3,#+1
   \   0000001A   0xD009             BEQ.N    ??setProBarRateOpera_0
    803          	{
    804          		rate_tmp_op =(long long)card.sdpos * 100;
   \   0000001C   0xFBA4 0x6700      UMULL    R6,R7,R4,R0
   \   00000020   0xE9CD 0x6700      STRD     R6,R7,[SP, #+0]
    805          		rate = rate_tmp_op / card.filesize;
   \   00000024   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000028   0x2300             MOVS     R3,#+0
   \   0000002A   0x.... 0x....      BL       __aeabi_ldivmod
   \   0000002E   0xE013             B.N      ??setProBarRateOpera_1
    806          	}
    807          	else
    808          	{
    809          		rate_tmp_op =(long long)card.sdpos;
   \                     ??setProBarRateOpera_0: (+1)
   \   00000030   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    810          		rate = (rate_tmp_op-(PREVIEW_SIZE+To_pre_view))* 100 / (card.filesize-(PREVIEW_SIZE+To_pre_view));
   \   00000034   0x....             LDR.N    R0,??DataTable21_27
   \   00000036   0x6803             LDR      R3,[R0, #+0]
   \   00000038   0xE9DD 0x6700      LDRD     R6,R7,[SP, #+0]
   \   0000003C   0x....             LDR.N    R0,??DataTable21_28  ;; 0x317e0
   \   0000003E   0x18C0             ADDS     R0,R0,R3
   \   00000040   0x1A36             SUBS     R6,R6,R0
   \   00000042   0x418F             SBCS     R7,R7,R1
   \   00000044   0xFBA4 0x0106      UMULL    R0,R1,R4,R6
   \   00000048   0xFB04 0x1107      MLA      R1,R4,R7,R1
   \   0000004C   0x1AD2             SUBS     R2,R2,R3
   \   0000004E   0x....             LDR.N    R3,??DataTable21_29  ;; 0xfffce820
   \   00000050   0x189A             ADDS     R2,R3,R2
   \   00000052   0x2300             MOVS     R3,#+0
   \   00000054   0x.... 0x....      BL       __aeabi_ldivmod
    811          	}
    812          
    813          	if(rate <= 0)
   \                     ??setProBarRateOpera_1: (+1)
   \   00000058   0x2801             CMP      R0,#+1
   \   0000005A   0xDB0D             BLT.N    ??setProBarRateOpera_2
    814          		return;
    815          	
    816          	
    817          	if(disp_state == OPERATE_UI)
   \   0000005C   0x....             LDR.N    R1,??DataTable21_18
   \   0000005E   0xF991 0x1000      LDRSB    R1,[R1, #+0]
   \   00000062   0x2905             CMP      R1,#+5
   \   00000064   0xD108             BNE.N    ??setProBarRateOpera_2
    818          	{
    819          		PROGBAR_SetValue(printingBar, rate );
   \   00000066   0x4601             MOV      R1,R0
   \   00000068   0x....             LDR.N    R0,??DataTable21_30
   \   0000006A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000006E   0xB004             ADD      SP,SP,#+16
   \   00000070   0xE8BD 0x40D0      POP      {R4,R6,R7,LR}
   \   00000074   0x.... 0x....      B.W      PROGBAR_SetValue
    820          	}
    821          	
    822          }
   \                     ??setProBarRateOpera_2: (+1)
   \   00000078   0xBDDF             POP      {R0-R4,R6,R7,PC}  ;; return
    823          /*
    824          void setProBarRateOpera(int rate)
    825          {
    826          	if(rate <= 0)
    827          		return;
    828          	gCurFileState.totalSend = rate;
    829          	
    830          	if(disp_state == OPERATE_UI)
    831          	{
    832          		PROGBAR_SetValue(printingBar, rate );
    833          	}
    834          	
    835          }
    836          */

   \                                 In section .text, align 2, keep-with-next
    837          void disp_temp_operate()
    838          {
   \                     disp_temp_operate: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
    839          	char buf[50] = {0};
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x2134             MOVS     R1,#+52
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    840          	
    841          	TEXT_SetTextColor(textPrintTemp1, gCfgItems.state_text_color);
   \   0000000C   0x....             LDR.N    R4,??DataTable21_31
   \   0000000E   0x....             LDR.N    R5,??DataTable21_8
   \   00000010   0x6929             LDR      R1,[R5, #+16]
   \   00000012   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000016   0x.... 0x....      BL       TEXT_SetTextColor
    842          	TEXT_SetTextColor(textPrintTemp2, gCfgItems.state_text_color);
   \   0000001A   0x6929             LDR      R1,[R5, #+16]
   \   0000001C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000020   0x.... 0x....      BL       TEXT_SetTextColor
    843          
    844          	TEXT_SetBkColor(textPrintTemp1, gCfgItems.state_background_color);
   \   00000024   0x68E9             LDR      R1,[R5, #+12]
   \   00000026   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000002A   0x.... 0x....      BL       TEXT_SetBkColor
    845          	TEXT_SetBkColor(textPrintTemp2, gCfgItems.state_background_color);
   \   0000002E   0x68E9             LDR      R1,[R5, #+12]
   \   00000030   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000034   0x.... 0x....      BL       TEXT_SetBkColor
    846          	
    847          	if(mksCfg.extruders == 2)
   \   00000038   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000003C   0x....             LDR.N    R5,??DataTable21_32
   \   0000003E   0x....             LDR.N    R6,??DataTable21_33
   \   00000040   0x....             LDR.N    R7,??DataTable21_6
   \   00000042   0xF897 0x10F7      LDRB     R1,[R7, #+247]
   \   00000046   0x2902             CMP      R1,#+2
   \   00000048   0x4631             MOV      R1,R6
   \   0000004A   0xD142             BNE.N    ??disp_temp_operate_0
    848          	{
    849          		TEXT_SetFont(textPrintTemp1,&GUI_FontHZ_fontHz14);
   \   0000004C   0x.... 0x....      BL       TEXT_SetFont
    850          		TEXT_SetFont(textPrintTemp2,&GUI_FontHZ_fontHz14);
   \   00000050   0x4631             MOV      R1,R6
   \   00000052   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000056   0x.... 0x....      BL       TEXT_SetFont
   \   0000005A   0x6828             LDR      R0,[R5, #+0]
   \   0000005C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000060   0x4606             MOV      R6,R0
   \   00000062   0xF897 0x0036      LDRB     R0,[R7, #+54]
   \   00000066   0x2801             CMP      R0,#+1
   \   00000068   0xD110             BNE.N    ??disp_temp_operate_1
    851          		if(mksCfg.has_temp_bed == 1)
    852          		{
    853          			
    854          			sprintf(buf, " E1:%d\n B:%d", (int)thermalManager.current_temperature[0], (int)thermalManager.current_temperature_bed);
   \   0000006A   0x....             LDR.N    R0,??DataTable21_34
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000072   0x4603             MOV      R3,R0
   \   00000074   0x4632             MOV      R2,R6
   \   00000076   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n B:%d">`
   \   0000007A   0xA800             ADD      R0,SP,#+0
   \   0000007C   0x.... 0x....      BL       sprintf
    855          			TEXT_SetText(textPrintTemp1, buf);
   \   00000080   0xA900             ADD      R1,SP,#+0
   \   00000082   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000086   0x.... 0x....      BL       TEXT_SetText
   \   0000008A   0xE00A             B.N      ??disp_temp_operate_2
    856          		}
    857          		else
    858          		{
    859          			sprintf(buf, " E 1:%d\n", (int)thermalManager.current_temperature[0]);
   \                     ??disp_temp_operate_1: (+1)
   \   0000008C   0x4632             MOV      R2,R6
   \   0000008E   0x.... 0x....      ADR.W    R1,`?<Constant " E 1:%d\\n">`
   \   00000092   0xA800             ADD      R0,SP,#+0
   \   00000094   0x.... 0x....      BL       sprintf
    860          			TEXT_SetText(textPrintTemp1, buf);			
   \   00000098   0xA900             ADD      R1,SP,#+0
   \   0000009A   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000009E   0x.... 0x....      BL       TEXT_SetText
    861          		}
    862          		
    863          		memset(buf, 0, sizeof(buf));
   \                     ??disp_temp_operate_2: (+1)
   \   000000A2   0x2232             MOVS     R2,#+50
   \   000000A4   0x2100             MOVS     R1,#+0
   \   000000A6   0xA800             ADD      R0,SP,#+0
   \   000000A8   0x.... 0x....      BL       memset
    864          		sprintf(buf, "E 2:%d\nFAN:%d", (int)thermalManager.current_temperature[1],fanSpeeds[0]);
   \   000000AC   0x....             LDR.N    R0,??DataTable21_35
   \   000000AE   0x6803             LDR      R3,[R0, #+0]
   \   000000B0   0x461E             MOV      R6,R3
   \   000000B2   0x6868             LDR      R0,[R5, #+4]
   \   000000B4   0x.... 0x....      BL       __aeabi_f2iz
   \   000000B8   0x4602             MOV      R2,R0
   \   000000BA   0x4633             MOV      R3,R6
   \   000000BC   0x.... 0x....      ADR.W    R1,`?<Constant "E 2:%d\\nFAN:%d">`
   \   000000C0   0xA800             ADD      R0,SP,#+0
   \   000000C2   0x.... 0x....      BL       sprintf
    865          		TEXT_SetText(textPrintTemp2, buf);
   \   000000C6   0xA900             ADD      R1,SP,#+0
   \   000000C8   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000CC   0x.... 0x....      BL       TEXT_SetText
   \   000000D0   0xE03B             B.N      ??disp_temp_operate_3
    866          		
    867          	}
    868          	else
    869          	{
    870          		TEXT_SetFont(textPrintTemp1,&GUI_FontHZ_fontHz14);
   \                     ??disp_temp_operate_0: (+1)
   \   000000D2   0x.... 0x....      BL       TEXT_SetFont
    871          		TEXT_SetFont(textPrintTemp2,&GUI_FontHZ_fontHz14);
   \   000000D6   0x4631             MOV      R1,R6
   \   000000D8   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   000000DC   0x.... 0x....      BL       TEXT_SetFont
   \   000000E0   0x6828             LDR      R0,[R5, #+0]
   \   000000E2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000E6   0x4605             MOV      R5,R0
   \   000000E8   0xF897 0x0036      LDRB     R0,[R7, #+54]
   \   000000EC   0x2801             CMP      R0,#+1
   \   000000EE   0xD110             BNE.N    ??disp_temp_operate_4
    872          		if(mksCfg.has_temp_bed == 1)
    873          		{
    874          			
    875          			sprintf(buf, " E1:%d\n B:%d", (int)thermalManager.current_temperature[0], (int)thermalManager.current_temperature_bed);
   \   000000F0   0x....             LDR.N    R0,??DataTable21_34
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x.... 0x....      BL       __aeabi_f2iz
   \   000000F8   0x4603             MOV      R3,R0
   \   000000FA   0x462A             MOV      R2,R5
   \   000000FC   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n B:%d">`
   \   00000100   0xA800             ADD      R0,SP,#+0
   \   00000102   0x.... 0x....      BL       sprintf
    876          			TEXT_SetText(textPrintTemp1, buf);
   \   00000106   0xA900             ADD      R1,SP,#+0
   \   00000108   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   0000010C   0x.... 0x....      BL       TEXT_SetText
   \   00000110   0xE00A             B.N      ??disp_temp_operate_5
    877          		}
    878          		else
    879          		{
    880          			
    881          			sprintf(buf, " E1:%d\n", (int)thermalManager.current_temperature[0]);
   \                     ??disp_temp_operate_4: (+1)
   \   00000112   0x462A             MOV      R2,R5
   \   00000114   0x.... 0x....      ADR.W    R1,`?<Constant " E1:%d\\n">`
   \   00000118   0xA800             ADD      R0,SP,#+0
   \   0000011A   0x.... 0x....      BL       sprintf
    882          			TEXT_SetText(textPrintTemp1, buf);			
   \   0000011E   0xA900             ADD      R1,SP,#+0
   \   00000120   0xF9B4 0x0000      LDRSH    R0,[R4, #+0]
   \   00000124   0x.... 0x....      BL       TEXT_SetText
    883          		}
    884          		
    885          		memset(buf, 0, sizeof(buf));
   \                     ??disp_temp_operate_5: (+1)
   \   00000128   0x2232             MOVS     R2,#+50
   \   0000012A   0x2100             MOVS     R1,#+0
   \   0000012C   0xA800             ADD      R0,SP,#+0
   \   0000012E   0x.... 0x....      BL       memset
    886          		sprintf(buf, "FAN:%d\n", fanSpeeds[0]);
   \   00000132   0x....             LDR.N    R0,??DataTable21_35
   \   00000134   0x6802             LDR      R2,[R0, #+0]
   \   00000136   0x.... 0x....      ADR.W    R1,`?<Constant "FAN:%d\\n">`
   \   0000013A   0xA800             ADD      R0,SP,#+0
   \   0000013C   0x.... 0x....      BL       sprintf
    887          		TEXT_SetText(textPrintTemp2, buf);
   \   00000140   0xA900             ADD      R1,SP,#+0
   \   00000142   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000146   0x.... 0x....      BL       TEXT_SetText
    888          	}
    889          
    890          }
   \                     ??disp_temp_operate_3: (+1)
   \   0000014A   0xB00D             ADD      SP,SP,#+52
   \   0000014C   0xBDF0             POP      {R4-R7,PC}       ;; return
    891          #if 0
    892          void Autoshutdown_display()
    893          {
    894          	if(IsChooseAutoShutdown == 1)
    895          	{
    896          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_auto_off.bin",1);
    897          		
    898          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_sel_color);
    899          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_state_sel_color);
    900          		
    901          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_PRESSED,gCfgItems.btn_state_sel_textcolor);
    902          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED,gCfgItems.btn_state_sel_textcolor);
    903          		
    904          		if(gCfgItems.multiple_language != 0)
    905          		{	
    906          			BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.auto_off);
    907          		}
    908          			
    909          	}
    910          	else
    911          	{
    912          		BUTTON_SetBmpFileName(buttonAuto_Off.btnHandle, "bmp_manual_off.bin",1);
    913          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_PRESSED, gCfgItems.btn_state_color);
    914          		BUTTON_SetBkColor(buttonAuto_Off.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_state_color);
    915          
    916          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_PRESSED,gCfgItems.btn_state_textcolor);
    917          		BUTTON_SetTextColor(buttonAuto_Off.btnHandle,BUTTON_CI_UNPRESSED,gCfgItems.btn_state_textcolor);
    918          		if(gCfgItems.multiple_language != 0)
    919          		{	
    920          			BUTTON_SetText(buttonAuto_Off.btnHandle,operation_menu.manual_off);
    921          		}		
    922          	}
    923          
    924          }
    925          #endif

   \                                 In section .text, align 2, keep-with-next
    926          void Clear_operate()
    927          {
   \                     Clear_operate: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    928          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable21_8
   \   00000004   0x6840             LDR      R0,[R0, #+4]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    929          	if(WM_IsWindow(hOperateWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable21_5
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD005             BEQ.N    ??Clear_operate_0
    930          	{
    931          		WM_DeleteWindow(hOperateWnd);
   \   00000018   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000020   0x.... 0x....      B.W      WM_DeleteWindow
    932          		//GUI_Exec();
    933          	}
    934          	
    935          	//GUI_Clear();
    936          }
   \                     ??Clear_operate_0: (+1)
   \   00000024   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     buttonRet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x........         DC32     from_flash_pic

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x........         DC32     flash_preview_begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   0x........         DC32     default_preview_flg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_5:
   \   00000000   0x........         DC32     IsChooseAutoShutdown

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_6:
   \   00000000   0x........         DC32     mksCfg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_7:
   \   00000000   0x........         DC32     active_extruder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_8:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_9:
   \   00000000   0x........         DC32     buttonFilament

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_10:
   \   00000000   0x........         DC32     feedrate_mm_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_11:
   \   00000000   0x........         DC32     _ZN11Temperature18target_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_12:
   \   00000000   0x........         DC32     mksReprint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_13:
   \   00000000   0x........         DC32     card

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_14:
   \   00000000   0x........         DC32     print_job_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_15:
   \   00000000   0x........         DC32     buttonSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_16:
   \   00000000   0x........         DC32     buttonMove

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_17:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_18:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_19:
   \   00000000   0x........         DC32     gCfgItems+0x4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_20:
   \   00000000   0x........         DC32     _Z12cbOperateWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_21:
   \   00000000   0x........         DC32     operation_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_22:
   \   00000000   0x........         DC32     BMP_PIC_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_23:
   \   00000000   0x........         DC32     BMP_PIC_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_24:
   \   00000000   0x........         DC32     bmp_struct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_25:
   \   00000000   0x........         DC32     common_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_26:
   \   00000000   0x........         DC32     printing_more_menu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_27:
   \   00000000   0x........         DC32     To_pre_view

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_28:
   \   00000000   0x000317E0         DC32     0x317e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_29:
   \   00000000   0xFFFCE820         DC32     0xfffce820

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_30:
   \   00000000   0x........         DC32     printingBar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_31:
   \   00000000   0x........         DC32     textPrintTemp1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_32:
   \   00000000   0x........         DC32     _ZN11Temperature19current_temperatureE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_33:
   \   00000000   0x........         DC32     GUI_FontHZ_fontHz14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_34:
   \   00000000   0x........         DC32     _ZN11Temperature23current_temperature_bedE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_35:
   \   00000000   0x........         DC32     fanSpeeds

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_temp.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_temp.bin"
   \              0x70 0x5F    
   \              0x74 0x65    
   \              0x6D 0x70    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_speed.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_speed.bin"
   \              0x70 0x5F    
   \              0x73 0x70    
   \              0x65 0x65    
   \              0x64 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_fan.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_fan.bin"
   \              0x70 0x5F    
   \              0x66 0x61    
   \              0x6E 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_filamentchange.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_filamentchange.bin"
   \              0x70 0x5F    
   \              0x66 0x69    
   \              0x6C 0x61    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x63 0x68    
   \              0x61 0x6E    
   \              0x67 0x65    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_extrude_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_extrude_opr.bin"
   \              0x70 0x5F    
   \              0x65 0x78    
   \              0x74 0x72    
   \              0x75 0x64    
   \              0x65 0x5F    
   \              0x6F 0x70    
   \              0x72 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_move_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_move_opr.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x76 0x65    
   \              0x5F 0x6F    
   \              0x70 0x72    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_more_opr.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_more_opr.bin"
   \              0x70 0x5F    
   \              0x6D 0x6F    
   \              0x72 0x65    
   \              0x5F 0x6F    
   \              0x70 0x72    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_auto_off.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_auto_off.bin"
   \              0x70 0x5F    
   \              0x61 0x75    
   \              0x74 0x6F    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_manual_off.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_manual_off.bin"
   \              0x70 0x5F    
   \              0x6D 0x61    
   \              0x6E 0x75    
   \              0x61 0x6C    
   \              0x5F 0x6F    
   \              0x66 0x66    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_return.bin"
   \              0x70 0x5F    
   \              0x72 0x65    
   \              0x74 0x75    
   \              0x72 0x6E    
   \              0x2E 0x62    
   \              0x69 0x6E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E1:%d\\n B:%d">`:
   \   00000000   0x20 0x45          DC8 " E1:%d\012 B:%d"
   \              0x31 0x3A    
   \              0x25 0x64    
   \              0x0A 0x20    
   \              0x42 0x3A    
   \              0x25 0x64    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E 1:%d\\n">`:
   \   00000000   0x20 0x45          DC8 " E 1:%d\012"
   \              0x20 0x31    
   \              0x3A 0x25    
   \              0x64 0x0A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "E 2:%d\\nFAN:%d">`:
   \   00000000   0x45 0x20          DC8 "E 2:%d\012FAN:%d"
   \              0x32 0x3A    
   \              0x25 0x64    
   \              0x0A 0x46    
   \              0x41 0x4E    
   \              0x3A 0x25    
   \              0x64 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " E1:%d\\n">`:
   \   00000000   0x20 0x45          DC8 " E1:%d\012"
   \              0x31 0x3A    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "FAN:%d\\n">`:
   \   00000000   0x46 0x41          DC8 "FAN:%d\012"
   \              0x4E 0x3A    
   \              0x25 0x64    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {'\\000'}>`:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Autoshutdown_display2
        24   -> BUTTON_SetBitmapEx
        24   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
       8   Clear_operate
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      24   cbOperateWin(WM_MESSAGE *)
         0   -> Autoshutdown_display2
        24   -> CardReader::pauseSDPrint()
        24   -> Clear_operate
        24   -> Stopwatch::pause()
         0   -> WM_DefaultProc
        24   -> __aeabi_f2iz
        24   -> __aeabi_i2f
         0   -> draw_FilamentChange
         0   -> draw_changeSpeed
         0   -> draw_extrusion
         0   -> draw_fan
         0   -> draw_move_motor
         0   -> draw_preHeat
         0   -> draw_printing
         0   -> draw_printmore
        24   -> stop_print_time
      72   disp_temp_operate
        72   -> TEXT_SetBkColor
        72   -> TEXT_SetFont
        72   -> TEXT_SetText
        72   -> TEXT_SetTextColor
        72   -> __aeabi_f2iz
        72   -> __aeabi_memclr4
        72   -> memset
        72   -> sprintf
      56   draw_operate
        56   -> BUTTON_CreateEx
        56   -> BUTTON_SetBitmapEx
        56   -> BUTTON_SetBkColor
        56   -> BUTTON_SetBmpFileName
         0   -> BUTTON_SetText
        56   -> BUTTON_SetText
        56   -> BUTTON_SetTextColor
        56   -> GUI_Clear
        56   -> GUI_DispStringAt
        56   -> GUI_SetBkColor
        56   -> GUI_SetColor
        56   -> WM_CreateWindow
        56   -> creat_title_text
      32   setProBarRateOpera
         0   -> PROGBAR_SetValue
        32   -> __aeabi_ldivmod


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant " E 1:%d\n">
      16  ?<Constant " E1:%d\n B:%d">
       8  ?<Constant " E1:%d\n">
      16  ?<Constant "E 2:%d\nFAN:%d">
       8  ?<Constant "FAN:%d\n">
      20  ?<Constant "bmp_auto_off.bin">
      20  ?<Constant "bmp_extrude_opr.bin">
      12  ?<Constant "bmp_fan.bin">
      24  ?<Constant "bmp_filamentchange.bin">
      20  ?<Constant "bmp_manual_off.bin">
      20  ?<Constant "bmp_more_opr.bin">
      20  ?<Constant "bmp_move_opr.bin">
      16  ?<Constant "bmp_return.bin">
      16  ?<Constant "bmp_speed.bin">
      16  ?<Constant "bmp_temp.bin">
      52  ?<Constant {'\000'}>
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_10
       4  ??DataTable21_11
       4  ??DataTable21_12
       4  ??DataTable21_13
       4  ??DataTable21_14
       4  ??DataTable21_15
       4  ??DataTable21_16
       4  ??DataTable21_17
       4  ??DataTable21_18
       4  ??DataTable21_19
       4  ??DataTable21_2
       4  ??DataTable21_20
       4  ??DataTable21_21
       4  ??DataTable21_22
       4  ??DataTable21_23
       4  ??DataTable21_24
       4  ??DataTable21_25
       4  ??DataTable21_26
       4  ??DataTable21_27
       4  ??DataTable21_28
       4  ??DataTable21_29
       4  ??DataTable21_3
       4  ??DataTable21_30
       4  ??DataTable21_31
       4  ??DataTable21_32
       4  ??DataTable21_33
       4  ??DataTable21_34
       4  ??DataTable21_35
       4  ??DataTable21_4
       4  ??DataTable21_5
       4  ??DataTable21_6
       4  ??DataTable21_7
       4  ??DataTable21_8
       4  ??DataTable21_9
     130  Autoshutdown_display2
      38  Clear_operate
      52  IsChooseAutoShutdown
          hOperateWnd
          buttonTemperature
          buttonAuto_Off
      48  buttonFilament
          buttonExtrude
      24  buttonMove
      48  buttonRet
          buttonFan
      48  buttonSpeed
          buttonMore_printing
     590  cbOperateWin(WM_MESSAGE *)
     334  disp_temp_operate
    1596  draw_operate
       1  pause_flag
       2  printingBar
     122  setProBarRateOpera
       4  textPrintTemp1
          textPrintTemp2
       1  -- Other

 
   227 bytes in section .bss
    53 bytes in section .rodata
 3 198 bytes in section .text
 
 3 198 bytes of CODE  memory
    52 bytes of CONST memory (+ 1 byte shared)
   227 bytes of DATA  memory

Errors: none
Warnings: 44
