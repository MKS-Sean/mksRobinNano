###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        14/Feb/2020  17:05:11
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_keyboard.cpp
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_keyboard.cpp
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM/../User/ui/QRENCODE\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\GUI\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\Third_Party\Marlin\
#        -Om --eec++ -I "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\draw_keyboard.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\draw_keyboard.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_keyboard.cpp
      1          #include "gui.h"
      2          #include "button.h"
      3          #include "draw_ui.h"

  #define UNUSED(x) ((void)(x))
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_def.h",87  Warning[Pe047]: 
          incompatible redefinition of macro "UNUSED" (declared at line 101 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4
          _source\EWARM\..\Middlewares\Third_Party\Marlin\macros.h")

  		volatile volatile float desireBedTempBak;
  		         ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\Inc\mks_cfg.h",613  Warning[Pe083]: 
          type qualifier specified more than once

    #define FILAMENT_CHANGE_TEXT_EN				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_en.h",135  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_EN"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_CN            "่งฃ้ค็ปๅฎ?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_s_cn.h",218  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_CN"
          (declared at line 213)

    #define FILAMENT_CHANGE_TEXT_T_CN				"ๅพๆๅฐๆฉๆซๅๅ,\n่ซๆ<้ฒๆ>ๆ<้ๆ>"
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_t_cn.h",127  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_T_CN"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_RU				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_ru.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_RU"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_RU            "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_ru.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_RU"
          (declared at line 225)

    #define FILAMENT_CHANGE_TEXT_FR				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_fr.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_FR"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_FR        "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_fr.h",233  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_FR"
          (declared at line 229)

    #define FILAMENT_CHANGE_TEXT_SP				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_sp.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_SP"
          (declared at line 113)

    #define FILAMENT_CHANGE_TEXT_IT				"Please click <Load> \nor <unload>,After \npinter pause."
            ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_it.h",133  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_IT"
          (declared at line 113)

  #define DIALOG_UNBIND_PRINTER_IT                "Unbind the printer?"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Language_it.h",229  Warning[Pe047]: 
          incompatible redefinition of macro "DIALOG_UNBIND_PRINTER_IT"
          (declared at line 224)

  #define FILAMENT_CHANGE_TEXT_JP				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Multi_language.h",651  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_JP"
          (declared at line 644)

  #define FILAMENT_CHANGE_TEXT_GN				"Please click <Load> \nor <unload>,After \npinter pause."
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\Multi_language\Multi_language.h",859  Warning[Pe047]: 
          incompatible redefinition of macro "FILAMENT_CHANGE_TEXT_GN"
          (declared at line 853)

  #define Simple_Dec"ผ๕ษู"
                    ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_ui.h",495  Warning[Pe1649]: 
          white space is required between the macro name "Simple_Dec" and its
          replacement text

  #define Simple_Speed "หูถศ"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_ui.h",550  Warning[Pe047]: 
          incompatible redefinition of macro "Simple_Speed" (declared at line
          547)

  #define Complex_Speed "หูถศ"
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_ui.h",551  Warning[Pe047]: 
          incompatible redefinition of macro "Complex_Speed" (declared at line
          548)
      4          #include "fontLib.h"
      5          #include "LISTBOX.h"
      6          #include "draw_set.h"
      7          #include <ctype.h>
      8          #include<stdlib.h>
      9          #include<stdio.h>
     10          #include "wifi_module.h"
     11          #include "draw_keyboard.h"
     12          #include "draw_Tips.h"
     13          #include "string.h"
     14          #include "stdio.h"
     15          #include "draw_wifi_list.h"
     16          #include "wifi_list.h"
     17          
     18          static GUI_HWIN hKeyboardWnd;
     19          static TEXT_Handle textKeyboardTitle;
     20          static BUTTON_STRUCT buttonRet,buttonJoint;

   \                                 In section .bss, align 4
     21          static BUTTON_STRUCT buttonWifiKey[26];
   \                     buttonWifiKey:
   \   00000000                      DS8 624

   \                                 In section .bss, align 4
     22          static BUTTON_STRUCT buttonSpace,buttondel2,buttonPassword;
   \                     buttonPassword:
   \   00000000                      DS8 24
   \   00000018                      DS8 24

   \                                 In section .bss, align 4
     23          static BUTTON_STRUCT buttonLetter,buttonDigital,buttonSymbol,buttonArrow;
   \                     buttonDigital:
   \   00000000                      DS8 24
   \   00000018                      DS8 24
     24          
     25          extern GUI_BITMAP bmp_struct_32x21;
     26          extern GUI_BITMAP bmp_struct_28x21;
     27          
     28          KEYBOARD_STYPE keyboard_stype=UPPER_CASE_LETTER;

   \                                 In section .bss, align 4
     29          KEY_VALUE_CALC key_value_calc;
   \                     key_value_calc:
   \   00000000                      DS8 44

   \                                 In section .data, align 4
   \                     keyboard_stype:
   \   00000000   0x00               DC8 0
   \   00000001   0x00               DC8 0
   \   00000002   0x00 0x00          DC8 0, 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000001C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000002C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     30          
     31          extern GUI_CONST_STORAGE GUI_FONT GUI_FontHelvetica26;
     32          extern GUI_CONST_STORAGE GUI_FONT GUI_FontHelvetica36;
     33          
     34          extern char buf_to_wifi[256];
     35          
     36          char digital_key_value[27]={'1', '2', '3', '4', '5', '6', '7', '8', '9', '0',
     37          						   '-', '|', ':', ';', '(', ')', '$', '&', '@', '\"',
     38          						   '.', ' ', ' ', ' ', ' ', ' ',0x00};
     39          char symbol_key_value[27]={',', '?', '!', '\'', '[', ']', '#', '{', '}', '%',
     40          						   '^', '*', '+', '=', '_', '\\', '/', '~', '<', '>',
     41          						    ' ', ' ', ' ', ' ', ' ', ' ',0x00};
     42          #define VALUE_DISP_HEIGHT 60
     43          #define KEY_WIDTH  (uint8_t)((LCD_WIDTH-6)/7)//67
     44          #define KEY_HEIGHT (uint8_t)((LCD_HEIGHT-VALUE_DISP_HEIGHT-6)/6)//42
     45          
     46          #define FIRST_LINE_WIDTH (uint8_t)((LCD_WIDTH-4)/5)//95
     47          
     48          keyboard_menu_def keyboard_menu;
   \                     keyboard_menu:
   \   0000004C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000005C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     digital_key_value:
   \   00000068   0x31 0x32          DC8 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 45, 124, 58, 59, 40, 41, 36
   \              0x33 0x34    
   \              0x35 0x36    
   \              0x37 0x38    
   \              0x39 0x30    
   \              0x2D 0x7C    
   \              0x3A 0x3B    
   \              0x28 0x29    
   \              0x24         
   \   00000079   0x26 0x40          DC8 38, 64, 34, 46, 32, 32, 32, 32, 32, 0, 0
   \              0x22 0x2E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \              0x00         
     49          
     50          GUI_BITMAP bmp_struct_32x21 = {
   \                     bmp_struct_32x21:
   \   00000084   0x0020 0x0015      DC16 32, 21, 160, 16
   \              0x00A0 0x0010
   \   0000008C   0x........         DC32 bmp_public_buf, 0H, GUI_BitmapMethodsM565
   \              0x00000000   
   \              0x........   
     51            32,//80, /* XSize */
     52            21,//50, /* YSize */
     53            160, /* BytesPerLine */
     54            16, /* BitsPerPixel */
     55            (unsigned char *)bmp_public_buf,  /* Pointer to picture data */
     56            NULL  /* Pointer to palette */
     57           ,GUI_DRAW_BMPM565
     58          };
     59          
     60          GUI_BITMAP bmp_struct_28x21 = {
   \                     bmp_struct_28x21:
   \   00000098   0x001C 0x0015      DC16 28, 21, 160, 16
   \              0x00A0 0x0010
   \   000000A0   0x........         DC32 bmp_public_buf, 0H, GUI_BitmapMethodsM565
   \              0x00000000   
   \              0x........   

   \                                 In section .data, align 4
   \                     buttonSpace:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000018   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000028   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \                     symbol_key_value:
   \   00000030   0x2C 0x3F          DC8 44, 63, 33, 39, 91, 93, 35, 123, 125, 37, 94, 42, 43, 61, 95, 92
   \              0x21 0x27    
   \              0x5B 0x5D    
   \              0x23 0x7B    
   \              0x7D 0x25    
   \              0x5E 0x2A    
   \              0x2B 0x3D    
   \              0x5F 0x5C    
   \   00000040   0x2F 0x7E          DC8 47, 126, 60, 62, 32, 32, 32, 32, 32, 32, 0, 0
   \              0x3C 0x3E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00 0x00    
     61            28,//80, /* XSize */
     62            21,//50, /* YSize */
     63            160, /* BytesPerLine */
     64            16, /* BitsPerPixel */
     65            (unsigned char *)bmp_public_buf,  /* Pointer to picture data */
     66            NULL  /* Pointer to palette */
     67           ,GUI_DRAW_BMPM565
     68          };
     69          

   \                                 In section .text, align 2, keep-with-next
     70          static void cbKeyboardWin(WM_MESSAGE * pMsg) {
   \                     _Z13cbKeyboardWinP10WM_MESSAGE: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB088             SUB      SP,SP,#+32
   \   00000006   0x4604             MOV      R4,R0
     71                 char buf[NUMBER_OF_DIGITS+2];
     72          	uint8_t i=0;
     73          	
     74          	char wifi_ret_head = 0xa5;
                 	     ^
Warning[Pe177]: variable "wifi_ret_head" was declared but never referenced
     75          	char wifi_ret_tail = 0xfc;
                 	     ^
Warning[Pe177]: variable "wifi_ret_tail" was declared but never referenced
     76          	char type = 0x08;
                 	     ^
Warning[Pe177]: variable "type" was declared but never referenced
     77          	int data_len = 0;
                 	    ^
Warning[Pe177]: variable "data_len" was declared but never referenced
     78          	int data_offset = 4;
                 	    ^
Warning[Pe177]: variable "data_offset" was declared but never referenced
     79          	char *p=0,*q=0;
                 	      ^
Warning[Pe177]: variable "p" was declared but never referenced

  	char *p=0,*q=0;
  	           ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_keyboard.cpp",79  Warning[Pe177]: 
          variable "q" was declared but never referenced
     80              
     81              struct PressEvt *press_event;
                                      ^
Warning[Pe550]: variable "press_event" was set but never used
     82          
     83              //memset(buf,' ',NUMBER_OF_DIGITS+1);
     84              ///buf[NUMBER_OF_DIGITS+1]=0;
     85          	
     86              switch (pMsg->MsgId)
   \   00000008   0x6820             LDR      R0,[R4, #+0]
   \   0000000A   0x280F             CMP      R0,#+15
   \   0000000C   0xD003             BEQ.N    ??cbKeyboardWin_0
   \   0000000E   0x2826             CMP      R0,#+38
   \   00000010   0xF000 0x808A      BEQ.W    ??cbKeyboardWin_1
   \   00000014   0xE3BB             B.N      ??cbKeyboardWin_2
     87              {
     88          		case WM_PAINT:
     89          			//GUI_SetColor(BUTTON_PRESS_BK_COLOR);
     90          			//GUI_FillRect(0,titleHeight-2,LCD_WIDTH,titleHeight);
     91                      
     92          			GUI_SetColor(0x979797);
   \                     ??cbKeyboardWin_0: (+1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable14  ;; 0x979797
   \   0000001A   0x.... 0x....      BL       GUI_SetColor
     93          			GUI_FillRect(0,VALUE_DISP_HEIGHT,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1);//บแฯ฿
   \   0000001E   0x233D             MOVS     R3,#+61
   \   00000020   0xF44F 0x72ED      MOV      R2,#+474
   \   00000024   0x213C             MOVS     R1,#+60
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       GUI_FillRect
     94          	            	GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT+1);
   \   0000002C   0x2368             MOVS     R3,#+104
   \   0000002E   0xF44F 0x72ED      MOV      R2,#+474
   \   00000032   0x2167             MOVS     R1,#+103
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x.... 0x....      BL       GUI_FillRect
     95          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*2+1,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*2+1*2);
   \   0000003A   0x2393             MOVS     R3,#+147
   \   0000003C   0xF44F 0x72ED      MOV      R2,#+474
   \   00000040   0x2192             MOVS     R1,#+146
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      BL       GUI_FillRect
     96          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*3+1*2,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*3+1*3);
   \   00000048   0x23BE             MOVS     R3,#+190
   \   0000004A   0xF44F 0x72ED      MOV      R2,#+474
   \   0000004E   0x21BD             MOVS     R1,#+189
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       GUI_FillRect
     97          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*3,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*4);
   \   00000056   0x23E9             MOVS     R3,#+233
   \   00000058   0xF44F 0x72ED      MOV      R2,#+474
   \   0000005C   0x21E8             MOVS     R1,#+232
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       GUI_FillRect
     98          			GUI_FillRect(0,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*5+1*4,LCD_WIDTH-6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*5+1*5);
   \   00000064   0xF240 0x1413      MOVW     R4,#+275
   \   00000068   0xF44F 0x738A      MOV      R3,#+276
   \   0000006C   0xF44F 0x72ED      MOV      R2,#+474
   \   00000070   0x4621             MOV      R1,R4
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       GUI_FillRect
     99          
    100          			GUI_FillRect(FIRST_LINE_WIDTH,VALUE_DISP_HEIGHT,FIRST_LINE_WIDTH+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);//ตฺาปะะส๚ฯ฿
   \   00000078   0x2367             MOVS     R3,#+103
   \   0000007A   0x2260             MOVS     R2,#+96
   \   0000007C   0x213C             MOVS     R1,#+60
   \   0000007E   0x205F             MOVS     R0,#+95
   \   00000080   0x.... 0x....      BL       GUI_FillRect
    101          			GUI_FillRect(FIRST_LINE_WIDTH+1+FIRST_LINE_WIDTH*1,VALUE_DISP_HEIGHT,(FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*1+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);
   \   00000084   0x2367             MOVS     R3,#+103
   \   00000086   0x22C0             MOVS     R2,#+192
   \   00000088   0x213C             MOVS     R1,#+60
   \   0000008A   0x20BF             MOVS     R0,#+191
   \   0000008C   0x.... 0x....      BL       GUI_FillRect
    102          			GUI_FillRect((FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*2+1,VALUE_DISP_HEIGHT,(FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*2+1+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);
   \   00000090   0x2367             MOVS     R3,#+103
   \   00000092   0xF44F 0x7290      MOV      R2,#+288
   \   00000096   0x213C             MOVS     R1,#+60
   \   00000098   0xF240 0x101F      MOVW     R0,#+287
   \   0000009C   0x.... 0x....      BL       GUI_FillRect
    103          			GUI_FillRect((FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*3+1+1,VALUE_DISP_HEIGHT,(FIRST_LINE_WIDTH+1)+FIRST_LINE_WIDTH*3+1+1+1,VALUE_DISP_HEIGHT+(KEY_HEIGHT+1)*1);
   \   000000A0   0x2367             MOVS     R3,#+103
   \   000000A2   0xF44F 0x72C0      MOV      R2,#+384
   \   000000A6   0x213C             MOVS     R1,#+60
   \   000000A8   0xF240 0x107F      MOVW     R0,#+383
   \   000000AC   0x.... 0x....      BL       GUI_FillRect
    104          
    105          			GUI_FillRect(KEY_WIDTH,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH+1,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+4);//ส๚ฯ฿
   \   000000B0   0xF44F 0x7389      MOV      R3,#+274
   \   000000B4   0x2244             MOVS     R2,#+68
   \   000000B6   0x2167             MOVS     R1,#+103
   \   000000B8   0x2043             MOVS     R0,#+67
   \   000000BA   0x.... 0x....      BL       GUI_FillRect
    106          			GUI_FillRect(KEY_WIDTH*2+1,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*2+1*2,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
   \   000000BE   0x4623             MOV      R3,R4
   \   000000C0   0x2288             MOVS     R2,#+136
   \   000000C2   0x2167             MOVS     R1,#+103
   \   000000C4   0x2087             MOVS     R0,#+135
   \   000000C6   0x.... 0x....      BL       GUI_FillRect
    107          			GUI_FillRect(KEY_WIDTH*3+1*2,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*3+1*3,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
   \   000000CA   0x4623             MOV      R3,R4
   \   000000CC   0x22CC             MOVS     R2,#+204
   \   000000CE   0x2167             MOVS     R1,#+103
   \   000000D0   0x20CB             MOVS     R0,#+203
   \   000000D2   0x.... 0x....      BL       GUI_FillRect
    108          			GUI_FillRect(KEY_WIDTH*4+1*3,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*4+1*4,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
   \   000000D6   0x4623             MOV      R3,R4
   \   000000D8   0xF44F 0x7288      MOV      R2,#+272
   \   000000DC   0x2167             MOVS     R1,#+103
   \   000000DE   0xF240 0x100F      MOVW     R0,#+271
   \   000000E2   0x.... 0x....      BL       GUI_FillRect
    109          			GUI_FillRect(KEY_WIDTH*5+1*4,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*5+1*5,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
   \   000000E6   0x4623             MOV      R3,R4
   \   000000E8   0xF44F 0x72AA      MOV      R2,#+340
   \   000000EC   0x2167             MOVS     R1,#+103
   \   000000EE   0xF240 0x1053      MOVW     R0,#+339
   \   000000F2   0x.... 0x....      BL       GUI_FillRect
    110          			GUI_FillRect(KEY_WIDTH*6+1*5,VALUE_DISP_HEIGHT+1+KEY_HEIGHT,KEY_WIDTH*6+1*6,VALUE_DISP_HEIGHT+KEY_HEIGHT*5+5);
   \   000000F6   0x4623             MOV      R3,R4
   \   000000F8   0xF44F 0x72CC      MOV      R2,#+408
   \   000000FC   0x2167             MOVS     R1,#+103
   \   000000FE   0xF240 0x1097      MOVW     R0,#+407
   \   00000102   0x.... 0x....      BL       GUI_FillRect
    111          
    112          			GUI_FillRect(123,VALUE_DISP_HEIGHT+KEY_HEIGHT*4+4+1,123+1,LCD_HEIGHT);//ื๎บ๓าปะะส๚ฯ฿
   \   00000106   0xF44F 0x73A0      MOV      R3,#+320
   \   0000010A   0x227C             MOVS     R2,#+124
   \   0000010C   0x21E9             MOVS     R1,#+233
   \   0000010E   0x207B             MOVS     R0,#+123
   \   00000110   0x.... 0x....      BL       GUI_FillRect
    113          			GUI_FillRect(358,VALUE_DISP_HEIGHT+KEY_HEIGHT*4+4+1,358+1,LCD_HEIGHT);
   \   00000114   0xF44F 0x73A0      MOV      R3,#+320
   \   00000118   0xF240 0x1267      MOVW     R2,#+359
   \   0000011C   0x21E9             MOVS     R1,#+233
   \   0000011E   0xF44F 0x70B3      MOV      R0,#+358
   \   00000122   0x.... 0x....      BL       GUI_FillRect
    114          	            
    115          			break;
   \   00000126   0xE332             B.N      ??cbKeyboardWin_2
    116          		case WM_TOUCH:
    117          		 	press_event = (struct PressEvt *)pMsg->Data.p;
    118          			
    119          			break;   
    120          		case WM_TOUCH_CHILD:
    121          			press_event = (struct PressEvt *)pMsg->Data.p;
    122          
    123          			break;
    124          			
    125          		case WM_NOTIFY_PARENT:
    126                      if(pMsg->Data.v == WM_NOTIFICATION_RELEASED)
   \                     ??cbKeyboardWin_1: (+1)
   \   00000128   0x68A0             LDR      R0,[R4, #+8]
   \   0000012A   0x2802             CMP      R0,#+2
   \   0000012C   0xF040 0x82C4      BNE.W    ??cbKeyboardWin_3
    127                      {
    128                      			if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   00000130   0xF9B4 0x1006      LDRSH    R1,[R4, #+6]
   \   00000134   0x.... 0x....      LDR.W    R5,??DataTable16
   \   00000138   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000013C   0x4281             CMP      R1,R0
   \   0000013E   0xD10D             BNE.N    ??cbKeyboardWin_4
    129          				{
    130          					key_value_calc.timer = TIMER_STOP;
   \   00000140   0x2000             MOVS     R0,#+0
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable14_1
   \   00000146   0xF881 0x0025      STRB     R0,[R1, #+37]
    131                                            last_disp_state = KEY_BOARD_UI;
   \   0000014A   0x2023             MOVS     R0,#+35
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000150   0x7008             STRB     R0,[R1, #+0]
    132          					Clear_Keyboard();				
   \   00000152   0x.... 0x....      BL       Clear_Keyboard
    133          					draw_return_ui();
   \   00000156   0x.... 0x....      BL       draw_return_ui
   \   0000015A   0xE318             B.N      ??cbKeyboardWin_2
    134          				}
    135          				else if(pMsg->hWinSrc == buttonJoint.btnHandle)
   \                     ??cbKeyboardWin_4: (+1)
   \   0000015C   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000160   0x4281             CMP      R1,R0
   \   00000162   0xD157             BNE.N    ??cbKeyboardWin_5
    136          				{
    137          					//BUTTON_SetFont(buttonJoint.btnHandle,&GUI_FontHelvetica26);
    138          					if(key_value_calc.cnt > 0)
   \   00000164   0x.... 0x....      LDR.W    R8,??DataTable14_1
   \   00000168   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xF000 0x830E      BEQ.W    ??cbKeyboardWin_2
    139          					{
    140          						key_value_calc.timer = TIMER_STOP;
   \   00000172   0x2000             MOVS     R0,#+0
   \   00000174   0xF888 0x0025      STRB     R0,[R8, #+37]
    141          
    142          						memset((void *)gCfgItems.wifi_ap, 0, sizeof(gCfgItems.wifi_ap));
   \   00000178   0x.... 0x....      LDR.W    R4,??DataTable15
   \   0000017C   0xF204 0x15CB      ADDW     R5,R4,#+459
   \   00000180   0x2220             MOVS     R2,#+32
   \   00000182   0x4601             MOV      R1,R0
   \   00000184   0x4628             MOV      R0,R5
   \   00000186   0x.... 0x....      BL       memset
    143          						memcpy((void *)gCfgItems.wifi_ap, wifi_list.wifiName[wifi_list.nameIndex], 32);
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   0000018E   0x2220             MOVS     R2,#+32
   \   00000190   0xF990 0x1001      LDRSB    R1,[R0, #+1]
   \   00000194   0xEB01 0x1141      ADD      R1,R1,R1, LSL #+5
   \   00000198   0x1808             ADDS     R0,R1,R0
   \   0000019A   0xF100 0x0118      ADD      R1,R0,#+24
   \   0000019E   0x4628             MOV      R0,R5
   \   000001A0   0x.... 0x....      BL       memcpy
    144          
    145          						memset((void *)gCfgItems.wifi_key, 0, sizeof(gCfgItems.wifi_key));
   \   000001A4   0xF204 0x15EB      ADDW     R5,R4,#+491
   \   000001A8   0x2240             MOVS     R2,#+64
   \   000001AA   0x2100             MOVS     R1,#+0
   \   000001AC   0x4628             MOV      R0,R5
   \   000001AE   0x.... 0x....      BL       memset
    146          						memcpy((void *)gCfgItems.wifi_key, key_value_calc.password_value, sizeof(key_value_calc.password_value));
   \   000001B2   0x2212             MOVS     R2,#+18
   \   000001B4   0xF108 0x0101      ADD      R1,R8,#+1
   \   000001B8   0x4628             MOV      R0,R5
   \   000001BA   0x.... 0x....      BL       memcpy
    147          
    148          						gCfgItems.wifi_mode_sel = 2;
   \   000001BE   0x2002             MOVS     R0,#+2
   \   000001C0   0xF884 0x022B      STRB     R0,[R4, #+555]
    149          						
    150          						package_to_wifi(WIFI_PARA_SET, (char *)0, 0);
   \   000001C4   0x2200             MOVS     R2,#+0
   \   000001C6   0x4611             MOV      R1,R2
   \   000001C8   0x4608             MOV      R0,R1
   \   000001CA   0x.... 0x....      BL       _Z15package_to_wifi13WIFI_RET_TYPEPci
    151          
    152          						//มฌฝำฤฟวฐลไึรตฤwifiศศตใ
    153          						buf[0] = 0xA5;
   \   000001CE   0xF06F 0x005A      MVN      R0,#+90
   \   000001D2   0xF88D 0x0004      STRB     R0,[SP, #+4]
    154          						buf[1] = 0x09;
   \   000001D6   0xA801             ADD      R0,SP,#+4
   \   000001D8   0x2109             MOVS     R1,#+9
   \   000001DA   0x7041             STRB     R1,[R0, #+1]
    155          						buf[2] = 0x01;
   \   000001DC   0x2101             MOVS     R1,#+1
   \   000001DE   0x7081             STRB     R1,[R0, #+2]
    156          						buf[3] = 0x00;
   \   000001E0   0x2100             MOVS     R1,#+0
   \   000001E2   0x70C1             STRB     R1,[R0, #+3]
    157          						buf[4] = 0x01;
   \   000001E4   0x2101             MOVS     R1,#+1
   \   000001E6   0x7101             STRB     R1,[R0, #+4]
    158          						buf[5] = 0xFC;
   \   000001E8   0xF06F 0x0103      MVN      R1,#+3
   \   000001EC   0xF88D 0x1009      STRB     R1,[SP, #+9]
    159          						buf[6] = 0x00;
   \   000001F0   0x2100             MOVS     R1,#+0
   \   000001F2   0x7181             STRB     R1,[R0, #+6]
    160          						raw_send_to_wifi(buf, 6);
   \   000001F4   0x2106             MOVS     R1,#+6
   \   000001F6   0x.... 0x....      BL       _Z16raw_send_to_wifiPci
    161          
    162          						last_disp_state = KEY_BOARD_UI;
   \   000001FA   0x2023             MOVS     R0,#+35
   \   000001FC   0x.... 0x....      LDR.W    R1,??DataTable14_2
   \   00000200   0x7008             STRB     R0,[R1, #+0]
    163          						Clear_Keyboard();
   \   00000202   0x.... 0x....      BL       Clear_Keyboard
    164          						tips_type = TIPS_TYPE_JOINING;
   \   00000206   0x2000             MOVS     R0,#+0
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable17
   \   0000020C   0x7008             STRB     R0,[R1, #+0]
    165          						draw_Tips();
   \   0000020E   0x.... 0x....      BL       draw_Tips
   \   00000212   0xE2BC             B.N      ??cbKeyboardWin_2
    166          					}
    167          				}       
    168          				else if(pMsg->hWinSrc == buttondel2.btnHandle)
   \                     ??cbKeyboardWin_5: (+1)
   \   00000214   0x.... 0x....      LDR.W    R6,??DataTable17_1
   \   00000218   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000021C   0x4281             CMP      R1,R0
   \   0000021E   0xD141             BNE.N    ??cbKeyboardWin_6
    169          				{
    170          					BUTTON_SetBmpFileName(buttondel2.btnHandle, "bmp_backspace_white.bin",1);
   \   00000220   0x2201             MOVS     R2,#+1
   \   00000222   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_backspace_white.bin">`
   \   00000226   0x.... 0x....      BL       BUTTON_SetBmpFileName
    171                                     		BUTTON_SetBitmapEx(buttondel2.btnHandle, 0, &bmp_struct_32x21,18, 11);
   \   0000022A   0x200B             MOVS     R0,#+11
   \   0000022C   0x9000             STR      R0,[SP, #+0]
   \   0000022E   0x2312             MOVS     R3,#+18
   \   00000230   0xF105 0x0284      ADD      R2,R5,#+132
   \   00000234   0x2100             MOVS     R1,#+0
   \   00000236   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   0000023A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    172          					if(key_value_calc.cnt > 0)
   \   0000023E   0x.... 0x....      LDR.W    R8,??DataTable14_1
   \   00000242   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000246   0x2800             CMP      R0,#+0
   \   00000248   0xD002             BEQ.N    ??cbKeyboardWin_7
    173          			              {   
    174          			                   key_value_calc.cnt--;  
   \   0000024A   0x1E40             SUBS     R0,R0,#+1
   \   0000024C   0xF888 0x0000      STRB     R0,[R8, #+0]
    175          			              }
    176          		                	key_value_calc.password_value[key_value_calc.cnt] = 0;
   \                     ??cbKeyboardWin_7: (+1)
   \   00000250   0x2000             MOVS     R0,#+0
   \   00000252   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   00000256   0x4441             ADD      R1,R1,R8
   \   00000258   0x7048             STRB     R0,[R1, #+1]
    177          					key_value_calc.password_disp[key_value_calc.cnt] = 0;
   \   0000025A   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   0000025E   0x4441             ADD      R1,R1,R8
   \   00000260   0x74C8             STRB     R0,[R1, #+19]
    178          					if(key_value_calc.cnt  == 0)
   \   00000262   0x.... 0x....      LDR.W    R7,??DataTable18
   \   00000266   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   0000026A   0x2800             CMP      R0,#+0
   \   0000026C   0xD113             BNE.N    ??cbKeyboardWin_8
    179          					{
    180          						strncpy((char *)key_value_calc.password_disp,keyboard_menu.password,sizeof(key_value_calc.password_disp));
   \   0000026E   0x2212             MOVS     R2,#+18
   \   00000270   0x6D69             LDR      R1,[R5, #+84]
   \   00000272   0xF108 0x0013      ADD      R0,R8,#+19
   \   00000276   0x.... 0x....      BL       strncpy
    181          						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
   \   0000027A   0x.... 0x....      LDR.W    R4,??DataTable18_1  ;; 0x3f3f3f
   \   0000027E   0x4622             MOV      R2,R4
   \   00000280   0x2101             MOVS     R1,#+1
   \   00000282   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000286   0x.... 0x....      BL       BUTTON_SetTextColor
    182              						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
   \   0000028A   0x4622             MOV      R2,R4
   \   0000028C   0x2100             MOVS     R1,#+0
   \   0000028E   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000292   0x.... 0x....      BL       BUTTON_SetTextColor
    183          					}
    184          					BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \                     ??cbKeyboardWin_8: (+1)
   \   00000296   0xF108 0x0113      ADD      R1,R8,#+19
   \   0000029A   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000029E   0x.... 0x....      BL       BUTTON_SetText
   \   000002A2   0xE274             B.N      ??cbKeyboardWin_2
    185          				}  
    186          				else if(pMsg->hWinSrc == buttonSpace.btnHandle)
   \                     ??cbKeyboardWin_6: (+1)
   \   000002A4   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   000002A8   0x4281             CMP      R1,R0
   \   000002AA   0xD14B             BNE.N    ??cbKeyboardWin_9
    187          		              {
    188          		              	//BUTTON_SetFont(buttonSpace.btnHandle,&GUI_FontHelvetica20);
    189          		              	if(key_value_calc.cnt == 0)
   \   000002AC   0x.... 0x....      LDR.W    R8,??DataTable14_1
   \   000002B0   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   000002B4   0x2800             CMP      R0,#+0
   \   000002B6   0xD11B             BNE.N    ??cbKeyboardWin_10
    190          		              	{
    191          		              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   000002B8   0x2212             MOVS     R2,#+18
   \   000002BA   0x2100             MOVS     R1,#+0
   \   000002BC   0xF108 0x0013      ADD      R0,R8,#+19
   \   000002C0   0x.... 0x....      BL       memset
    192          		              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \   000002C4   0xF06F 0x4A7F      MVN      R10,#-16777216
   \   000002C8   0x.... 0x....      LDR.W    R7,??DataTable18
   \   000002CC   0x4652             MOV      R2,R10
   \   000002CE   0x2101             MOVS     R1,#+1
   \   000002D0   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002D4   0x.... 0x....      BL       BUTTON_SetTextColor
    193              						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   000002D8   0x4652             MOV      R2,R10
   \   000002DA   0x2100             MOVS     R1,#+0
   \   000002DC   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002E0   0x.... 0x....      BL       BUTTON_SetTextColor
    194          						BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   000002E4   0xF108 0x0113      ADD      R1,R8,#+19
   \   000002E8   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000002EC   0x.... 0x....      BL       BUTTON_SetText
    195          		              	}
    196          		                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
   \                     ??cbKeyboardWin_10: (+1)
   \   000002F0   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   000002F4   0x4601             MOV      R1,R0
   \   000002F6   0x2911             CMP      R1,#+17
   \   000002F8   0xF280 0x8249      BGE.W    ??cbKeyboardWin_2
    197          					{
    198          						key_value_calc.timer = TIMER_STOP;
   \   000002FC   0x2200             MOVS     R2,#+0
   \   000002FE   0xF888 0x2025      STRB     R2,[R8, #+37]
    199          						key_value_calc.timer_count = 0;
   \   00000302   0xF8C8 0x2028      STR      R2,[R8, #+40]
    200          						if(key_value_calc.cnt > 0)
   \   00000306   0x2800             CMP      R0,#+0
   \   00000308   0xD002             BEQ.N    ??cbKeyboardWin_11
    201          						{
    202          							key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
   \   0000030A   0x2060             MOVS     R0,#+96
   \   0000030C   0x4441             ADD      R1,R1,R8
   \   0000030E   0x7488             STRB     R0,[R1, #+18]
    203          						}
    204          						key_value_calc.password_value[key_value_calc.cnt] = ' ';
   \                     ??cbKeyboardWin_11: (+1)
   \   00000310   0x2020             MOVS     R0,#+32
   \   00000312   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   00000316   0x4441             ADD      R1,R1,R8
   \   00000318   0x7048             STRB     R0,[R1, #+1]
    205          						key_value_calc.password_disp[key_value_calc.cnt] = ' ';
   \   0000031A   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   0000031E   0x4441             ADD      R1,R1,R8
   \   00000320   0x74C8             STRB     R0,[R1, #+19]
    206          						BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   00000322   0xF108 0x0113      ADD      R1,R8,#+19
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable18
   \   0000032A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000032E   0x.... 0x....      BL       BUTTON_SetText
    207                              				key_value_calc.cnt++;
   \   00000332   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000336   0x1C40             ADDS     R0,R0,#+1
   \   00000338   0xF888 0x0000      STRB     R0,[R8, #+0]
    208          						key_value_calc.timer = TIMER_START;
   \   0000033C   0x2001             MOVS     R0,#+1
   \   0000033E   0xF888 0x0025      STRB     R0,[R8, #+37]
   \   00000342   0xE224             B.N      ??cbKeyboardWin_2
    209          					}
    210          		              }
    211          				else if(pMsg->hWinSrc == buttonLetter.btnHandle)
   \                     ??cbKeyboardWin_9: (+1)
   \   00000344   0x.... 0x....      LDR.W    R7,??DataTable18
   \   00000348   0xF9B7 0x0018      LDRSH    R0,[R7, #+24]
   \   0000034C   0x4281             CMP      R1,R0
   \   0000034E   0xD104             BNE.N    ??cbKeyboardWin_12
    212          		              {
    213          		              	//BUTTON_SetFont(buttonLetter.btnHandle,&GUI_FontHelvetica26);
    214          		                     keyboard_stype = UPPER_CASE_LETTER;
   \   00000350   0x2000             MOVS     R0,#+0
   \   00000352   0x7028             STRB     R0,[R5, #+0]
    215          					update_keyboard_disp();
   \   00000354   0x.... 0x....      BL       update_keyboard_disp
   \   00000358   0xE219             B.N      ??cbKeyboardWin_2
    216          		              }
    217          				else if(pMsg->hWinSrc == buttonDigital.btnHandle)
   \                     ??cbKeyboardWin_12: (+1)
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   0000035E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000362   0x4291             CMP      R1,R2
   \   00000364   0xD104             BNE.N    ??cbKeyboardWin_13
    218          		              {
    219          		              	//BUTTON_SetFont(buttonDigital.btnHandle,&GUI_FontHelvetica26);
    220          		                     keyboard_stype = DIGITLA;
   \   00000366   0x2002             MOVS     R0,#+2
   \   00000368   0x7028             STRB     R0,[R5, #+0]
    221          					update_keyboard_disp();
   \   0000036A   0x.... 0x....      BL       update_keyboard_disp
   \   0000036E   0xE20E             B.N      ??cbKeyboardWin_2
    222          		              }
    223          				else if(pMsg->hWinSrc == buttonSymbol.btnHandle)
   \                     ??cbKeyboardWin_13: (+1)
   \   00000370   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
   \   00000374   0x4281             CMP      R1,R0
   \   00000376   0xD104             BNE.N    ??cbKeyboardWin_14
    224          		              {
    225          		              	//BUTTON_SetFont(buttonSymbol.btnHandle,&GUI_FontHelvetica26);
    226          		                     keyboard_stype = SYMBOL;
   \   00000378   0x2003             MOVS     R0,#+3
   \   0000037A   0x7028             STRB     R0,[R5, #+0]
    227          					update_keyboard_disp();
   \   0000037C   0x.... 0x....      BL       update_keyboard_disp
   \   00000380   0xE205             B.N      ??cbKeyboardWin_2
    228          		              }
    229          				else if(pMsg->hWinSrc == buttonArrow.btnHandle)
   \                     ??cbKeyboardWin_14: (+1)
   \   00000382   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000386   0x4281             CMP      R1,R0
   \   00000388   0xD12B             BNE.N    ??cbKeyboardWin_15
    230          		              {
    231          		                     if(keyboard_stype == UPPER_CASE_LETTER)
   \   0000038A   0xF995 0x1000      LDRSB    R1,[R5, #+0]
   \   0000038E   0x2900             CMP      R1,#+0
   \   00000390   0xD111             BNE.N    ??cbKeyboardWin_16
    232          		                     {
    233          		                     	keyboard_stype = LOWER_CASE_LETTER;
   \   00000392   0x2101             MOVS     R1,#+1
   \   00000394   0x7029             STRB     R1,[R5, #+0]
    234          						BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Up_Arrow_White.bin",1);
   \   00000396   0x460A             MOV      R2,R1
   \   00000398   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Up_Arrow_W...">`
   \   0000039C   0x.... 0x....      BL       BUTTON_SetBmpFileName
    235              						BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   000003A0   0x200A             MOVS     R0,#+10
   \   000003A2   0x9000             STR      R0,[SP, #+0]
   \   000003A4   0x2321             MOVS     R3,#+33
   \   000003A6   0xF105 0x0298      ADD      R2,R5,#+152
   \   000003AA   0x2100             MOVS     R1,#+0
   \   000003AC   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   000003B0   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   000003B4   0xE012             B.N      ??cbKeyboardWin_17
    236          		                     }
    237          					else if(keyboard_stype == LOWER_CASE_LETTER)
   \                     ??cbKeyboardWin_16: (+1)
   \   000003B6   0x2901             CMP      R1,#+1
   \   000003B8   0xD110             BNE.N    ??cbKeyboardWin_17
    238          					{
    239          						keyboard_stype = UPPER_CASE_LETTER;
   \   000003BA   0x2100             MOVS     R1,#+0
   \   000003BC   0x7029             STRB     R1,[R5, #+0]
    240          						BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_White.bin",1);
   \   000003BE   0x2201             MOVS     R2,#+1
   \   000003C0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Down_Arrow...">`
   \   000003C4   0x.... 0x....      BL       BUTTON_SetBmpFileName
    241              						BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   000003C8   0x200A             MOVS     R0,#+10
   \   000003CA   0x9000             STR      R0,[SP, #+0]
   \   000003CC   0x2321             MOVS     R3,#+33
   \   000003CE   0xF105 0x0298      ADD      R2,R5,#+152
   \   000003D2   0x2100             MOVS     R1,#+0
   \   000003D4   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   000003D8   0x.... 0x....      BL       BUTTON_SetBitmapEx
    242          					}
    243          					update_keyboard_disp();
   \                     ??cbKeyboardWin_17: (+1)
   \   000003DC   0x.... 0x....      BL       update_keyboard_disp
   \   000003E0   0xE1D5             B.N      ??cbKeyboardWin_2
    244          		              }
    245          				else if(pMsg->hWinSrc == buttonPassword.btnHandle)
   \                     ??cbKeyboardWin_15: (+1)
   \   000003E2   0xF9B7 0x9000      LDRSH    R9,[R7, #+0]
   \   000003E6   0x4549             CMP      R1,R9
   \   000003E8   0xD120             BNE.N    ??cbKeyboardWin_18
    246          				{
    247          					if(key_value_calc.cnt == 0)
   \   000003EA   0x.... 0x....      LDR.W    R8,??DataTable14_1
   \   000003EE   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   000003F2   0x2800             CMP      R0,#+0
   \   000003F4   0xF040 0x81CB      BNE.W    ??cbKeyboardWin_2
    248          		              	{
    249          		              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   000003F8   0x2212             MOVS     R2,#+18
   \   000003FA   0x2100             MOVS     R1,#+0
   \   000003FC   0xF108 0x0013      ADD      R0,R8,#+19
   \   00000400   0x.... 0x....      BL       memset
    250          		              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \   00000404   0xF06F 0x4A7F      MVN      R10,#-16777216
   \   00000408   0x4652             MOV      R2,R10
   \   0000040A   0x2101             MOVS     R1,#+1
   \   0000040C   0x4648             MOV      R0,R9
   \   0000040E   0x.... 0x....      BL       BUTTON_SetTextColor
    251              						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   00000412   0x4652             MOV      R2,R10
   \   00000414   0x2100             MOVS     R1,#+0
   \   00000416   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000041A   0x.... 0x....      BL       BUTTON_SetTextColor
    252          						BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   0000041E   0xF108 0x0113      ADD      R1,R8,#+19
   \   00000422   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000426   0x.... 0x....      BL       BUTTON_SetText
   \   0000042A   0xE1B0             B.N      ??cbKeyboardWin_2
    253          		              	}
    254          				}
    255          				else
    256          				{
    257          					i=26;
   \                     ??cbKeyboardWin_18: (+1)
   \   0000042C   0xF04F 0x091A      MOV      R9,#+26
   \   00000430   0x.... 0x....      LDR.W    R8,??DataTable14_1
   \   00000434   0xE044             B.N      ??cbKeyboardWin_19
    258                                     		while(i--)
    259          	                           	{
    260          						if(pMsg->hWinSrc == buttonWifiKey[i].btnHandle)
    261          						{
    262          							//BUTTON_SetFont(buttonWifiKey[i].btnHandle,&GUI_FontHelvetica26);
    263          							switch(keyboard_stype)
    264          							{
    265          								case UPPER_CASE_LETTER:
    266          									if(key_value_calc.cnt == 0)
   \                     ??cbKeyboardWin_20: (+1)
   \   00000436   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   0000043A   0x2800             CMP      R0,#+0
   \   0000043C   0xD119             BNE.N    ??cbKeyboardWin_21
    267          						              	{
    268          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   0000043E   0x2212             MOVS     R2,#+18
   \   00000440   0x2100             MOVS     R1,#+0
   \   00000442   0xF108 0x0013      ADD      R0,R8,#+19
   \   00000446   0x.... 0x....      BL       memset
    269          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \   0000044A   0xF06F 0x4A7F      MVN      R10,#-16777216
   \   0000044E   0x4652             MOV      R2,R10
   \   00000450   0x2101             MOVS     R1,#+1
   \   00000452   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000456   0x.... 0x....      BL       BUTTON_SetTextColor
    270          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   0000045A   0x4652             MOV      R2,R10
   \   0000045C   0x2100             MOVS     R1,#+0
   \   0000045E   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000462   0x.... 0x....      BL       BUTTON_SetTextColor
    271          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   00000466   0xF108 0x0113      ADD      R1,R8,#+19
   \   0000046A   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000046E   0x.... 0x....      BL       BUTTON_SetText
    272          						              	}
    273          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
   \                     ??cbKeyboardWin_21: (+1)
   \   00000472   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000476   0x4601             MOV      R1,R0
   \   00000478   0x2911             CMP      R1,#+17
   \   0000047A   0xDA21             BGE.N    ??cbKeyboardWin_19
    274          									{
    275          										key_value_calc.timer = TIMER_STOP;
   \   0000047C   0x2200             MOVS     R2,#+0
   \   0000047E   0xF888 0x2025      STRB     R2,[R8, #+37]
    276          										key_value_calc.timer_count = 0;
   \   00000482   0xF8C8 0x2028      STR      R2,[R8, #+40]
    277          										if(key_value_calc.cnt > 0)
   \   00000486   0x2800             CMP      R0,#+0
   \   00000488   0xD002             BEQ.N    ??cbKeyboardWin_22
    278          										{
    279          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
   \   0000048A   0x2060             MOVS     R0,#+96
   \   0000048C   0x4441             ADD      R1,R1,R8
   \   0000048E   0x7488             STRB     R0,[R1, #+18]
    280          										}
    281          										key_value_calc.password_value[key_value_calc.cnt] = 'A' + i;
   \                     ??cbKeyboardWin_22: (+1)
   \   00000490   0xF109 0x0041      ADD      R0,R9,#+65
   \   00000494   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   00000498   0x4441             ADD      R1,R1,R8
   \   0000049A   0x7048             STRB     R0,[R1, #+1]
    282          										key_value_calc.password_disp[key_value_calc.cnt] = 'A' + i;
   \   0000049C   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   000004A0   0x4441             ADD      R1,R1,R8
   \   000004A2   0x74C8             STRB     R0,[R1, #+19]
    283          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   000004A4   0xF108 0x0113      ADD      R1,R8,#+19
   \   000004A8   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000004AC   0x.... 0x....      BL       BUTTON_SetText
    284          				                    				key_value_calc.cnt++;
   \   000004B0   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   000004B4   0x1C40             ADDS     R0,R0,#+1
   \   000004B6   0xF888 0x0000      STRB     R0,[R8, #+0]
    285          										key_value_calc.timer = TIMER_START;
   \   000004BA   0x2001             MOVS     R0,#+1
   \   000004BC   0xF888 0x0025      STRB     R0,[R8, #+37]
    286          									}
   \                     ??cbKeyboardWin_19: (+1)
   \   000004C0   0x4648             MOV      R0,R9
   \   000004C2   0xF1A0 0x0901      SUB      R9,R0,#+1
   \   000004C6   0xFA5F 0xF989      UXTB     R9,R9
   \   000004CA   0x2800             CMP      R0,#+0
   \   000004CC   0xF000 0x815F      BEQ.W    ??cbKeyboardWin_2
   \   000004D0   0xF9B4 0x0006      LDRSH    R0,[R4, #+6]
   \   000004D4   0xEB09 0x0149      ADD      R1,R9,R9, LSL #+1
   \   000004D8   0x00C9             LSLS     R1,R1,#+3
   \   000004DA   0x.... 0x....      LDR.W    R2,??DataTable18_3
   \   000004DE   0x5E89             LDRSH    R1,[R1, R2]
   \   000004E0   0x4288             CMP      R0,R1
   \   000004E2   0xD1ED             BNE.N    ??cbKeyboardWin_19
   \   000004E4   0xF995 0x0000      LDRSB    R0,[R5, #+0]
   \   000004E8   0x2800             CMP      R0,#+0
   \   000004EA   0xD0A4             BEQ.N    ??cbKeyboardWin_20
   \   000004EC   0x2802             CMP      R0,#+2
   \   000004EE   0xD04A             BEQ.N    ??cbKeyboardWin_23
   \   000004F0   0xD303             BCC.N    ??cbKeyboardWin_24
   \   000004F2   0x2803             CMP      R0,#+3
   \   000004F4   0xF000 0x8093      BEQ.W    ??cbKeyboardWin_25
   \   000004F8   0xE7E2             B.N      ??cbKeyboardWin_19
    287          									break;
    288          								case LOWER_CASE_LETTER:
    289          									if(key_value_calc.cnt == 0)
   \                     ??cbKeyboardWin_24: (+1)
   \   000004FA   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   000004FE   0x2800             CMP      R0,#+0
   \   00000500   0xD119             BNE.N    ??cbKeyboardWin_26
    290          						              	{
    291          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   00000502   0x2212             MOVS     R2,#+18
   \   00000504   0x2100             MOVS     R1,#+0
   \   00000506   0xF108 0x0013      ADD      R0,R8,#+19
   \   0000050A   0x.... 0x....      BL       memset
    292          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \   0000050E   0xF06F 0x4A7F      MVN      R10,#-16777216
   \   00000512   0x4652             MOV      R2,R10
   \   00000514   0x2101             MOVS     R1,#+1
   \   00000516   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000051A   0x.... 0x....      BL       BUTTON_SetTextColor
    293          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   0000051E   0x4652             MOV      R2,R10
   \   00000520   0x2100             MOVS     R1,#+0
   \   00000522   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000526   0x.... 0x....      BL       BUTTON_SetTextColor
    294          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   0000052A   0xF108 0x0113      ADD      R1,R8,#+19
   \   0000052E   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000532   0x.... 0x....      BL       BUTTON_SetText
    295          						              	}
    296          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
   \                     ??cbKeyboardWin_26: (+1)
   \   00000536   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   0000053A   0x4601             MOV      R1,R0
   \   0000053C   0x2911             CMP      R1,#+17
   \   0000053E   0xDABF             BGE.N    ??cbKeyboardWin_19
    297          									{
    298          										key_value_calc.timer = TIMER_STOP;
   \   00000540   0x2200             MOVS     R2,#+0
   \   00000542   0xF888 0x2025      STRB     R2,[R8, #+37]
    299          										key_value_calc.timer_count = 0;
   \   00000546   0xF8C8 0x2028      STR      R2,[R8, #+40]
    300          										if(key_value_calc.cnt > 0)
   \   0000054A   0x2800             CMP      R0,#+0
   \   0000054C   0xD002             BEQ.N    ??cbKeyboardWin_27
    301          										{
    302          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
   \   0000054E   0x2060             MOVS     R0,#+96
   \   00000550   0x4441             ADD      R1,R1,R8
   \   00000552   0x7488             STRB     R0,[R1, #+18]
    303          										}
    304          										key_value_calc.password_value[key_value_calc.cnt] = 'a' + i;
   \                     ??cbKeyboardWin_27: (+1)
   \   00000554   0xF109 0x0061      ADD      R0,R9,#+97
   \   00000558   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   0000055C   0x4441             ADD      R1,R1,R8
   \   0000055E   0x7048             STRB     R0,[R1, #+1]
    305          										key_value_calc.password_disp[key_value_calc.cnt] = 'a' + i;
   \   00000560   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   00000564   0x4441             ADD      R1,R1,R8
   \   00000566   0x74C8             STRB     R0,[R1, #+19]
    306          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   00000568   0xF108 0x0113      ADD      R1,R8,#+19
   \   0000056C   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000570   0x.... 0x....      BL       BUTTON_SetText
    307          				                    				key_value_calc.cnt++;
   \   00000574   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000578   0x1C40             ADDS     R0,R0,#+1
   \   0000057A   0xF888 0x0000      STRB     R0,[R8, #+0]
    308          										key_value_calc.timer = TIMER_START;
   \   0000057E   0x2001             MOVS     R0,#+1
   \   00000580   0xF888 0x0025      STRB     R0,[R8, #+37]
   \   00000584   0xE79C             B.N      ??cbKeyboardWin_19
    309          									}
    310          									break;
    311          								case DIGITLA:
    312          									if(i >= 21)
   \                     ??cbKeyboardWin_23: (+1)
   \   00000586   0xF1B9 0x0F15      CMP      R9,#+21
   \   0000058A   0xDA99             BGE.N    ??cbKeyboardWin_19
    313          									{
    314          										continue;
    315          									}
    316          									if(key_value_calc.cnt == 0)
   \   0000058C   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000590   0x2800             CMP      R0,#+0
   \   00000592   0xD119             BNE.N    ??cbKeyboardWin_28
    317          						              	{
    318          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   00000594   0x2212             MOVS     R2,#+18
   \   00000596   0x2100             MOVS     R1,#+0
   \   00000598   0xF108 0x0013      ADD      R0,R8,#+19
   \   0000059C   0x.... 0x....      BL       memset
    319          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \   000005A0   0xF06F 0x4A7F      MVN      R10,#-16777216
   \   000005A4   0x4652             MOV      R2,R10
   \   000005A6   0x2101             MOVS     R1,#+1
   \   000005A8   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000005AC   0x.... 0x....      BL       BUTTON_SetTextColor
    320          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   000005B0   0x4652             MOV      R2,R10
   \   000005B2   0x2100             MOVS     R1,#+0
   \   000005B4   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000005B8   0x.... 0x....      BL       BUTTON_SetTextColor
    321          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   000005BC   0xF108 0x0113      ADD      R1,R8,#+19
   \   000005C0   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000005C4   0x.... 0x....      BL       BUTTON_SetText
    322          						              	}
    323          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
   \                     ??cbKeyboardWin_28: (+1)
   \   000005C8   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   000005CC   0x4601             MOV      R1,R0
   \   000005CE   0x2911             CMP      R1,#+17
   \   000005D0   0xF6BF 0xAF76      BGE.W    ??cbKeyboardWin_19
    324          									{
    325          										key_value_calc.timer = TIMER_STOP;
   \   000005D4   0x2200             MOVS     R2,#+0
   \   000005D6   0xF888 0x2025      STRB     R2,[R8, #+37]
    326          										key_value_calc.timer_count = 0;
   \   000005DA   0xF8C8 0x2028      STR      R2,[R8, #+40]
    327          										if(key_value_calc.cnt > 0)
   \   000005DE   0x2800             CMP      R0,#+0
   \   000005E0   0xD002             BEQ.N    ??cbKeyboardWin_29
    328          										{
    329          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
   \   000005E2   0x2060             MOVS     R0,#+96
   \   000005E4   0x4441             ADD      R1,R1,R8
   \   000005E6   0x7488             STRB     R0,[R1, #+18]
   \                     ??cbKeyboardWin_29: (+1)
   \   000005E8   0xEB09 0x0005      ADD      R0,R9,R5
   \   000005EC   0xF990 0x0068      LDRSB    R0,[R0, #+104]
   \   000005F0   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   000005F4   0x4441             ADD      R1,R1,R8
   \   000005F6   0x7048             STRB     R0,[R1, #+1]
    330          										}
    331          										key_value_calc.password_value[key_value_calc.cnt] = (uint8_t)digital_key_value[i];
    332          										key_value_calc.password_disp[key_value_calc.cnt] = (uint8_t)digital_key_value[i];
   \   000005F8   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   000005FC   0x4441             ADD      R1,R1,R8
   \   000005FE   0x74C8             STRB     R0,[R1, #+19]
    333          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   00000600   0xF108 0x0113      ADD      R1,R8,#+19
   \   00000604   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000608   0x.... 0x....      BL       BUTTON_SetText
    334          				                    				key_value_calc.cnt++;
   \   0000060C   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000610   0x1C40             ADDS     R0,R0,#+1
   \   00000612   0xF888 0x0000      STRB     R0,[R8, #+0]
    335          										key_value_calc.timer = TIMER_START;
   \   00000616   0x2001             MOVS     R0,#+1
   \   00000618   0xF888 0x0025      STRB     R0,[R8, #+37]
   \   0000061C   0xE750             B.N      ??cbKeyboardWin_19
    336          									}
    337          									break;
    338          								case SYMBOL:
    339          									if(i >= 20)
   \                     ??cbKeyboardWin_25: (+1)
   \   0000061E   0xF1B9 0x0F14      CMP      R9,#+20
   \   00000622   0xF6BF 0xAF4D      BGE.W    ??cbKeyboardWin_19
    340          									{
    341          										continue;
    342          									}
    343          									if(key_value_calc.cnt == 0)
   \   00000626   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   0000062A   0x2800             CMP      R0,#+0
   \   0000062C   0xD119             BNE.N    ??cbKeyboardWin_30
    344          						              	{
    345          						              		memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   0000062E   0x2212             MOVS     R2,#+18
   \   00000630   0x2100             MOVS     R1,#+0
   \   00000632   0xF108 0x0013      ADD      R0,R8,#+19
   \   00000636   0x.... 0x....      BL       memset
    346          						              		BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \   0000063A   0xF06F 0x4A7F      MVN      R10,#-16777216
   \   0000063E   0x4652             MOV      R2,R10
   \   00000640   0x2101             MOVS     R1,#+1
   \   00000642   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000646   0x.... 0x....      BL       BUTTON_SetTextColor
    347          				    						BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   0000064A   0x4652             MOV      R2,R10
   \   0000064C   0x2100             MOVS     R1,#+0
   \   0000064E   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   00000652   0x.... 0x....      BL       BUTTON_SetTextColor
    348          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   00000656   0xF108 0x0113      ADD      R1,R8,#+19
   \   0000065A   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   0000065E   0x.... 0x....      BL       BUTTON_SetText
    349          						              	}
    350          						                     if(key_value_calc.cnt <= NUMBER_OF_PASSWORD)
   \                     ??cbKeyboardWin_30: (+1)
   \   00000662   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   00000666   0x4601             MOV      R1,R0
   \   00000668   0x2911             CMP      R1,#+17
   \   0000066A   0xF6BF 0xAF29      BGE.W    ??cbKeyboardWin_19
    351          									{
    352          										key_value_calc.timer = TIMER_STOP;
   \   0000066E   0x2200             MOVS     R2,#+0
   \   00000670   0xF888 0x2025      STRB     R2,[R8, #+37]
    353          										key_value_calc.timer_count = 0;
   \   00000674   0xF8C8 0x2028      STR      R2,[R8, #+40]
    354          										if(key_value_calc.cnt > 0)
   \   00000678   0x2800             CMP      R0,#+0
   \   0000067A   0xD002             BEQ.N    ??cbKeyboardWin_31
    355          										{
    356          											key_value_calc.password_disp[key_value_calc.cnt - 1] = (uint8_t)TEXT_PIONT_BOLD;
   \   0000067C   0x2060             MOVS     R0,#+96
   \   0000067E   0x4441             ADD      R1,R1,R8
   \   00000680   0x7488             STRB     R0,[R1, #+18]
   \                     ??cbKeyboardWin_31: (+1)
   \   00000682   0xEB09 0x0006      ADD      R0,R9,R6
   \   00000686   0xF990 0x0030      LDRSB    R0,[R0, #+48]
   \   0000068A   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   0000068E   0x4441             ADD      R1,R1,R8
   \   00000690   0x7048             STRB     R0,[R1, #+1]
    357          										}
    358          										key_value_calc.password_value[key_value_calc.cnt] = (uint8_t)symbol_key_value[i];
    359          										key_value_calc.password_disp[key_value_calc.cnt] = (uint8_t)symbol_key_value[i];
   \   00000692   0xF898 0x1000      LDRB     R1,[R8, #+0]
   \   00000696   0x4441             ADD      R1,R1,R8
   \   00000698   0x74C8             STRB     R0,[R1, #+19]
    360          										BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   0000069A   0xF108 0x0113      ADD      R1,R8,#+19
   \   0000069E   0xF9B7 0x0000      LDRSH    R0,[R7, #+0]
   \   000006A2   0x.... 0x....      BL       BUTTON_SetText
    361          				                    				key_value_calc.cnt++;
   \   000006A6   0xF898 0x0000      LDRB     R0,[R8, #+0]
   \   000006AA   0x1C40             ADDS     R0,R0,#+1
   \   000006AC   0xF888 0x0000      STRB     R0,[R8, #+0]
    362          										key_value_calc.timer = TIMER_START;
   \   000006B0   0x2001             MOVS     R0,#+1
   \   000006B2   0xF888 0x0025      STRB     R0,[R8, #+37]
   \   000006B6   0xE703             B.N      ??cbKeyboardWin_19
    363          									}
    364          									break;
    365          								default:
    366          									break;
    367          							}
    368          						}
    369          	                           }
    370          				}   
    371                                      
    372                      }
    373          	     else if(pMsg->Data.v == WM_NOTIFICATION_CLICKED)
   \                     ??cbKeyboardWin_3: (+1)
   \   000006B8   0x2801             CMP      R0,#+1
   \   000006BA   0xD168             BNE.N    ??cbKeyboardWin_2
    374          	     {
    375          			if(pMsg->hWinSrc == buttonRet.btnHandle)
   \   000006BC   0xF9B4 0x1006      LDRSH    R1,[R4, #+6]
   \   000006C0   0x.... 0x....      LDR.W    R5,??DataTable16
   \   000006C4   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000006C8   0x4281             CMP      R1,R0
   \   000006CA   0xD060             BEQ.N    ??cbKeyboardWin_2
    376          			{
    377          				//BUTTON_SetFont(buttonRet.btnHandle,&GUI_FontHelvetica26_bold);
    378          			}
    379          			else if(pMsg->hWinSrc == buttonJoint.btnHandle)
   \   000006CC   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   000006D0   0x4281             CMP      R1,R0
   \   000006D2   0xD05C             BEQ.N    ??cbKeyboardWin_2
    380          			{
    381          				//BUTTON_SetFont(buttonJoint.btnHandle,&GUI_FontHelvetica26_bold);
    382          			}
    383          			  else if(pMsg->hWinSrc == buttondel2.btnHandle)
   \   000006D4   0x.... 0x....      LDR.W    R6,??DataTable17_1
   \   000006D8   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000006DC   0x4281             CMP      R1,R0
   \   000006DE   0xD10F             BNE.N    ??cbKeyboardWin_32
    384          	                {
    385          	                     BUTTON_SetBmpFileName(buttondel2.btnHandle, "bmp_backspace_black.bin",1);
   \   000006E0   0x2201             MOVS     R2,#+1
   \   000006E2   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_backspace_black.bin">`
   \   000006E6   0x.... 0x....      BL       BUTTON_SetBmpFileName
    386          	    			 BUTTON_SetBitmapEx(buttondel2.btnHandle, 0, &bmp_struct_32x21,18, 11);
   \   000006EA   0x200B             MOVS     R0,#+11
   \   000006EC   0x9000             STR      R0,[SP, #+0]
   \   000006EE   0x2312             MOVS     R3,#+18
   \   000006F0   0xF105 0x0284      ADD      R2,R5,#+132
   \   000006F4   0x2100             MOVS     R1,#+0
   \   000006F6   0xF9B6 0x0018      LDRSH    R0,[R6, #+24]
   \   000006FA   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   000006FE   0xE046             B.N      ??cbKeyboardWin_2
    387          	                }
    388          			  else if(pMsg->hWinSrc == buttonSpace.btnHandle)
   \                     ??cbKeyboardWin_32: (+1)
   \   00000700   0xF9B6 0x0000      LDRSH    R0,[R6, #+0]
   \   00000704   0x4281             CMP      R1,R0
   \   00000706   0xD042             BEQ.N    ??cbKeyboardWin_2
    389          	                {
    390          	                     //BUTTON_SetFont(buttonSpace.btnHandle,&GUI_FontHelvetica20_bold);
    391          	                }
    392          			  else if(pMsg->hWinSrc == buttonLetter.btnHandle)
   \   00000708   0x.... 0x....      LDR.W    R0,??DataTable18
   \   0000070C   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
   \   00000710   0x4281             CMP      R1,R0
   \   00000712   0xD03C             BEQ.N    ??cbKeyboardWin_2
    393          	               {
    394          	                     //BUTTON_SetFont(buttonLetter.btnHandle,&GUI_FontHelvetica26_bold);
    395          	               }
    396          			 else if(pMsg->hWinSrc == buttonDigital.btnHandle)
   \   00000714   0x.... 0x....      LDR.W    R0,??DataTable18_2
   \   00000718   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000071C   0x4291             CMP      R1,R2
   \   0000071E   0xD036             BEQ.N    ??cbKeyboardWin_2
    397          	               {
    398          	                     //BUTTON_SetFont(buttonDigital.btnHandle,&GUI_FontHelvetica26_bold);
    399          	               }
    400          			 else if(pMsg->hWinSrc == buttonSymbol.btnHandle)
   \   00000720   0xF9B0 0x0018      LDRSH    R0,[R0, #+24]
   \   00000724   0x4281             CMP      R1,R0
   \   00000726   0xD032             BEQ.N    ??cbKeyboardWin_2
    401          	               {
    402          	                     //BUTTON_SetFont(buttonSymbol.btnHandle,&GUI_FontHelvetica26_bold);
    403          	               }
    404          			 else if(pMsg->hWinSrc == buttonArrow.btnHandle)
   \   00000728   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   0000072C   0x4281             CMP      R1,R0
   \   0000072E   0xD125             BNE.N    ??cbKeyboardWin_33
    405          	               {
    406          	               	if(keyboard_stype == UPPER_CASE_LETTER)
   \   00000730   0xF995 0x1000      LDRSB    R1,[R5, #+0]
   \   00000734   0x2900             CMP      R1,#+0
   \   00000736   0xD10F             BNE.N    ??cbKeyboardWin_34
    407          	               	{
    408          	               		BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_Black.bin",1);
   \   00000738   0x2201             MOVS     R2,#+1
   \   0000073A   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Down_Arrow...">_1`
   \   0000073E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    409              					BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   00000742   0x200A             MOVS     R0,#+10
   \   00000744   0x9000             STR      R0,[SP, #+0]
   \   00000746   0x2321             MOVS     R3,#+33
   \   00000748   0xF105 0x0298      ADD      R2,R5,#+152
   \   0000074C   0x2100             MOVS     R1,#+0
   \   0000074E   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000752   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   00000756   0xE01A             B.N      ??cbKeyboardWin_2
    410          	               	}
    411          	                     else if(keyboard_stype == LOWER_CASE_LETTER)
   \                     ??cbKeyboardWin_34: (+1)
   \   00000758   0x2901             CMP      R1,#+1
   \   0000075A   0xD118             BNE.N    ??cbKeyboardWin_2
    412          	                     {
    413          	                     	BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Up_Arrow_Black.bin",1);
   \   0000075C   0x2201             MOVS     R2,#+1
   \   0000075E   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Up_Arrow_B...">`
   \   00000762   0x.... 0x....      BL       BUTTON_SetBmpFileName
    414              					BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   00000766   0x200A             MOVS     R0,#+10
   \   00000768   0x9000             STR      R0,[SP, #+0]
   \   0000076A   0x2321             MOVS     R3,#+33
   \   0000076C   0xF105 0x0298      ADD      R2,R5,#+152
   \   00000770   0x2100             MOVS     R1,#+0
   \   00000772   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000776   0x.... 0x....      BL       BUTTON_SetBitmapEx
   \   0000077A   0xE008             B.N      ??cbKeyboardWin_2
    415          	                     }
    416          	               }
    417          			  else
    418          			  {
    419          			  	i=26;
   \                     ??cbKeyboardWin_33: (+1)
   \   0000077C   0xF04F 0x091A      MOV      R9,#+26
    420          				while(i--)
   \                     ??cbKeyboardWin_35: (+1)
   \   00000780   0x4648             MOV      R0,R9
   \   00000782   0xF1A0 0x0901      SUB      R9,R0,#+1
   \   00000786   0xFA5F 0xF989      UXTB     R9,R9
   \   0000078A   0x2800             CMP      R0,#+0
   \   0000078C   0xD1F8             BNE.N    ??cbKeyboardWin_35
    421          				{
    422          					if(pMsg->hWinSrc == buttonWifiKey[i].btnHandle)
    423          					{
    424          						//BUTTON_SetFont(buttonWifiKey[i].btnHandle,&GUI_FontHelvetica26_bold);
    425          					}
    426          				}
    427          				i=0;
    428          			  }
    429          		  
    430          		}	            
    431                      break;
    432              }
    433          }
   \                     ??cbKeyboardWin_2: (+1)
   \   0000078E   0xB008             ADD      SP,SP,#+32
   \   00000790   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    434          

   \                                 In section .text, align 4, keep-with-next
    435          void draw_Keyboard()
    436          {
   \                     draw_Keyboard: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB08E             SUB      SP,SP,#+56
    437                 char buf[40];
    438          	char cutName[33];
                 	     ^
Warning[Pe177]: variable "cutName" was declared but never referenced

  static TEXT_Handle textKeyboardTitle;
                     ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35ิดย๋\robin_nano35_v1.0.4_source\User\ui\draw_keyboard.cpp",19  Warning[Pe177]: 
          variable "textKeyboardTitle" was declared but never referenced
    439          	uint8_t i=0;
    440              
    441           	if(disp_state_stack._disp_state[disp_state_stack._disp_index] != KEY_BOARD_UI)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable18_4
   \   0000000A   0xF990 0x1064      LDRSB    R1,[R0, #+100]
   \   0000000E   0x560A             LDRSB    R2,[R1, R0]
   \   00000010   0x2A23             CMP      R2,#+35
   \   00000012   0xD005             BEQ.N    ??draw_Keyboard_0
    442          	{
    443          		disp_state_stack._disp_index++;
   \   00000014   0x1C49             ADDS     R1,R1,#+1
   \   00000016   0xF880 0x1064      STRB     R1,[R0, #+100]
    444          		disp_state_stack._disp_state[disp_state_stack._disp_index] = KEY_BOARD_UI;
   \   0000001A   0x2223             MOVS     R2,#+35
   \   0000001C   0xB249             SXTB     R1,R1
   \   0000001E   0x540A             STRB     R2,[R1, R0]
    445          	}
    446          	disp_state = KEY_BOARD_UI;
   \                     ??draw_Keyboard_0: (+1)
   \   00000020   0x2023             MOVS     R0,#+35
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable18_5
   \   00000026   0x7008             STRB     R0,[R1, #+0]
    447          	
    448              GUI_SetBkColor(gCfgItems.background_color);
   \   00000028   0x.... 0x....      LDR.W    R4,??DataTable15
   \   0000002C   0x6860             LDR      R0,[R4, #+4]
   \   0000002E   0x.... 0x....      BL       GUI_SetBkColor
    449              GUI_SetColor(gCfgItems.title_color);
   \   00000032   0x68A0             LDR      R0,[R4, #+8]
   \   00000034   0x.... 0x....      BL       GUI_SetColor
    450              GUI_Clear();
   \   00000038   0x.... 0x....      BL       GUI_Clear
    451          
    452          	keyboard_menu.apply=MANUAL_IP_APPLY_EN;
   \   0000003C   0x.... 0x....      LDR.W    R5,??DataTable16
   \   00000040   0x.... 0x....      ADR.W    R0,`?<Constant "Join >">`
   \   00000044   0x6528             STR      R0,[R5, #+80]
    453          	keyboard_menu.password=TEXT_WIFI_PASSWORD_EN;
   \   00000046   0x.... 0x....      ADR.W    R0,`?<Constant "Password">`
   \   0000004A   0x6568             STR      R0,[R5, #+84]
    454          	keyboard_menu.space = TEXT_WIFI_SAPCE_EN;
   \   0000004C   0x.... 0x....      ADR.W    R0,`?<Constant "space">`
   \   00000050   0x6668             STR      R0,[R5, #+100]
    455          	   keyboard_menu.letter = TEXT_WIFI_LETTER_EN;
   \   00000052   0xA0F3             ADR.N    R0,??draw_Keyboard_1  ;; "abc"
   \   00000054   0x65A8             STR      R0,[R5, #+88]
    456          	   keyboard_menu.digital = TEXT_WIFI_DIGITAL_EN;
   \   00000056   0xA0F3             ADR.N    R0,??draw_Keyboard_1+0x4  ;; "123"
   \   00000058   0x65E8             STR      R0,[R5, #+92]
    457          	   keyboard_menu.symbol = TEXT_WIFI_SYMBOL_EN;
   \   0000005A   0xA0F3             ADR.N    R0,??draw_Keyboard_1+0x8  ;; "#+="
   \   0000005C   0x6628             STR      R0,[R5, #+96]
    458          	   //keyboard_menu.pointBold = TEXT_WIFI_POINT_BOLD_EN;
    459          
    460          	   //keyboard_menu.joining = TEXT_WIFI_JOINING_EN;
    461          	   //keyboard_menu.failedJoin = TEXT_WIFI_FAILED_JOIN_EN;
    462          	   //keyboard_menu.wifiConected = TEXT_WIFI_WIFI_CONECTED_EN; 
    463              
    464              hKeyboardWnd = WM_CreateWindow(0, 0, LCD_WIDTH, LCD_HEIGHT, WM_CF_SHOW, cbKeyboardWin, 0);
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x9002             STR      R0,[SP, #+8]
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable18_6
   \   00000066   0x9001             STR      R0,[SP, #+4]
   \   00000068   0x2002             MOVS     R0,#+2
   \   0000006A   0x9000             STR      R0,[SP, #+0]
   \   0000006C   0xF44F 0x73A0      MOV      R3,#+320
   \   00000070   0xF44F 0x72F0      MOV      R2,#+480
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x4608             MOV      R0,R1
   \   00000078   0x.... 0x....      BL       WM_CreateWindow
   \   0000007C   0x8068             STRH     R0,[R5, #+2]
    465              //textKeyboardTitle = TEXT_CreateEx(0,0,LCD_WIDTH,titleHeight, hKeyboardWnd, WM_CF_SHOW, TEXT_CF_HCENTER|TEXT_CF_VCENTER,   GUI_ID_TEXT1, "");
    466              //TEXT_SetFont(textKeyboardTitle,&GUI_FontHelvetica36);
    467              //TEXT_SetTextColor(textKeyboardTitle,BUTTON_PRESS_BK_COLOR);
    468              //memset(buf,0,sizeof(buf));
    469              //memset(cutName,0,sizeof(cutName));
    470              //strcat(buf,wifi_menu.title);
    471              //strcat(buf," ");
    472             // cutWifiName((char * )wifi_list.wifiName[wifi_list.nameIndex], 12, cutName);
    473              //strcat(buf,(const char *)cutName);
    474              //TEXT_SetText(textKeyboardTitle,buf);
    475              
    476              
    477              buttonRet.btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*6,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*4,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000007E   0x.... 0x....      BL       alloc_win_id
   \   00000082   0x9003             STR      R0,[SP, #+12]
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x9002             STR      R0,[SP, #+8]
   \   00000088   0x2002             MOVS     R0,#+2
   \   0000008A   0x9001             STR      R0,[SP, #+4]
   \   0000008C   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000090   0x9000             STR      R0,[SP, #+0]
   \   00000092   0x232A             MOVS     R3,#+42
   \   00000094   0x2243             MOVS     R2,#+67
   \   00000096   0x21E9             MOVS     R1,#+233
   \   00000098   0xF44F 0x70CC      MOV      R0,#+408
   \   0000009C   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000A0   0x80A8             STRH     R0,[R5, #+4]
    478          
    479              buttonJoint.btnHandle = BUTTON_CreateEx(LCD_WIDTH-80-10,10,80,40, hKeyboardWnd, BUTTON_CF_SHOW, 0, 310);
   \   000000A2   0xF44F 0x709B      MOV      R0,#+310
   \   000000A6   0x9003             STR      R0,[SP, #+12]
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x9002             STR      R0,[SP, #+8]
   \   000000AC   0x2002             MOVS     R0,#+2
   \   000000AE   0x9001             STR      R0,[SP, #+4]
   \   000000B0   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   000000B4   0x9000             STR      R0,[SP, #+0]
   \   000000B6   0x2328             MOVS     R3,#+40
   \   000000B8   0x2250             MOVS     R2,#+80
   \   000000BA   0x210A             MOVS     R1,#+10
   \   000000BC   0xF44F 0x70C3      MOV      R0,#+390
   \   000000C0   0x.... 0x....      BL       BUTTON_CreateEx
   \   000000C4   0x83A8             STRH     R0,[R5, #+28]
    480          
    481              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   000000C6   0x6BE2             LDR      R2,[R4, #+60]
   \   000000C8   0x2101             MOVS     R1,#+1
   \   000000CA   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000CE   0x.... 0x....      BL       BUTTON_SetBkColor
    482              BUTTON_SetBkColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   000000D2   0x6BE2             LDR      R2,[R4, #+60]
   \   000000D4   0x2100             MOVS     R1,#+0
   \   000000D6   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000DA   0x.... 0x....      BL       BUTTON_SetBkColor
    483              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   000000DE   0xF24E 0x06E1      MOVW     R6,#+57569
   \   000000E2   0x4632             MOV      R2,R6
   \   000000E4   0x2101             MOVS     R1,#+1
   \   000000E6   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000EA   0x.... 0x....      BL       BUTTON_SetTextColor
    484              BUTTON_SetTextColor(buttonRet.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_textcolor);
   \   000000EE   0x6C22             LDR      R2,[R4, #+64]
   \   000000F0   0x2100             MOVS     R1,#+0
   \   000000F2   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   000000F6   0x.... 0x....      BL       BUTTON_SetTextColor
    485              BUTTON_SetBmpFileName(buttonRet.btnHandle,"bmp_keyboard_return.bin",1);
   \   000000FA   0x2201             MOVS     R2,#+1
   \   000000FC   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_keyboard_return.bin">`
   \   00000100   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   00000104   0x.... 0x....      BL       BUTTON_SetBmpFileName
    486              BUTTON_SetBitmapEx(buttonRet.btnHandle, 0, &bmp_struct_32x21,(KEY_WIDTH-32)/2, (KEY_HEIGHT-21)/2);
   \   00000108   0xF105 0x0884      ADD      R8,R5,#+132
   \   0000010C   0x200A             MOVS     R0,#+10
   \   0000010E   0x9000             STR      R0,[SP, #+0]
   \   00000110   0x2311             MOVS     R3,#+17
   \   00000112   0x4642             MOV      R2,R8
   \   00000114   0x2100             MOVS     R1,#+0
   \   00000116   0xF9B5 0x0004      LDRSH    R0,[R5, #+4]
   \   0000011A   0x.... 0x....      BL       BUTTON_SetBitmapEx
    487              
    488              BUTTON_SetBkColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   0000011E   0x6BE2             LDR      R2,[R4, #+60]
   \   00000120   0x2101             MOVS     R1,#+1
   \   00000122   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000126   0x.... 0x....      BL       BUTTON_SetBkColor
    489              BUTTON_SetBkColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   0000012A   0x6BE2             LDR      R2,[R4, #+60]
   \   0000012C   0x2100             MOVS     R1,#+0
   \   0000012E   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000132   0x.... 0x....      BL       BUTTON_SetBkColor
    490          	
    491          							
    492              //if(enter_state.join_state == JOIN_STATE_OK)
    493              //{  
    494                	//BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
    495              	//BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
    496              //}
    497              //else
    498              //{
    499              	BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
   \   00000136   0x.... 0x....      LDR.W    R7,??DataTable18_1  ;; 0x3f3f3f
   \   0000013A   0x463A             MOV      R2,R7
   \   0000013C   0x2101             MOVS     R1,#+1
   \   0000013E   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000142   0x.... 0x....      BL       BUTTON_SetTextColor
    500              	BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
   \   00000146   0x463A             MOV      R2,R7
   \   00000148   0x2100             MOVS     R1,#+0
   \   0000014A   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   0000014E   0x.... 0x....      BL       BUTTON_SetTextColor
    501              //}
    502              BUTTON_SetTextAlign(buttonJoint.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   00000152   0x210E             MOVS     R1,#+14
   \   00000154   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000158   0x.... 0x....      BL       BUTTON_SetTextAlign
    503          
    504              //BUTTON_SetFont(buttonRet.btnHandle,&GUI_FontHelvetica24);
    505              //BUTTON_SetText(buttonRet.btnHandle, build_cancel_menu.back);
    506              
    507              BUTTON_SetFont(buttonJoint.btnHandle,&GUI_FontHelvetica36);
   \   0000015C   0x.... 0x....      LDR.W    R10,??DataTable18_7
   \   00000160   0x4651             MOV      R1,R10
   \   00000162   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000166   0x.... 0x....      BL       BUTTON_SetFont
    508              BUTTON_SetText(buttonJoint.btnHandle, keyboard_menu.apply);
   \   0000016A   0x6D29             LDR      R1,[R5, #+80]
   \   0000016C   0xF9B5 0x001C      LDRSH    R0,[R5, #+28]
   \   00000170   0x.... 0x....      BL       BUTTON_SetText
    509          
    510              buttonPassword.btnHandle = BUTTON_CreateEx(10,10,LCD_WIDTH-100,40, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000174   0x.... 0x....      BL       alloc_win_id
   \   00000178   0x9003             STR      R0,[SP, #+12]
   \   0000017A   0x2000             MOVS     R0,#+0
   \   0000017C   0x9002             STR      R0,[SP, #+8]
   \   0000017E   0x2002             MOVS     R0,#+2
   \   00000180   0x9001             STR      R0,[SP, #+4]
   \   00000182   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000186   0x9000             STR      R0,[SP, #+0]
   \   00000188   0x2328             MOVS     R3,#+40
   \   0000018A   0xF44F 0x72BE      MOV      R2,#+380
   \   0000018E   0x210A             MOVS     R1,#+10
   \   00000190   0x4608             MOV      R0,R1
   \   00000192   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000196   0x.... 0x....      LDR.W    R9,??DataTable18
   \   0000019A   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    511              BUTTON_SetBkColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, gCfgItems.back_btn_color);
   \   0000019E   0x6BE2             LDR      R2,[R4, #+60]
   \   000001A0   0x2101             MOVS     R1,#+1
   \   000001A2   0x.... 0x....      BL       BUTTON_SetBkColor
    512              BUTTON_SetBkColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   000001A6   0x6BE2             LDR      R2,[R4, #+60]
   \   000001A8   0x2100             MOVS     R1,#+0
   \   000001AA   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001AE   0x.... 0x....      BL       BUTTON_SetBkColor
    513              BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
   \   000001B2   0x463A             MOV      R2,R7
   \   000001B4   0x2101             MOVS     R1,#+1
   \   000001B6   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001BA   0x.... 0x....      BL       BUTTON_SetTextColor
    514              BUTTON_SetTextColor(buttonPassword.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
   \   000001BE   0x463A             MOV      R2,R7
   \   000001C0   0x2100             MOVS     R1,#+0
   \   000001C2   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001C6   0x.... 0x....      BL       BUTTON_SetTextColor
    515              BUTTON_SetTextAlign(buttonPassword.btnHandle,GUI_TA_LEFT|GUI_TA_VCENTER);
   \   000001CA   0x210C             MOVS     R1,#+12
   \   000001CC   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001D0   0x.... 0x....      BL       BUTTON_SetTextAlign
    516              BUTTON_SetFont(buttonPassword.btnHandle,&GUI_FontHelvetica36);
   \   000001D4   0x4651             MOV      R1,R10
   \   000001D6   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001DA   0x.... 0x....      BL       BUTTON_SetFont
    517              BUTTON_SetText(buttonPassword.btnHandle, keyboard_menu.password);
   \   000001DE   0x6D69             LDR      R1,[R5, #+84]
   \   000001E0   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001E4   0x.... 0x....      BL       BUTTON_SetText
    518              BUTTON_SetBmpFileName(buttonPassword.btnHandle,NULL,1);
   \   000001E8   0x2201             MOVS     R2,#+1
   \   000001EA   0x2100             MOVS     R1,#+0
   \   000001EC   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   000001F0   0x.... 0x....      BL       BUTTON_SetBmpFileName
    519              
    520          
    521              buttonLetter.btnHandle = BUTTON_CreateEx(FIRST_LINE_WIDTH+1,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000001F4   0x.... 0x....      BL       alloc_win_id
   \   000001F8   0x9003             STR      R0,[SP, #+12]
   \   000001FA   0x2000             MOVS     R0,#+0
   \   000001FC   0x9002             STR      R0,[SP, #+8]
   \   000001FE   0x2002             MOVS     R0,#+2
   \   00000200   0x9001             STR      R0,[SP, #+4]
   \   00000202   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000206   0x9000             STR      R0,[SP, #+0]
   \   00000208   0x232A             MOVS     R3,#+42
   \   0000020A   0x225F             MOVS     R2,#+95
   \   0000020C   0x213D             MOVS     R1,#+61
   \   0000020E   0x2060             MOVS     R0,#+96
   \   00000210   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000214   0xF8A9 0x0018      STRH     R0,[R9, #+24]
    522              buttonDigital.btnHandle = BUTTON_CreateEx((FIRST_LINE_WIDTH+1)*2,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000218   0x.... 0x....      BL       alloc_win_id
   \   0000021C   0x.... 0x....      LDR.W    R10,??DataTable18_2
   \   00000220   0x9003             STR      R0,[SP, #+12]
   \   00000222   0x2000             MOVS     R0,#+0
   \   00000224   0x9002             STR      R0,[SP, #+8]
   \   00000226   0x2002             MOVS     R0,#+2
   \   00000228   0x9001             STR      R0,[SP, #+4]
   \   0000022A   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   0000022E   0x9000             STR      R0,[SP, #+0]
   \   00000230   0x232A             MOVS     R3,#+42
   \   00000232   0x225F             MOVS     R2,#+95
   \   00000234   0x213D             MOVS     R1,#+61
   \   00000236   0x20C0             MOVS     R0,#+192
   \   00000238   0x.... 0x....      BL       BUTTON_CreateEx
   \   0000023C   0xF8AA 0x0000      STRH     R0,[R10, #+0]
    523              buttonSymbol.btnHandle = BUTTON_CreateEx((FIRST_LINE_WIDTH+1)*3,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000240   0x.... 0x....      BL       alloc_win_id
   \   00000244   0x9003             STR      R0,[SP, #+12]
   \   00000246   0x2000             MOVS     R0,#+0
   \   00000248   0x9002             STR      R0,[SP, #+8]
   \   0000024A   0x2002             MOVS     R0,#+2
   \   0000024C   0x9001             STR      R0,[SP, #+4]
   \   0000024E   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000252   0x9000             STR      R0,[SP, #+0]
   \   00000254   0x232A             MOVS     R3,#+42
   \   00000256   0x225F             MOVS     R2,#+95
   \   00000258   0x213D             MOVS     R1,#+61
   \   0000025A   0xF44F 0x7090      MOV      R0,#+288
   \   0000025E   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000262   0xF8AA 0x0018      STRH     R0,[R10, #+24]
    524              buttonArrow.btnHandle = BUTTON_CreateEx(0,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000266   0x.... 0x....      BL       alloc_win_id
   \   0000026A   0x9003             STR      R0,[SP, #+12]
   \   0000026C   0x2000             MOVS     R0,#+0
   \   0000026E   0x9002             STR      R0,[SP, #+8]
   \   00000270   0x2002             MOVS     R0,#+2
   \   00000272   0x9001             STR      R0,[SP, #+4]
   \   00000274   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000278   0x9000             STR      R0,[SP, #+0]
   \   0000027A   0x232A             MOVS     R3,#+42
   \   0000027C   0x225F             MOVS     R2,#+95
   \   0000027E   0x213D             MOVS     R1,#+61
   \   00000280   0x2000             MOVS     R0,#+0
   \   00000282   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000286   0x86A8             STRH     R0,[R5, #+52]
    525              
    526              BUTTON_SetBkColor(buttonLetter.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   00000288   0x4632             MOV      R2,R6
   \   0000028A   0x2101             MOVS     R1,#+1
   \   0000028C   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   00000290   0x.... 0x....      BL       BUTTON_SetBkColor
    527              BUTTON_SetBkColor(buttonLetter.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   00000294   0x6BE2             LDR      R2,[R4, #+60]
   \   00000296   0x2100             MOVS     R1,#+0
   \   00000298   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   0000029C   0x.... 0x....      BL       BUTTON_SetBkColor
    528              BUTTON_SetTextColor(buttonLetter.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   000002A0   0x2200             MOVS     R2,#+0
   \   000002A2   0x2101             MOVS     R1,#+1
   \   000002A4   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000002A8   0x.... 0x....      BL       BUTTON_SetTextColor
    529              BUTTON_SetTextColor(buttonLetter.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   000002AC   0x6AA2             LDR      R2,[R4, #+40]
   \   000002AE   0x2100             MOVS     R1,#+0
   \   000002B0   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000002B4   0x.... 0x....      BL       BUTTON_SetTextColor
    530              BUTTON_SetTextAlign(buttonLetter.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   000002B8   0x210E             MOVS     R1,#+14
   \   000002BA   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000002BE   0x.... 0x....      BL       BUTTON_SetTextAlign
    531              BUTTON_SetBmpFileName(buttonLetter.btnHandle,NULL,1);
   \   000002C2   0x2201             MOVS     R2,#+1
   \   000002C4   0x2100             MOVS     R1,#+0
   \   000002C6   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000002CA   0x.... 0x....      BL       BUTTON_SetBmpFileName
    532              
    533              BUTTON_SetBkColor(buttonDigital.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   000002CE   0x4632             MOV      R2,R6
   \   000002D0   0x2101             MOVS     R1,#+1
   \   000002D2   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000002D6   0x.... 0x....      BL       BUTTON_SetBkColor
    534              BUTTON_SetBkColor(buttonDigital.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   000002DA   0x6BE2             LDR      R2,[R4, #+60]
   \   000002DC   0x2100             MOVS     R1,#+0
   \   000002DE   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000002E2   0x.... 0x....      BL       BUTTON_SetBkColor
    535              BUTTON_SetTextColor(buttonDigital.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   000002E6   0x2200             MOVS     R2,#+0
   \   000002E8   0x2101             MOVS     R1,#+1
   \   000002EA   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000002EE   0x.... 0x....      BL       BUTTON_SetTextColor
    536              BUTTON_SetTextColor(buttonDigital.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   000002F2   0x6AA2             LDR      R2,[R4, #+40]
   \   000002F4   0x2100             MOVS     R1,#+0
   \   000002F6   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000002FA   0x.... 0x....      BL       BUTTON_SetTextColor
    537              BUTTON_SetTextAlign(buttonDigital.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   000002FE   0x210E             MOVS     R1,#+14
   \   00000300   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   00000304   0x.... 0x....      BL       BUTTON_SetTextAlign
    538              BUTTON_SetBmpFileName(buttonDigital.btnHandle,NULL,1);
   \   00000308   0x2201             MOVS     R2,#+1
   \   0000030A   0x2100             MOVS     R1,#+0
   \   0000030C   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   00000310   0x.... 0x....      BL       BUTTON_SetBmpFileName
    539              
    540              BUTTON_SetBkColor(buttonSymbol.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   00000314   0x4632             MOV      R2,R6
   \   00000316   0x2101             MOVS     R1,#+1
   \   00000318   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   0000031C   0x.... 0x....      BL       BUTTON_SetBkColor
    541              BUTTON_SetBkColor(buttonSymbol.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   00000320   0x6BE2             LDR      R2,[R4, #+60]
   \   00000322   0x2100             MOVS     R1,#+0
   \   00000324   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   00000328   0x.... 0x....      BL       BUTTON_SetBkColor
    542              BUTTON_SetTextColor(buttonSymbol.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   0000032C   0x2200             MOVS     R2,#+0
   \   0000032E   0x2101             MOVS     R1,#+1
   \   00000330   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   00000334   0x.... 0x....      BL       BUTTON_SetTextColor
    543              BUTTON_SetTextColor(buttonSymbol.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   00000338   0x6AA2             LDR      R2,[R4, #+40]
   \   0000033A   0x2100             MOVS     R1,#+0
   \   0000033C   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   00000340   0x.... 0x....      BL       BUTTON_SetTextColor
    544              BUTTON_SetTextAlign(buttonSymbol.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   00000344   0x210E             MOVS     R1,#+14
   \   00000346   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   0000034A   0x.... 0x....      BL       BUTTON_SetTextAlign
    545              BUTTON_SetBmpFileName(buttonSymbol.btnHandle,NULL,1);
   \   0000034E   0x2201             MOVS     R2,#+1
   \   00000350   0x2100             MOVS     R1,#+0
   \   00000352   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   00000356   0x.... 0x....      BL       BUTTON_SetBmpFileName
    546              
    547              BUTTON_SetBkColor(buttonArrow.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   0000035A   0x4632             MOV      R2,R6
   \   0000035C   0x2101             MOVS     R1,#+1
   \   0000035E   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000362   0x.... 0x....      BL       BUTTON_SetBkColor
    548              BUTTON_SetBkColor(buttonArrow.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.back_btn_color);
   \   00000366   0x6BE2             LDR      R2,[R4, #+60]
   \   00000368   0x2100             MOVS     R1,#+0
   \   0000036A   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   0000036E   0x.... 0x....      BL       BUTTON_SetBkColor
    549              BUTTON_SetTextColor(buttonArrow.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   00000372   0x2200             MOVS     R2,#+0
   \   00000374   0x2101             MOVS     R1,#+1
   \   00000376   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   0000037A   0x.... 0x....      BL       BUTTON_SetTextColor
    550              BUTTON_SetTextColor(buttonArrow.btnHandle, BUTTON_CI_UNPRESSED,gCfgItems.btn_textcolor);
   \   0000037E   0x6AA2             LDR      R2,[R4, #+40]
   \   00000380   0x2100             MOVS     R1,#+0
   \   00000382   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000386   0x.... 0x....      BL       BUTTON_SetTextColor
    551              BUTTON_SetTextAlign(buttonArrow.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   0000038A   0x210E             MOVS     R1,#+14
   \   0000038C   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   00000390   0x.... 0x....      BL       BUTTON_SetTextAlign
    552              BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_White.bin",1);
   \   00000394   0x2201             MOVS     R2,#+1
   \   00000396   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Down_Arrow...">`
   \   0000039A   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   0000039E   0x.... 0x....      BL       BUTTON_SetBmpFileName
    553              BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   000003A2   0x200A             MOVS     R0,#+10
   \   000003A4   0x9000             STR      R0,[SP, #+0]
   \   000003A6   0x2321             MOVS     R3,#+33
   \   000003A8   0xF105 0x0298      ADD      R2,R5,#+152
   \   000003AC   0x2100             MOVS     R1,#+0
   \   000003AE   0xF9B5 0x0034      LDRSH    R0,[R5, #+52]
   \   000003B2   0x.... 0x....      BL       BUTTON_SetBitmapEx
    554          
    555              
    556              BUTTON_SetFont(buttonLetter.btnHandle,&GUI_FontHelvetica26);
   \   000003B6   0x.... 0x....      LDR.W    R7,??DataTable18_8
   \   000003BA   0x4639             MOV      R1,R7
   \   000003BC   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000003C0   0x.... 0x....      BL       BUTTON_SetFont
    557              BUTTON_SetText(buttonLetter.btnHandle, keyboard_menu.letter);
   \   000003C4   0x6DA9             LDR      R1,[R5, #+88]
   \   000003C6   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000003CA   0x.... 0x....      BL       BUTTON_SetText
    558              BUTTON_SetFont(buttonDigital.btnHandle,&GUI_FontHelvetica26);
   \   000003CE   0x4639             MOV      R1,R7
   \   000003D0   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000003D4   0x.... 0x....      BL       BUTTON_SetFont
    559              BUTTON_SetText(buttonDigital.btnHandle, keyboard_menu.digital);
   \   000003D8   0x6DE9             LDR      R1,[R5, #+92]
   \   000003DA   0xF9BA 0x0000      LDRSH    R0,[R10, #+0]
   \   000003DE   0x.... 0x....      BL       BUTTON_SetText
    560              BUTTON_SetFont(buttonSymbol.btnHandle,&GUI_FontHelvetica26);
   \   000003E2   0x4639             MOV      R1,R7
   \   000003E4   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   000003E8   0x.... 0x....      BL       BUTTON_SetFont
    561              BUTTON_SetText(buttonSymbol.btnHandle, keyboard_menu.symbol);
   \   000003EC   0x6E29             LDR      R1,[R5, #+96]
   \   000003EE   0xF9BA 0x0018      LDRSH    R0,[R10, #+24]
   \   000003F2   0x.... 0x....      BL       BUTTON_SetText
    562          
    563              buttonSpace.btnHandle = BUTTON_CreateEx(123+1,VALUE_DISP_HEIGHT+1+KEY_HEIGHT*5+1*5,234,KEY_HEIGHT+2, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   000003F6   0x.... 0x....      BL       alloc_win_id
   \   000003FA   0x9003             STR      R0,[SP, #+12]
   \   000003FC   0x2000             MOVS     R0,#+0
   \   000003FE   0x9002             STR      R0,[SP, #+8]
   \   00000400   0x2002             MOVS     R0,#+2
   \   00000402   0x9001             STR      R0,[SP, #+4]
   \   00000404   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000408   0x9000             STR      R0,[SP, #+0]
   \   0000040A   0x232C             MOVS     R3,#+44
   \   0000040C   0x22EA             MOVS     R2,#+234
   \   0000040E   0xF44F 0x718A      MOV      R1,#+276
   \   00000412   0x207C             MOVS     R0,#+124
   \   00000414   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000418   0x.... 0x....      LDR.W    R9,??DataTable17_1
   \   0000041C   0xE006             B.N      ??draw_Keyboard_2
   \   0000041E   0xBF00             Nop      
   \                     ??draw_Keyboard_1:
   \   00000420   0x61 0x62          DC8      "abc"
   \              0x63 0x00    
   \   00000424   0x31 0x32          DC8      "123"
   \              0x33 0x00    
   \   00000428   0x23 0x2B          DC8      "#+="
   \              0x3D 0x00    
   \                     ??draw_Keyboard_2: (+1)
   \   0000042C   0xF8A9 0x0000      STRH     R0,[R9, #+0]
    564          	
    565              BUTTON_SetBkColor(buttonSpace.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   00000430   0x4632             MOV      R2,R6
   \   00000432   0x2101             MOVS     R1,#+1
   \   00000434   0x.... 0x....      BL       BUTTON_SetBkColor
    566              BUTTON_SetBkColor(buttonSpace.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   00000438   0x6A62             LDR      R2,[R4, #+36]
   \   0000043A   0x2100             MOVS     R1,#+0
   \   0000043C   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000440   0x.... 0x....      BL       BUTTON_SetBkColor
    567              BUTTON_SetTextColor(buttonSpace.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   00000444   0x2200             MOVS     R2,#+0
   \   00000446   0x2101             MOVS     R1,#+1
   \   00000448   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000044C   0x.... 0x....      BL       BUTTON_SetTextColor
    568              BUTTON_SetTextColor(buttonSpace.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000450   0x6AA2             LDR      R2,[R4, #+40]
   \   00000452   0x2100             MOVS     R1,#+0
   \   00000454   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000458   0x.... 0x....      BL       BUTTON_SetTextColor
    569              BUTTON_SetTextAlign(buttonSpace.btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   0000045C   0x210E             MOVS     R1,#+14
   \   0000045E   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000462   0x.... 0x....      BL       BUTTON_SetTextAlign
    570              BUTTON_SetFont(buttonSpace.btnHandle,&GUI_FontHelvetica26);
   \   00000466   0x4639             MOV      R1,R7
   \   00000468   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   0000046C   0x.... 0x....      BL       BUTTON_SetFont
    571              BUTTON_SetBmpFileName(buttonSpace.btnHandle,NULL,1);
   \   00000470   0x2201             MOVS     R2,#+1
   \   00000472   0x2100             MOVS     R1,#+0
   \   00000474   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000478   0x.... 0x....      BL       BUTTON_SetBmpFileName
    572              BUTTON_SetText(buttonSpace.btnHandle,keyboard_menu.space);
   \   0000047C   0x6E69             LDR      R1,[R5, #+100]
   \   0000047E   0xF9B9 0x0000      LDRSH    R0,[R9, #+0]
   \   00000482   0x.... 0x....      BL       BUTTON_SetText
    573          
    574              buttondel2.btnHandle = BUTTON_CreateEx((FIRST_LINE_WIDTH+1)*4,VALUE_DISP_HEIGHT+1,FIRST_LINE_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   00000486   0x.... 0x....      BL       alloc_win_id
   \   0000048A   0x9003             STR      R0,[SP, #+12]
   \   0000048C   0x2000             MOVS     R0,#+0
   \   0000048E   0x9002             STR      R0,[SP, #+8]
   \   00000490   0x2002             MOVS     R0,#+2
   \   00000492   0x9001             STR      R0,[SP, #+4]
   \   00000494   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000498   0x9000             STR      R0,[SP, #+0]
   \   0000049A   0x232A             MOVS     R3,#+42
   \   0000049C   0x225F             MOVS     R2,#+95
   \   0000049E   0x213D             MOVS     R1,#+61
   \   000004A0   0xF44F 0x70C0      MOV      R0,#+384
   \   000004A4   0x.... 0x....      BL       BUTTON_CreateEx
   \   000004A8   0xF8A9 0x0018      STRH     R0,[R9, #+24]
    575              BUTTON_SetBmpFileName(buttondel2.btnHandle, "bmp_backspace_white.bin",1);
   \   000004AC   0x2201             MOVS     R2,#+1
   \   000004AE   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_backspace_white.bin">`
   \   000004B2   0x.... 0x....      BL       BUTTON_SetBmpFileName
    576              BUTTON_SetBitmapEx(buttondel2.btnHandle, 0, &bmp_struct_32x21,(FIRST_LINE_WIDTH-32)/2, (KEY_HEIGHT-21)/2);
   \   000004B6   0x200A             MOVS     R0,#+10
   \   000004B8   0x9000             STR      R0,[SP, #+0]
   \   000004BA   0x231F             MOVS     R3,#+31
   \   000004BC   0x4642             MOV      R2,R8
   \   000004BE   0x2100             MOVS     R1,#+0
   \   000004C0   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000004C4   0x.... 0x....      BL       BUTTON_SetBitmapEx
    577              BUTTON_SetBkColor(buttondel2.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   000004C8   0x4632             MOV      R2,R6
   \   000004CA   0x2101             MOVS     R1,#+1
   \   000004CC   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000004D0   0x.... 0x....      BL       BUTTON_SetBkColor
    578              BUTTON_SetBkColor(buttondel2.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   000004D4   0x6A62             LDR      R2,[R4, #+36]
   \   000004D6   0x2100             MOVS     R1,#+0
   \   000004D8   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000004DC   0x.... 0x....      BL       BUTTON_SetBkColor
    579              BUTTON_SetTextColor(buttondel2.btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   000004E0   0x2200             MOVS     R2,#+0
   \   000004E2   0x2101             MOVS     R1,#+1
   \   000004E4   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000004E8   0x.... 0x....      BL       BUTTON_SetTextColor
    580              BUTTON_SetTextColor(buttondel2.btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   000004EC   0x6AA2             LDR      R2,[R4, #+40]
   \   000004EE   0x2100             MOVS     R1,#+0
   \   000004F0   0xF9B9 0x0018      LDRSH    R0,[R9, #+24]
   \   000004F4   0x.... 0x....      BL       BUTTON_SetTextColor
    581          	
    582          
    583          	i=26;
   \   000004F8   0xF04F 0x081A      MOV      R8,#+26
   \   000004FC   0x.... 0x....      LDR.W    R10,??DataTable18_3
   \   00000500   0xE057             B.N      ??draw_Keyboard_3
    584          	while(i--)
    585          	{
    586          		if(i < 7)
    587          		{
    588          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*i,VALUE_DISP_HEIGHT+1+KEY_HEIGHT+1,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    589          		}
    590          		else if(i >= 7 && i < 14)
    591          		{
    592          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*(i - 7),VALUE_DISP_HEIGHT+1+KEY_HEIGHT*2+1*2,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    593          		}
    594          		else if(i >= 14 && i < 21)
    595          		{
    596          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*(i - 14),VALUE_DISP_HEIGHT+1+KEY_HEIGHT*3+1*3,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
    597          		}
    598          		else if(i >= 21 && i < 26)
   \                     ??draw_Keyboard_4: (+1)
   \   00000502   0xF1A8 0x0015      SUB      R0,R8,#+21
   \   00000506   0x2805             CMP      R0,#+5
   \   00000508   0xD219             BCS.N    ??draw_Keyboard_5
    599          		{
    600          			buttonWifiKey[i].btnHandle = BUTTON_CreateEx((KEY_WIDTH+1)*(i - 20),VALUE_DISP_HEIGHT+1+KEY_HEIGHT*4+1*4,KEY_WIDTH,KEY_HEIGHT, hKeyboardWnd, BUTTON_CF_SHOW, 0, alloc_win_id());
   \   0000050A   0x.... 0x....      BL       alloc_win_id
   \   0000050E   0x9003             STR      R0,[SP, #+12]
   \   00000510   0x2000             MOVS     R0,#+0
   \   00000512   0x9002             STR      R0,[SP, #+8]
   \   00000514   0x2002             MOVS     R0,#+2
   \   00000516   0x9001             STR      R0,[SP, #+4]
   \   00000518   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   0000051C   0x9000             STR      R0,[SP, #+0]
   \   0000051E   0x232A             MOVS     R3,#+42
   \   00000520   0x2243             MOVS     R2,#+67
   \   00000522   0x21E9             MOVS     R1,#+233
   \   00000524   0xF1A8 0x0014      SUB      R0,R8,#+20
   \   00000528   0xEB00 0x1C00      ADD      R12,R0,R0, LSL #+4
   \   0000052C   0xEA4F 0x008C      LSL      R0,R12,#+2
   \   00000530   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000534   0xEB08 0x0148      ADD      R1,R8,R8, LSL #+1
   \   00000538   0x00C9             LSLS     R1,R1,#+3
   \   0000053A   0x4652             MOV      R2,R10
   \   0000053C   0x5288             STRH     R0,[R1, R2]
    601          		}
    602          
    603          		memset(buf,0,sizeof(buf));
   \                     ??draw_Keyboard_5: (+1)
   \   0000053E   0x2228             MOVS     R2,#+40
   \   00000540   0x2100             MOVS     R1,#+0
   \   00000542   0xA804             ADD      R0,SP,#+16
   \   00000544   0x.... 0x....      BL       memset
    604          		//sprintf(buf,"%d",0x41 + i);
    605          		buf[0] = 0x41 + i;
   \   00000548   0xF108 0x0041      ADD      R0,R8,#+65
   \   0000054C   0xF88D 0x0010      STRB     R0,[SP, #+16]
   \   00000550   0xEB08 0x0048      ADD      R0,R8,R8, LSL #+1
   \   00000554   0xEA4F 0x09C0      LSL      R9,R0,#+3
   \   00000558   0xA904             ADD      R1,SP,#+16
   \   0000055A   0xF939 0x000A      LDRSH    R0,[R9, R10]
    606          		BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
   \   0000055E   0x.... 0x....      BL       BUTTON_SetText
    607          
    608          		BUTTON_SetBkColor(buttonWifiKey[i].btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_BK_COLOR);
   \   00000562   0x4632             MOV      R2,R6
   \   00000564   0x2101             MOVS     R1,#+1
   \   00000566   0xF939 0x000A      LDRSH    R0,[R9, R10]
   \   0000056A   0x.... 0x....      BL       BUTTON_SetBkColor
    609          	    	BUTTON_SetBkColor(buttonWifiKey[i].btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_color);
   \   0000056E   0x6A62             LDR      R2,[R4, #+36]
   \   00000570   0x2100             MOVS     R1,#+0
   \   00000572   0xF939 0x000A      LDRSH    R0,[R9, R10]
   \   00000576   0x.... 0x....      BL       BUTTON_SetBkColor
    610          	    	BUTTON_SetTextColor(buttonWifiKey[i].btnHandle, BUTTON_CI_PRESSED, BUTTON_PRESS_TEXT_COLOR);
   \   0000057A   0x2200             MOVS     R2,#+0
   \   0000057C   0x2101             MOVS     R1,#+1
   \   0000057E   0xF939 0x000A      LDRSH    R0,[R9, R10]
   \   00000582   0x.... 0x....      BL       BUTTON_SetTextColor
    611          	    	BUTTON_SetTextColor(buttonWifiKey[i].btnHandle, BUTTON_CI_UNPRESSED, gCfgItems.btn_textcolor);
   \   00000586   0x6AA2             LDR      R2,[R4, #+40]
   \   00000588   0x2100             MOVS     R1,#+0
   \   0000058A   0xF939 0x000A      LDRSH    R0,[R9, R10]
   \   0000058E   0x.... 0x....      BL       BUTTON_SetTextColor
    612          	    	BUTTON_SetTextAlign(buttonWifiKey[i].btnHandle,GUI_TA_HCENTER|GUI_TA_VCENTER);
   \   00000592   0x210E             MOVS     R1,#+14
   \   00000594   0xF939 0x000A      LDRSH    R0,[R9, R10]
   \   00000598   0x.... 0x....      BL       BUTTON_SetTextAlign
    613          	    	BUTTON_SetFont(buttonWifiKey[i].btnHandle,&GUI_FontHelvetica26);
   \   0000059C   0x4639             MOV      R1,R7
   \   0000059E   0xF939 0x000A      LDRSH    R0,[R9, R10]
   \   000005A2   0x.... 0x....      BL       BUTTON_SetFont
    614                          
    615                        BUTTON_SetBmpFileName(buttonWifiKey[i].btnHandle,NULL,1);
   \   000005A6   0x2201             MOVS     R2,#+1
   \   000005A8   0x2100             MOVS     R1,#+0
   \   000005AA   0xF939 0x000A      LDRSH    R0,[R9, R10]
   \   000005AE   0x.... 0x....      BL       BUTTON_SetBmpFileName
   \                     ??draw_Keyboard_3: (+1)
   \   000005B2   0x4640             MOV      R0,R8
   \   000005B4   0xF1A0 0x0801      SUB      R8,R0,#+1
   \   000005B8   0xFA5F 0xF888      UXTB     R8,R8
   \   000005BC   0x2800             CMP      R0,#+0
   \   000005BE   0xD059             BEQ.N    ??draw_Keyboard_6
   \   000005C0   0xF1B8 0x0F07      CMP      R8,#+7
   \   000005C4   0xDA17             BGE.N    ??draw_Keyboard_7
   \   000005C6   0x.... 0x....      BL       alloc_win_id
   \   000005CA   0x9003             STR      R0,[SP, #+12]
   \   000005CC   0x2000             MOVS     R0,#+0
   \   000005CE   0x9002             STR      R0,[SP, #+8]
   \   000005D0   0x2002             MOVS     R0,#+2
   \   000005D2   0x9001             STR      R0,[SP, #+4]
   \   000005D4   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   000005D8   0x9000             STR      R0,[SP, #+0]
   \   000005DA   0x232A             MOVS     R3,#+42
   \   000005DC   0x2243             MOVS     R2,#+67
   \   000005DE   0x2168             MOVS     R1,#+104
   \   000005E0   0xEB08 0x1008      ADD      R0,R8,R8, LSL #+4
   \   000005E4   0x0080             LSLS     R0,R0,#+2
   \   000005E6   0x.... 0x....      BL       BUTTON_CreateEx
   \   000005EA   0xEB08 0x0148      ADD      R1,R8,R8, LSL #+1
   \   000005EE   0x00C9             LSLS     R1,R1,#+3
   \   000005F0   0x4652             MOV      R2,R10
   \   000005F2   0x5288             STRH     R0,[R1, R2]
   \   000005F4   0xE7A3             B.N      ??draw_Keyboard_5
   \                     ??draw_Keyboard_7: (+1)
   \   000005F6   0xF1A8 0x0007      SUB      R0,R8,#+7
   \   000005FA   0x2807             CMP      R0,#+7
   \   000005FC   0xD21A             BCS.N    ??draw_Keyboard_8
   \   000005FE   0x.... 0x....      BL       alloc_win_id
   \   00000602   0x9003             STR      R0,[SP, #+12]
   \   00000604   0x2000             MOVS     R0,#+0
   \   00000606   0x9002             STR      R0,[SP, #+8]
   \   00000608   0x2002             MOVS     R0,#+2
   \   0000060A   0x9001             STR      R0,[SP, #+4]
   \   0000060C   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000610   0x9000             STR      R0,[SP, #+0]
   \   00000612   0x232A             MOVS     R3,#+42
   \   00000614   0x2243             MOVS     R2,#+67
   \   00000616   0x2193             MOVS     R1,#+147
   \   00000618   0xF1A8 0x0007      SUB      R0,R8,#+7
   \   0000061C   0xEB00 0x1C00      ADD      R12,R0,R0, LSL #+4
   \   00000620   0xEA4F 0x008C      LSL      R0,R12,#+2
   \   00000624   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000628   0xEB08 0x0148      ADD      R1,R8,R8, LSL #+1
   \   0000062C   0x00C9             LSLS     R1,R1,#+3
   \   0000062E   0x4652             MOV      R2,R10
   \   00000630   0x5288             STRH     R0,[R1, R2]
   \   00000632   0xE784             B.N      ??draw_Keyboard_5
   \                     ??draw_Keyboard_8: (+1)
   \   00000634   0xF1A8 0x000E      SUB      R0,R8,#+14
   \   00000638   0x2807             CMP      R0,#+7
   \   0000063A   0xF4BF 0xAF62      BCS.W    ??draw_Keyboard_4
   \   0000063E   0x.... 0x....      BL       alloc_win_id
   \   00000642   0x9003             STR      R0,[SP, #+12]
   \   00000644   0x2000             MOVS     R0,#+0
   \   00000646   0x9002             STR      R0,[SP, #+8]
   \   00000648   0x2002             MOVS     R0,#+2
   \   0000064A   0x9001             STR      R0,[SP, #+4]
   \   0000064C   0xF9B5 0x0002      LDRSH    R0,[R5, #+2]
   \   00000650   0x9000             STR      R0,[SP, #+0]
   \   00000652   0x232A             MOVS     R3,#+42
   \   00000654   0x2243             MOVS     R2,#+67
   \   00000656   0x21BE             MOVS     R1,#+190
   \   00000658   0xF1A8 0x000E      SUB      R0,R8,#+14
   \   0000065C   0xEB00 0x1C00      ADD      R12,R0,R0, LSL #+4
   \   00000660   0xEA4F 0x008C      LSL      R0,R12,#+2
   \   00000664   0x.... 0x....      BL       BUTTON_CreateEx
   \   00000668   0xEB08 0x0148      ADD      R1,R8,R8, LSL #+1
   \   0000066C   0x00C9             LSLS     R1,R1,#+3
   \   0000066E   0x4652             MOV      R2,R10
   \   00000670   0x5288             STRH     R0,[R1, R2]
   \   00000672   0xE764             B.N      ??draw_Keyboard_5
    616          	}
    617              	/*BUTTON_SetText(buttonkey[0].btnHandle, "0");
    618          		BUTTON_SetText(buttonkey[1].btnHandle, "1");
    619          		BUTTON_SetText(buttonkey[2].btnHandle, "2");
    620          		BUTTON_SetText(buttonkey[3].btnHandle, "3");*/
    621          		
    622          	key_value_calc.cnt = 0;
   \                     ??draw_Keyboard_6: (+1)
   \   00000674   0x....             LDR.N    R4,??DataTable18_9
   \   00000676   0x2000             MOVS     R0,#+0
   \   00000678   0x7020             STRB     R0,[R4, #+0]
    623          	memset(key_value_calc.password_value,0,sizeof(key_value_calc.password_value));
   \   0000067A   0x2212             MOVS     R2,#+18
   \   0000067C   0x4601             MOV      R1,R0
   \   0000067E   0x1C60             ADDS     R0,R4,#+1
   \   00000680   0x.... 0x....      BL       memset
    624          	memset(key_value_calc.password_disp,0,sizeof(key_value_calc.password_disp));
   \   00000684   0x2212             MOVS     R2,#+18
   \   00000686   0x2100             MOVS     R1,#+0
   \   00000688   0xF104 0x0013      ADD      R0,R4,#+19
   \   0000068C   0x.... 0x....      BL       memset
    625          	keyboard_stype = UPPER_CASE_LETTER;
   \   00000690   0x2000             MOVS     R0,#+0
   \   00000692   0x7028             STRB     R0,[R5, #+0]
    626              
    627          }
   \   00000694   0xB00E             ADD      SP,SP,#+56
   \   00000696   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    628          
    629          
    630          

   \                                 In section .text, align 2, keep-with-next
    631          void update_keyboard_disp(void)
    632          {
   \                     update_keyboard_disp: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    633          	int8_t i;
    634          	char buf[2];
    635          	switch(keyboard_stype)
   \   00000004   0x....             LDR.N    R4,??DataTable16
   \   00000006   0xF994 0x0000      LDRSB    R0,[R4, #+0]
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD005             BEQ.N    ??update_keyboard_disp_0
   \   0000000E   0x2802             CMP      R0,#+2
   \   00000010   0xD057             BEQ.N    ??update_keyboard_disp_1
   \   00000012   0xD32C             BCC.N    ??update_keyboard_disp_2
   \   00000014   0x2803             CMP      R0,#+3
   \   00000016   0xD06D             BEQ.N    ??update_keyboard_disp_3
   \   00000018   0xBD37             POP      {R0-R2,R4,R5,PC}
    636          	{
    637          		case UPPER_CASE_LETTER:
    638          			i=26;
   \                     ??update_keyboard_disp_0: (+1)
   \   0000001A   0x251A             MOVS     R5,#+26
   \   0000001C   0xE011             B.N      ??update_keyboard_disp_4
    639          			while(i--)
    640          			{
    641          				memset(buf,0,sizeof(buf));
   \                     ??update_keyboard_disp_5: (+1)
   \   0000001E   0x2202             MOVS     R2,#+2
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0xA801             ADD      R0,SP,#+4
   \   00000024   0x.... 0x....      BL       memset
    642          				buf[0] = 0x41 + i;
   \   00000028   0xF105 0x0041      ADD      R0,R5,#+65
   \   0000002C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    643          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
   \   00000030   0xA901             ADD      R1,SP,#+4
   \   00000032   0xB26D             SXTB     R5,R5
   \   00000034   0xEB05 0x0045      ADD      R0,R5,R5, LSL #+1
   \   00000038   0x00C0             LSLS     R0,R0,#+3
   \   0000003A   0x....             LDR.N    R2,??DataTable18_3
   \   0000003C   0x5E80             LDRSH    R0,[R0, R2]
   \   0000003E   0x.... 0x....      BL       BUTTON_SetText
    644          			}
   \                     ??update_keyboard_disp_4: (+1)
   \   00000042   0x4628             MOV      R0,R5
   \   00000044   0x1E45             SUBS     R5,R0,#+1
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD1E9             BNE.N    ??update_keyboard_disp_5
    645          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Down_Arrow_White.bin",1);
   \   0000004A   0x2201             MOVS     R2,#+1
   \   0000004C   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Down_Arrow...">`
   \   00000050   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   00000054   0x.... 0x....      BL       BUTTON_SetBmpFileName
    646              			BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   00000058   0x200A             MOVS     R0,#+10
   \   0000005A   0x9000             STR      R0,[SP, #+0]
   \   0000005C   0x2321             MOVS     R3,#+33
   \   0000005E   0xF104 0x0298      ADD      R2,R4,#+152
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   00000068   0x.... 0x....      BL       BUTTON_SetBitmapEx
    647          			break;
   \   0000006C   0xBD37             POP      {R0-R2,R4,R5,PC}
    648          		case LOWER_CASE_LETTER:
    649          			i=26;
   \                     ??update_keyboard_disp_2: (+1)
   \   0000006E   0x251A             MOVS     R5,#+26
   \   00000070   0xE011             B.N      ??update_keyboard_disp_6
    650          			while(i--)
    651          			{
    652          				memset(buf,0,sizeof(buf));
   \                     ??update_keyboard_disp_7: (+1)
   \   00000072   0x2202             MOVS     R2,#+2
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0xA801             ADD      R0,SP,#+4
   \   00000078   0x.... 0x....      BL       memset
    653          				buf[0] = 0x61 + i;
   \   0000007C   0xF105 0x0061      ADD      R0,R5,#+97
   \   00000080   0xF88D 0x0004      STRB     R0,[SP, #+4]
    654          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
   \   00000084   0xA901             ADD      R1,SP,#+4
   \   00000086   0xB26D             SXTB     R5,R5
   \   00000088   0xEB05 0x0045      ADD      R0,R5,R5, LSL #+1
   \   0000008C   0x00C0             LSLS     R0,R0,#+3
   \   0000008E   0x....             LDR.N    R2,??DataTable18_3
   \   00000090   0x5E80             LDRSH    R0,[R0, R2]
   \   00000092   0x.... 0x....      BL       BUTTON_SetText
    655          			}
   \                     ??update_keyboard_disp_6: (+1)
   \   00000096   0x4628             MOV      R0,R5
   \   00000098   0x1E45             SUBS     R5,R0,#+1
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD1E9             BNE.N    ??update_keyboard_disp_7
    656          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,"bmp_Toggle_Up_Arrow_White.bin",1);
   \   0000009E   0x2201             MOVS     R2,#+1
   \   000000A0   0x.... 0x....      ADR.W    R1,`?<Constant "bmp_Toggle_Up_Arrow_W...">`
   \   000000A4   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   000000A8   0x.... 0x....      BL       BUTTON_SetBmpFileName
    657              			BUTTON_SetBitmapEx(buttonArrow.btnHandle, 0, &bmp_struct_28x21,(FIRST_LINE_WIDTH-28)/2, (KEY_HEIGHT-21)/2);
   \   000000AC   0x200A             MOVS     R0,#+10
   \   000000AE   0x9000             STR      R0,[SP, #+0]
   \   000000B0   0x2321             MOVS     R3,#+33
   \   000000B2   0xF104 0x0298      ADD      R2,R4,#+152
   \   000000B6   0x2100             MOVS     R1,#+0
   \   000000B8   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   000000BC   0x.... 0x....      BL       BUTTON_SetBitmapEx
    658          			break;
   \   000000C0   0xBD37             POP      {R0-R2,R4,R5,PC}
    659          		case DIGITLA:
    660          			i=26;
   \                     ??update_keyboard_disp_1: (+1)
   \   000000C2   0x251A             MOVS     R5,#+26
    661          			while(i--)
   \                     ??update_keyboard_disp_8: (+1)
   \   000000C4   0x4628             MOV      R0,R5
   \   000000C6   0x1E45             SUBS     R5,R0,#+1
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xD02D             BEQ.N    ??update_keyboard_disp_9
    662          			{
    663          				memset(buf,0,sizeof(buf));
   \   000000CC   0x2202             MOVS     R2,#+2
   \   000000CE   0x2100             MOVS     R1,#+0
   \   000000D0   0xA801             ADD      R0,SP,#+4
   \   000000D2   0x.... 0x....      BL       memset
    664          				buf[0] = digital_key_value[i];
   \   000000D6   0xB26D             SXTB     R5,R5
   \   000000D8   0x1928             ADDS     R0,R5,R4
   \   000000DA   0xF890 0x0068      LDRB     R0,[R0, #+104]
   \   000000DE   0xF88D 0x0004      STRB     R0,[SP, #+4]
    665          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
   \   000000E2   0xA901             ADD      R1,SP,#+4
   \   000000E4   0xEB05 0x0045      ADD      R0,R5,R5, LSL #+1
   \   000000E8   0x00C0             LSLS     R0,R0,#+3
   \   000000EA   0x....             LDR.N    R2,??DataTable18_3
   \   000000EC   0x5E80             LDRSH    R0,[R0, R2]
   \   000000EE   0x.... 0x....      BL       BUTTON_SetText
   \   000000F2   0xE7E7             B.N      ??update_keyboard_disp_8
    666          			}
    667          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,NULL,1);
    668          			break;
    669          		case SYMBOL:
    670          			i=26;
   \                     ??update_keyboard_disp_3: (+1)
   \   000000F4   0x251A             MOVS     R5,#+26
   \   000000F6   0xE013             B.N      ??update_keyboard_disp_10
    671          			while(i--)
    672          			{
    673          				memset(buf,0,sizeof(buf));
   \                     ??update_keyboard_disp_11: (+1)
   \   000000F8   0x2202             MOVS     R2,#+2
   \   000000FA   0x2100             MOVS     R1,#+0
   \   000000FC   0xA801             ADD      R0,SP,#+4
   \   000000FE   0x.... 0x....      BL       memset
    674          				buf[0] = symbol_key_value[i];
   \   00000102   0xB26D             SXTB     R5,R5
   \   00000104   0x....             LDR.N    R0,??DataTable17_1
   \   00000106   0x1828             ADDS     R0,R5,R0
   \   00000108   0xF890 0x0030      LDRB     R0,[R0, #+48]
   \   0000010C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    675          				BUTTON_SetText(buttonWifiKey[i].btnHandle, (const char *)buf);
   \   00000110   0xA901             ADD      R1,SP,#+4
   \   00000112   0xEB05 0x0045      ADD      R0,R5,R5, LSL #+1
   \   00000116   0x00C0             LSLS     R0,R0,#+3
   \   00000118   0x....             LDR.N    R2,??DataTable18_3
   \   0000011A   0x5E80             LDRSH    R0,[R0, R2]
   \   0000011C   0x.... 0x....      BL       BUTTON_SetText
    676          			}
   \                     ??update_keyboard_disp_10: (+1)
   \   00000120   0x4628             MOV      R0,R5
   \   00000122   0x1E45             SUBS     R5,R0,#+1
   \   00000124   0x2800             CMP      R0,#+0
   \   00000126   0xD1E7             BNE.N    ??update_keyboard_disp_11
    677          			BUTTON_SetBmpFileName(buttonArrow.btnHandle,NULL,1);
   \                     ??update_keyboard_disp_9: (+1)
   \   00000128   0x2201             MOVS     R2,#+1
   \   0000012A   0x2100             MOVS     R1,#+0
   \   0000012C   0xF9B4 0x0034      LDRSH    R0,[R4, #+52]
   \   00000130   0x.... 0x....      BL       BUTTON_SetBmpFileName
    678          			break;
    679          		default:
    680          			break;
    681          	}
    682          }
   \   00000134   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    683          

   \                                 In section .text, align 2, keep-with-next
    684          void update_password_disp(void)
    685          {
    686          	if(key_value_calc.timer_count >= 1000)
   \                     update_password_disp: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable18_9
   \   00000002   0x6A81             LDR      R1,[R0, #+40]
   \   00000004   0xF5B1 0x7F7A      CMP      R1,#+1000
   \   00000008   0xD30E             BCC.N    ??update_password_disp_0
    687          	{
    688          		key_value_calc.timer = TIMER_STOP;
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0xF880 0x1025      STRB     R1,[R0, #+37]
    689          		key_value_calc.timer_count = 0;
   \   00000010   0x6281             STR      R1,[R0, #+40]
    690          		
    691          		key_value_calc.password_disp[key_value_calc.cnt-1] = (uint8_t)TEXT_PIONT_BOLD;
   \   00000012   0x2160             MOVS     R1,#+96
   \   00000014   0x7802             LDRB     R2,[R0, #+0]
   \   00000016   0x1812             ADDS     R2,R2,R0
   \   00000018   0x7491             STRB     R1,[R2, #+18]
    692          		
    693          		BUTTON_SetText(buttonPassword.btnHandle, (const char *)key_value_calc.password_disp);
   \   0000001A   0xF100 0x0113      ADD      R1,R0,#+19
   \   0000001E   0x....             LDR.N    R0,??DataTable18
   \   00000020   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000024   0x.... 0x....      B.W      BUTTON_SetText
    694          	}
    695          }
   \                     ??update_password_disp_0: (+1)
   \   00000028   0x4770             BX       LR               ;; return
    696          

   \                                 In section .text, align 2, keep-with-next
    697          void update_join_state_disp(void)
    698          {
   \                     update_join_state_disp: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    699          	if(key_value_calc.cnt == 0)
   \   00000002   0x....             LDR.N    R4,??DataTable18_10
   \   00000004   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000008   0x....             LDR.N    R1,??DataTable18_9
   \   0000000A   0x7809             LDRB     R1,[R1, #+0]
   \   0000000C   0x2900             CMP      R1,#+0
   \   0000000E   0xD10C             BNE.N    ??update_join_state_disp_0
    700              	{  
    701                		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0x3f3f3f);
   \   00000010   0x....             LDR.N    R5,??DataTable18_1  ;; 0x3f3f3f
   \   00000012   0x462A             MOV      R2,R5
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x.... 0x....      BL       BUTTON_SetTextColor
    702              		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0x3f3f3f);
   \   0000001A   0x462A             MOV      R2,R5
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   00000022   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000026   0x.... 0x....      B.W      BUTTON_SetTextColor
    703              	}
    704              	else
    705              	{
    706              		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_PRESSED, 0xffffff);
   \                     ??update_join_state_disp_0: (+1)
   \   0000002A   0xF06F 0x457F      MVN      R5,#-16777216
   \   0000002E   0x462A             MOV      R2,R5
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x.... 0x....      BL       BUTTON_SetTextColor
    707              		BUTTON_SetTextColor(buttonJoint.btnHandle, BUTTON_CI_UNPRESSED,0xffffff);
   \   00000036   0x462A             MOV      R2,R5
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0xF9B4 0x001C      LDRSH    R0,[R4, #+28]
   \   0000003E   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   00000042   0x.... 0x....      B.W      BUTTON_SetTextColor
    708              	}
    709          }
    710          

   \                                 In section .text, align 2, keep-with-next
    711          void Clear_Keyboard()
    712          {
   \                     Clear_Keyboard: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    713          	GUI_SetBkColor(gCfgItems.background_color);
   \   00000002   0x....             LDR.N    R0,??DataTable18_11
   \   00000004   0x6840             LDR      R0,[R0, #+4]
   \   00000006   0x.... 0x....      BL       GUI_SetBkColor
    714          	if(WM_IsWindow(hKeyboardWnd))
   \   0000000A   0x....             LDR.N    R4,??DataTable18_10
   \   0000000C   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   00000010   0x.... 0x....      BL       WM_IsWindow
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD005             BEQ.N    ??Clear_Keyboard_0
    715          	{
    716          		WM_DeleteWindow(hKeyboardWnd);
   \   00000018   0xF9B4 0x0002      LDRSH    R0,[R4, #+2]
   \   0000001C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000020   0x.... 0x....      B.W      WM_DeleteWindow
    717          		//GUI_Exec();   
    718          	}
    719          	
    720          	//GUI_Clear();    
    721          }
   \                     ??Clear_Keyboard_0: (+1)
   \   00000024   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x00979797         DC32     0x979797

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_1:
   \   00000000   0x........         DC32     key_value_calc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14_2:
   \   00000000   0x........         DC32     last_disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x........         DC32     wifi_list

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x........         DC32     keyboard_stype

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     tips_type

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x........         DC32     buttonSpace

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18:
   \   00000000   0x........         DC32     buttonPassword

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_1:
   \   00000000   0x003F3F3F         DC32     0x3f3f3f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_2:
   \   00000000   0x........         DC32     buttonDigital

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_3:
   \   00000000   0x........         DC32     buttonWifiKey

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_4:
   \   00000000   0x........         DC32     disp_state_stack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_5:
   \   00000000   0x........         DC32     disp_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_6:
   \   00000000   0x........         DC32     _Z13cbKeyboardWinP10WM_MESSAGE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_7:
   \   00000000   0x........         DC32     GUI_FontHelvetica36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_8:
   \   00000000   0x........         DC32     GUI_FontHelvetica26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_9:
   \   00000000   0x........         DC32     key_value_calc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_10:
   \   00000000   0x........         DC32     keyboard_stype

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable18_11:
   \   00000000   0x........         DC32     gCfgItems

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "abc">`:
   \   00000000   0x61 0x62          DC8 "abc"
   \              0x63 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "123">`:
   \   00000000   0x31 0x32          DC8 "123"
   \              0x33 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "#+=">`:
   \   00000000   0x23 0x2B          DC8 "#+="
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_backspace_white.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_backspace_white.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x73 0x70    
   \              0x61 0x63    
   \              0x65 0x5F    
   \              0x77 0x68    
   \              0x69 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Toggle_Up_Arrow_W...">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Toggle_Up_Arrow_White.bin"
   \              0x70 0x5F    
   \              0x54 0x6F    
   \              0x67 0x67    
   \              0x6C 0x65    
   \              0x5F 0x55    
   \              0x70 0x5F    
   \              0x41 0x72    
   \              0x72 0x6F    
   \              0x77 0x5F    
   \              0x57 0x68    
   \              0x69 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Toggle_Down_Arrow...">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Toggle_Down_Arrow_White.bin"
   \              0x70 0x5F    
   \              0x54 0x6F    
   \              0x67 0x67    
   \              0x6C 0x65    
   \              0x5F 0x44    
   \              0x6F 0x77    
   \              0x6E 0x5F    
   \              0x41 0x72    
   \              0x72 0x6F    
   \              0x77 0x5F    
   \              0x57 0x68    
   \              0x69 0x74    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_backspace_black.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_backspace_black.bin"
   \              0x70 0x5F    
   \              0x62 0x61    
   \              0x63 0x6B    
   \              0x73 0x70    
   \              0x61 0x63    
   \              0x65 0x5F    
   \              0x62 0x6C    
   \              0x61 0x63    
   \              0x6B 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Toggle_Down_Arrow...">_1`:
   \   00000000   0x62 0x6D          DC8 "bmp_Toggle_Down_Arrow_Black.bin"
   \              0x70 0x5F    
   \              0x54 0x6F    
   \              0x67 0x67    
   \              0x6C 0x65    
   \              0x5F 0x44    
   \              0x6F 0x77    
   \              0x6E 0x5F    
   \              0x41 0x72    
   \              0x72 0x6F    
   \              0x77 0x5F    
   \              0x42 0x6C    
   \              0x61 0x63    
   \              0x6B 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_Toggle_Up_Arrow_B...">`:
   \   00000000   0x62 0x6D          DC8 "bmp_Toggle_Up_Arrow_Black.bin"
   \              0x70 0x5F    
   \              0x54 0x6F    
   \              0x67 0x67    
   \              0x6C 0x65    
   \              0x5F 0x55    
   \              0x70 0x5F    
   \              0x41 0x72    
   \              0x72 0x6F    
   \              0x77 0x5F    
   \              0x42 0x6C    
   \              0x61 0x63    
   \              0x6B 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Join >">`:
   \   00000000   0x4A 0x6F          DC8 "Join >"
   \              0x69 0x6E    
   \              0x20 0x3E    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Password">`:
   \   00000000   0x50 0x61          DC8 "Password"
   \              0x73 0x73    
   \              0x77 0x6F    
   \              0x72 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "space">`:
   \   00000000   0x73 0x70          DC8 "space"
   \              0x61 0x63    
   \              0x65 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "bmp_keyboard_return.bin">`:
   \   00000000   0x62 0x6D          DC8 "bmp_keyboard_return.bin"
   \              0x70 0x5F    
   \              0x6B 0x65    
   \              0x79 0x62    
   \              0x6F 0x61    
   \              0x72 0x64    
   \              0x5F 0x72    
   \              0x65 0x74    
   \              0x75 0x72    
   \              0x6E 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    
    722          
    723          
    724          
    725          
    726          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Clear_Keyboard
         8   -> GUI_SetBkColor
         0   -> WM_DeleteWindow
         8   -> WM_IsWindow
      64   cbKeyboardWin(WM_MESSAGE *)
        64   -> BUTTON_SetBitmapEx
        64   -> BUTTON_SetBmpFileName
        64   -> BUTTON_SetText
        64   -> BUTTON_SetTextColor
        64   -> Clear_Keyboard
        64   -> GUI_FillRect
        64   -> GUI_SetColor
        64   -> draw_Tips
        64   -> draw_return_ui
        64   -> memcpy
        64   -> memset
        64   -> package_to_wifi(WIFI_RET_TYPE, char *, int)
        64   -> raw_send_to_wifi(char *, int)
        64   -> strncpy
        64   -> update_keyboard_disp
      88   draw_Keyboard
        88   -> BUTTON_CreateEx
        88   -> BUTTON_SetBitmapEx
        88   -> BUTTON_SetBkColor
        88   -> BUTTON_SetBmpFileName
        88   -> BUTTON_SetFont
        88   -> BUTTON_SetText
        88   -> BUTTON_SetTextAlign
        88   -> BUTTON_SetTextColor
        88   -> GUI_Clear
        88   -> GUI_SetBkColor
        88   -> GUI_SetColor
        88   -> WM_CreateWindow
        88   -> alloc_win_id
        88   -> memset
      16   update_join_state_disp
         0   -> BUTTON_SetTextColor
        16   -> BUTTON_SetTextColor
      24   update_keyboard_disp
        24   -> BUTTON_SetBitmapEx
        24   -> BUTTON_SetBmpFileName
        24   -> BUTTON_SetText
        24   -> memset
       0   update_password_disp
         0   -> BUTTON_SetText


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "#+=">
       4  ?<Constant "123">
       8  ?<Constant "Join >">
      12  ?<Constant "Password">
       4  ?<Constant "abc">
      32  ?<Constant "bmp_Toggle_Down_Arrow...">
      32  ?<Constant "bmp_Toggle_Down_Arrow...">_1
      32  ?<Constant "bmp_Toggle_Up_Arrow_B...">
      32  ?<Constant "bmp_Toggle_Up_Arrow_W...">
      24  ?<Constant "bmp_backspace_black.bin">
      24  ?<Constant "bmp_backspace_white.bin">
      24  ?<Constant "bmp_keyboard_return.bin">
       8  ?<Constant "space">
       4  ??DataTable14
       4  ??DataTable14_1
       4  ??DataTable14_2
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable16
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable18
       4  ??DataTable18_1
       4  ??DataTable18_10
       4  ??DataTable18_11
       4  ??DataTable18_2
       4  ??DataTable18_3
       4  ??DataTable18_4
       4  ??DataTable18_5
       4  ??DataTable18_6
       4  ??DataTable18_7
       4  ??DataTable18_8
       4  ??DataTable18_9
      38  Clear_Keyboard
      48  buttonDigital
          buttonSymbol
      48  buttonPassword
          buttonLetter
      76  buttonSpace
          buttondel2
          symbol_key_value
     624  buttonWifiKey
    1940  cbKeyboardWin(WM_MESSAGE *)
    1690  draw_Keyboard
      44  key_value_calc
     172  keyboard_stype
          hKeyboardWnd
          buttonRet
          buttonJoint
          buttonArrow
          keyboard_menu
          digital_key_value
          bmp_struct_32x21
          bmp_struct_28x21
      70  update_join_state_disp
     310  update_keyboard_disp
      42  update_password_disp

 
   764 bytes in section .bss
   248 bytes in section .data
    12 bytes in section .rodata
 4 398 bytes in section .text
 
 4 398 bytes of CODE  memory
    12 bytes of CONST memory
 1 012 bytes of DATA  memory

Errors: none
Warnings: 27
