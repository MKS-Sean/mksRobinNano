###############################################################################
#
# IAR ANSI C/C++ Compiler V7.10.1.6676/W32 for ARM        14/Feb/2020  17:05:45
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Middlewares\Third_Party\FatFs\src\option\mycc936.c
#    Command line =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Middlewares\Third_Party\FatFs\src\option\mycc936.c
#        -D USE_HAL_DRIVER -D STM32F103xE -D STM32F10X_HD -D USE_HAL_LIB -D
#        MKS_ROBIN_NANO -D TFT35 -lC
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        -lA
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\
#        --diag_suppress Pa050 -o
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --char_is_signed --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Full.h" -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src/drivers\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Core/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/ST/STM32_USB_Host_Library/Class/MSC/Inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Device/ST/STM32F1xx/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/Third_Party/FatFs/src\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/CMSIS/Include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/variant\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/at24cxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/w25qxx\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/BSP/Components/lcd\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/STM32F10x_StdPeriph_Driver/inc\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Drivers/libstmf4/include\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../Middlewares/arduino/stm32/cores/arduino\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../User/ui\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../User/ui/Multi_language\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM/../User/ui/QRENCODE\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\GUI\
#        -I
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\..\Middlewares\Third_Party\Marlin\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.0\arm\CMSIS\Include\"
#    List file    =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/List\mycc936.lst
#    Object file  =  
#        E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\EWARM\mksRobinNano/Obj\mycc936.o
#
###############################################################################

E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Middlewares\Third_Party\FatFs\src\option\mycc936.c
      1          /*------------------------------------------------------------------------*/
      2          /* Unicode - OEM code bidirectional converter  (C)ChaN, 2009              */
      3          /*                                                                        */
      4          /* CP936 (Simplified Chinese GBK)                                         */
      5          /*------------------------------------------------------------------------*/
      6          #include "ff.h"
      7          #include "stm32f1xx.h"
      8          #include "pic_manager.h"
      9          #include "spi_flash.h"

  #define IS_SPI_DIRECTION_MODE(MODE) (((MODE) == SPI_Direction_2Lines_FullDuplex) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",132  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_DIRECTION_MODE" (declared
          at line 466 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_MODE(MODE) (((MODE) == SPI_Mode_Master) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",146  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_MODE" (declared at line
          459 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_DATASIZE(DATASIZE) (((DATASIZE) == SPI_DataSize_16b) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",158  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_DATASIZE" (declared at
          line 488 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CPOL(CPOL) (((CPOL) == SPI_CPOL_Low) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",170  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CPOL" (declared at line
          496 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CPHA(CPHA) (((CPHA) == SPI_CPHA_1Edge) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",182  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CPHA" (declared at line
          504 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_NSS(NSS) (((NSS) == SPI_NSS_Soft) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",194  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_NSS" (declared at line
          512 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_BAUDRATE_PRESCALER(PRESCALER) (((PRESCALER) == SPI_BaudRatePrescaler_2) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",212  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_BAUDRATE_PRESCALER"
          (declared at line 521 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_FIRST_BIT(BIT) (((BIT) == SPI_FirstBit_MSB) || \
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",230  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_FIRST_BIT" (declared at
          line 535 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define SPI_FLAG_CRCERR                 ((uint16_t)0x0010)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",408  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_FLAG_CRCERR" (declared at
          line 308 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define SPI_FLAG_MODF                   ((uint16_t)0x0020)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",409  Warning[Pe047]: 
          incompatible redefinition of macro "SPI_FLAG_MODF" (declared at line
          309 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #define IS_SPI_CRC_POLYNOMIAL(POLYNOMIAL) ((POLYNOMIAL) >= 0x1)
          ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\STM32F10x_StdPeriph_Driver\inc\stm32f10x_spi.h",425  Warning[Pe047]: 
          incompatible redefinition of macro "IS_SPI_CRC_POLYNOMIAL" (declared
          at line 558 of
          "E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4
          _source\Drivers\STM32F1xx_HAL_Driver\Inc\stm32f1xx_hal_spi.h")

  #else defined(MKS_ROBIN_NANO)
        ^
"E:\code\Robin_Nano_SVN\branches\robin_nano35源码\robin_nano35_v1.0.4_source\Drivers\BSP\Components\w25qxx\spi_flash.h",40  Warning[Pe014]: 
          extra text after expected end of preprocessing directive
     10          
     11          //字库
     12          //#define FONTINFOADDR	0x600000//6M以后地址为字库
     13          //#define UNIGBK_FLASH_ADDR		(FONTINFOADDR+4096)//4*1024
     14          //#define GBK_FLASH_ADDR	(UNIGBK_FLASH_ADDR+180224)//176*1024
     15          
     16          
     17          
     18          #if !_USE_LFN || _CODE_PAGE != 936
     19          #error This file is not needed in current configuration. Remove from the project.
     20          #endif
     21          
     22          extern volatile u32 ugbksize;
     23          

   \                                 In section .text, align 2, keep-with-next
     24          WCHAR ff_convert (	/* Converted code, 0 means conversion error */
     25          	WCHAR	src,	/* Character code to be converted */
     26          	UINT	dir		/* 0: Unicode to OEMCP, 1: OEMCP to Unicode */
     27          )
     28          {
   \                     ff_convert: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x460E             MOV      R6,R1
     29          	WCHAR t[2];
     30          	WCHAR c;
     31          	u32 i, li, hi;
     32          	u16 n;			 
     33          	u32 gbk2uni_offset=0;	
   \   00000008   0x2500             MOVS     R5,#+0
     34          	SPI_FLASH_BufferRead((u8*)&ugbksize,FONTINFOADDR,sizeof(ugbksize));
   \   0000000A   0x....             LDR.N    R7,??DataTable2
   \   0000000C   0x2204             MOVS     R2,#+4
   \   0000000E   0xF44F 0x01C0      MOV      R1,#+6291456
   \   00000012   0x4638             MOV      R0,R7
   \   00000014   0x.... 0x....      BL       SPI_FLASH_BufferRead
     35          	if (src < 0x80)c = src;//ASCII,直接不用转换.
   \   00000018   0x2C80             CMP      R4,#+128
   \   0000001A   0xDB2F             BLT.N    ??ff_convert_0
     36          	else 
     37          	{ 
     38           		if(dir)	//GBK 2 UNICODE
   \   0000001C   0x2E00             CMP      R6,#+0
   \   0000001E   0xD001             BEQ.N    ??ff_convert_1
     39          		{
     40          			gbk2uni_offset=ugbksize/2;	 
   \   00000020   0x6838             LDR      R0,[R7, #+0]
   \   00000022   0x0845             LSRS     R5,R0,#+1
     41          		}else	//UNICODE 2 GBK  
     42          		{   
     43          			gbk2uni_offset=0;	
     44          		}    
     45          		/* Unicode to OEMCP */
     46          		hi=ugbksize/2;//对半开.
   \                     ??ff_convert_1: (+1)
   \   00000024   0x6838             LDR      R0,[R7, #+0]
   \   00000026   0x0840             LSRS     R0,R0,#+1
     47          		hi =hi / 4 - 1;
   \   00000028   0x0880             LSRS     R0,R0,#+2
   \   0000002A   0x1E47             SUBS     R7,R0,#+1
     48          		li = 0;
   \   0000002C   0x2600             MOVS     R6,#+0
     49          		for (n = 16; n; n--)
   \   0000002E   0xF04F 0x0810      MOV      R8,#+16
   \   00000032   0xE002             B.N      ??ff_convert_2
     50          		{
     51          			i = li + (hi - li) / 2;	
     52          			//SPI_FLASH_BufferRead((u8*)&t,ftinfo.ugbkaddr+i*4+gbk2uni_offset,4);//读出4个字节  
     53                     
     54          			SPI_FLASH_BufferRead((u8*)&t,UNIGBK_FLASH_ADDR+i*4+gbk2uni_offset,4);//读出4个字节  
     55          			if (src == t[0]) break;
     56          			if (src > t[0])li = i;  
     57          			else hi = i;    
   \                     ??ff_convert_3: (+1)
   \   00000034   0x464F             MOV      R7,R9
   \                     ??ff_convert_4: (+1)
   \   00000036   0xF1A8 0x0801      SUB      R8,R8,#+1
   \                     ??ff_convert_2: (+1)
   \   0000003A   0xFA1F 0xF888      UXTH     R8,R8
   \   0000003E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000042   0xD014             BEQ.N    ??ff_convert_5
   \   00000044   0x1BB8             SUBS     R0,R7,R6
   \   00000046   0xEB06 0x0950      ADD      R9,R6,R0, LSR #+1
   \   0000004A   0x2204             MOVS     R2,#+4
   \   0000004C   0xEB05 0x0089      ADD      R0,R5,R9, LSL #+2
   \   00000050   0xF500 0x01C0      ADD      R1,R0,#+6291456
   \   00000054   0xF501 0x5180      ADD      R1,R1,#+4096
   \   00000058   0xA800             ADD      R0,SP,#+0
   \   0000005A   0x.... 0x....      BL       SPI_FLASH_BufferRead
   \   0000005E   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000062   0x4284             CMP      R4,R0
   \   00000064   0xD003             BEQ.N    ??ff_convert_5
   \   00000066   0x42A0             CMP      R0,R4
   \   00000068   0xD2E4             BCS.N    ??ff_convert_3
   \   0000006A   0x464E             MOV      R6,R9
   \   0000006C   0xE7E3             B.N      ??ff_convert_4
     58          		}
     59          		c = n ? t[1] : 0;  	    
   \                     ??ff_convert_5: (+1)
   \   0000006E   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000072   0xD002             BEQ.N    ??ff_convert_6
   \   00000074   0xF8BD 0x4002      LDRH     R4,[SP, #+2]
   \   00000078   0xE000             B.N      ??ff_convert_0
   \                     ??ff_convert_6: (+1)
   \   0000007A   0x2400             MOVS     R4,#+0
     60          	}
     61          	return c;
   \                     ??ff_convert_0: (+1)
   \   0000007C   0x4620             MOV      R0,R4
   \   0000007E   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
     62          }
     63          
     64          
     65          

   \                                 In section .text, align 2, keep-with-next
     66          WCHAR ff_wtoupper (	/* Upper converted character */
     67          	WCHAR chr		/* Input character */
     68          )
     69          {
     70          	static const WCHAR tbl_lower[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };
     71          	static const WCHAR tbl_upper[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };
     72          	int i;
     73          
     74          
     75          	for (i = 0; tbl_lower[i] && chr != tbl_lower[i]; i++) ;
   \                     ff_wtoupper: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0xE000             B.N      ??ff_wtoupper_0
   \                     ??ff_wtoupper_1: (+1)
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \                     ??ff_wtoupper_0: (+1)
   \   00000006   0x.... 0x....      ADR.W    R2,??tbl_lower
   \   0000000A   0xF832 0x2011      LDRH     R2,[R2, R1, LSL #+1]
   \   0000000E   0x2A00             CMP      R2,#+0
   \   00000010   0xD001             BEQ.N    ??ff_wtoupper_2
   \   00000012   0x4290             CMP      R0,R2
   \   00000014   0xD1F6             BNE.N    ??ff_wtoupper_1
     76          
     77          	return tbl_lower[i] ? tbl_upper[i] : chr;
   \                     ??ff_wtoupper_2: (+1)
   \   00000016   0x2A00             CMP      R2,#+0
   \   00000018   0xD003             BEQ.N    ??ff_wtoupper_3
   \   0000001A   0x.... 0x....      ADR.W    R0,??tbl_upper
   \   0000001E   0xF830 0x0011      LDRH     R0,[R0, R1, LSL #+1]
   \                     ??ff_wtoupper_3: (+1)
   \   00000022   0x4770             BX       LR               ;; return
     78          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??tbl_lower:
   \   00000000   0x0061 0x0062      DC16 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110
   \              0x0063 0x0064
   \              0x0065 0x0066
   \              0x0067 0x0068
   \              0x0069 0x006A
   \              0x006B 0x006C
   \              0x006D 0x006E
   \   0000001C   0x006F 0x0070      DC16 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 161
   \              0x0071 0x0072
   \              0x0073 0x0074
   \              0x0075 0x0076
   \              0x0077 0x0078
   \              0x0079 0x007A
   \              0x00A1       
   \   00000036   0x00A2 0x00A3      DC16 162, 163, 165, 172, 175, 224, 225, 226, 227, 228, 229, 230, 231
   \              0x00A5 0x00AC
   \              0x00AF 0x00E0
   \              0x00E1 0x00E2
   \              0x00E3 0x00E4
   \              0x00E5 0x00E6
   \              0x00E7       
   \   00000050   0x00E8 0x00E9      DC16 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244
   \              0x00EA 0x00EB
   \              0x00EC 0x00ED
   \              0x00EE 0x00EF
   \              0x00F0 0x00F1
   \              0x00F2 0x00F3
   \              0x00F4       
   \   0000006A   0x00F5 0x00F6      DC16 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261
   \              0x00F8 0x00F9
   \              0x00FA 0x00FB
   \              0x00FC 0x00FD
   \              0x00FE 0x00FF
   \              0x0101 0x0103
   \              0x0105       
   \   00000084   0x0107 0x0109      DC16 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287
   \              0x010B 0x010D
   \              0x010F 0x0111
   \              0x0113 0x0115
   \              0x0117 0x0119
   \              0x011B 0x011D
   \              0x011F       
   \   0000009E   0x0121 0x0123      DC16 289, 291, 293, 295, 297, 299, 301, 303, 305, 307, 309, 311, 314
   \              0x0125 0x0127
   \              0x0129 0x012B
   \              0x012D 0x012F
   \              0x0131 0x0133
   \              0x0135 0x0137
   \              0x013A       
   \   000000B8   0x013C 0x013E      DC16 316, 318, 320, 322, 324, 326, 328, 331, 333, 335, 337, 339, 341
   \              0x0140 0x0142
   \              0x0144 0x0146
   \              0x0148 0x014B
   \              0x014D 0x014F
   \              0x0151 0x0153
   \              0x0155       
   \   000000D2   0x0157 0x0159      DC16 343, 345, 347, 349, 351, 353, 355, 357, 359, 361, 363, 365, 367
   \              0x015B 0x015D
   \              0x015F 0x0161
   \              0x0163 0x0165
   \              0x0167 0x0169
   \              0x016B 0x016D
   \              0x016F       
   \   000000EC   0x0171 0x0173      DC16 369, 371, 373, 375, 378, 380, 382, 402, 945, 946, 947, 948, 949
   \              0x0175 0x0177
   \              0x017A 0x017C
   \              0x017E 0x0192
   \              0x03B1 0x03B2
   \              0x03B3 0x03B4
   \              0x03B5       
   \   00000106   0x03B6 0x03B7      DC16 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 963
   \              0x03B8 0x03B9
   \              0x03BA 0x03BB
   \              0x03BC 0x03BD
   \              0x03BE 0x03BF
   \              0x03C0 0x03C1
   \              0x03C3       
   \   00000120   0x03C4 0x03C5      DC16 964, 965, 966, 967, 968, 969, 970, 1072, 1073, 1074, 1075, 1076
   \              0x03C6 0x03C7
   \              0x03C8 0x03C9
   \              0x03CA 0x0430
   \              0x0431 0x0432
   \              0x0433 0x0434
   \   00000138   0x0435 0x0436      DC16 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087
   \              0x0437 0x0438
   \              0x0439 0x043A
   \              0x043B 0x043C
   \              0x043D 0x043E
   \              0x043F       
   \   0000014E   0x0440 0x0441      DC16 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098
   \              0x0442 0x0443
   \              0x0444 0x0445
   \              0x0446 0x0447
   \              0x0448 0x0449
   \              0x044A       
   \   00000164   0x044B 0x044C      DC16 1099, 1100, 1101, 1102, 1103, 1105, 1106, 1107, 1108, 1109, 1110
   \              0x044D 0x044E
   \              0x044F 0x0451
   \              0x0452 0x0453
   \              0x0454 0x0455
   \              0x0456       
   \   0000017A   0x0457 0x0458      DC16 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 8560, 8561, 8562
   \              0x0459 0x045A
   \              0x045B 0x045C
   \              0x045E 0x045F
   \              0x2170 0x2171
   \              0x2172       
   \   00000190   0x2173 0x2174      DC16 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573
   \              0x2175 0x2176
   \              0x2177 0x2178
   \              0x2179 0x217A
   \              0x217B 0x217C
   \              0x217D       
   \   000001A6   0x217E 0x217F      DC16 8574, 8575, 65345, 65346, 65347, 65348, 65349, 65350, 65351, 65352
   \              0xFF41 0xFF42
   \              0xFF43 0xFF44
   \              0xFF45 0xFF46
   \              0xFF47 0xFF48
   \   000001BA   0xFF49 0xFF4A      DC16 65353, 65354, 65355, 65356, 65357, 65358, 65359, 65360, 65361
   \              0xFF4B 0xFF4C
   \              0xFF4D 0xFF4E
   \              0xFF4F 0xFF50
   \              0xFF51       
   \   000001CC   0xFF52 0xFF53      DC16 65362, 65363, 65364, 65365, 65366, 65367, 65368, 65369, 65370, 0
   \              0xFF54 0xFF55
   \              0xFF56 0xFF57
   \              0xFF58 0xFF59
   \              0xFF5A 0x0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??tbl_upper:
   \   00000000   0x0041 0x0042      DC16 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81
   \              0x0043 0x0044
   \              0x0045 0x0046
   \              0x0047 0x0048
   \              0x0049 0x004A
   \              0x004B 0x004C
   \              0x004D 0x004E
   \              0x004F 0x0050
   \              0x0051       
   \   00000022   0x0052 0x0053      DC16 82, 83, 84, 85, 86, 87, 88, 89, 90, 33, 65504, 65505, 65509, 65506
   \              0x0054 0x0055
   \              0x0056 0x0057
   \              0x0058 0x0059
   \              0x005A 0x0021
   \              0xFFE0 0xFFE1
   \              0xFFE5 0xFFE2
   \   0000003E   0xFFE3 0x00C0      DC16 65507, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
   \              0x00C1 0x00C2
   \              0x00C3 0x00C4
   \              0x00C5 0x00C6
   \              0x00C7 0x00C8
   \              0x00C9 0x00CA
   \              0x00CB       
   \   00000058   0x00CC 0x00CD      DC16 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217
   \              0x00CE 0x00CF
   \              0x00D0 0x00D1
   \              0x00D2 0x00D3
   \              0x00D4 0x00D5
   \              0x00D6 0x00D8
   \              0x00D9       
   \   00000072   0x00DA 0x00DB      DC16 218, 219, 220, 221, 222, 376, 256, 258, 260, 262, 264, 266, 268
   \              0x00DC 0x00DD
   \              0x00DE 0x0178
   \              0x0100 0x0102
   \              0x0104 0x0106
   \              0x0108 0x010A
   \              0x010C       
   \   0000008C   0x010E 0x0110      DC16 270, 272, 274, 276, 278, 280, 282, 284, 286, 288, 290, 292, 294
   \              0x0112 0x0114
   \              0x0116 0x0118
   \              0x011A 0x011C
   \              0x011E 0x0120
   \              0x0122 0x0124
   \              0x0126       
   \   000000A6   0x0128 0x012A      DC16 296, 298, 300, 302, 304, 306, 308, 310, 313, 315, 317, 319, 321
   \              0x012C 0x012E
   \              0x0130 0x0132
   \              0x0134 0x0136
   \              0x0139 0x013B
   \              0x013D 0x013F
   \              0x0141       
   \   000000C0   0x0143 0x0145      DC16 323, 325, 327, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348
   \              0x0147 0x014A
   \              0x014C 0x014E
   \              0x0150 0x0152
   \              0x0154 0x0156
   \              0x0158 0x015A
   \              0x015C       
   \   000000DA   0x015E 0x0160      DC16 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374
   \              0x0162 0x0164
   \              0x0166 0x0168
   \              0x016A 0x016C
   \              0x016E 0x0170
   \              0x0172 0x0174
   \              0x0176       
   \   000000F4   0x0179 0x017B      DC16 377, 379, 381, 401, 913, 914, 915, 916, 917, 918, 919, 920, 921
   \              0x017D 0x0191
   \              0x0391 0x0392
   \              0x0393 0x0394
   \              0x0395 0x0396
   \              0x0397 0x0398
   \              0x0399       
   \   0000010E   0x039A 0x039B      DC16 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935
   \              0x039C 0x039D
   \              0x039E 0x039F
   \              0x03A0 0x03A1
   \              0x03A3 0x03A4
   \              0x03A5 0x03A6
   \              0x03A7       
   \   00000128   0x03A8 0x03A9      DC16 936, 937, 938, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047
   \              0x03AA 0x0410
   \              0x0411 0x0412
   \              0x0413 0x0414
   \              0x0415 0x0416
   \              0x0417       
   \   0000013E   0x0418 0x0419      DC16 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058
   \              0x041A 0x041B
   \              0x041C 0x041D
   \              0x041E 0x041F
   \              0x0420 0x0421
   \              0x0422       
   \   00000154   0x0423 0x0424      DC16 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069
   \              0x0425 0x0426
   \              0x0427 0x0428
   \              0x0429 0x042A
   \              0x042B 0x042C
   \              0x042D       
   \   0000016A   0x042E 0x042F      DC16 1070, 1071, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033
   \              0x0401 0x0402
   \              0x0403 0x0404
   \              0x0405 0x0406
   \              0x0407 0x0408
   \              0x0409       
   \   00000180   0x040A 0x040B      DC16 1034, 1035, 1036, 1038, 1039, 8544, 8545, 8546, 8547, 8548, 8549
   \              0x040C 0x040E
   \              0x040F 0x2160
   \              0x2161 0x2162
   \              0x2163 0x2164
   \              0x2165       
   \   00000196   0x2166 0x2167      DC16 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 65313
   \              0x2168 0x2169
   \              0x216A 0x216B
   \              0x216C 0x216D
   \              0x216E 0x216F
   \              0xFF21       
   \   000001AC   0xFF22 0xFF23      DC16 65314, 65315, 65316, 65317, 65318, 65319, 65320, 65321, 65322
   \              0xFF24 0xFF25
   \              0xFF26 0xFF27
   \              0xFF28 0xFF29
   \              0xFF2A       
   \   000001BE   0xFF2B 0xFF2C      DC16 65323, 65324, 65325, 65326, 65327, 65328, 65329, 65330, 65331
   \              0xFF2D 0xFF2E
   \              0xFF2F 0xFF30
   \              0xFF31 0xFF32
   \              0xFF33       
   \   000001D0   0xFF34 0xFF35      DC16 65332, 65333, 65334, 65335, 65336, 65337, 65338, 0
   \              0xFF36 0xFF37
   \              0xFF38 0xFF39
   \              0xFF3A 0x0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ugbksize

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   ff_convert
        32   -> SPI_FLASH_BufferRead
       0   ff_wtoupper


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
     130  ff_convert
      36  ff_wtoupper
     480  tbl_lower
     480  tbl_upper

 
 1 130 bytes in section .text
 
 1 130 bytes of CODE memory

Errors: none
Warnings: 12
